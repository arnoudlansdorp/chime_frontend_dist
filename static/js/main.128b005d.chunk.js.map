{"version":3,"sources":["config.js","components/chime/ChimeSdkWrapper.js","components/chimeWeb/Error.jsx","assets/Logo.svg","components/chimeWeb/Alert.jsx","components/chimeWeb/Welcome.jsx","components/chimeWeb/Join.jsx","assets/RaiseBtn/Raise-Hand.svg","assets/svgs/close.svg","assets/svgs/un-line.svg","components/chat/Chat.jsx","assets/svgs/mute.svg","assets/svgs/camera.svg","assets/svgs/share.svg","assets/svgs/hand.svg","assets/svgs/qa.svg","assets/svgs/qaa.svg","assets/svgs/user.svg","assets/svgs/usera.svg","components/chimeWeb/Controls.jsx","components/chimeWeb/Settings.jsx","components/chimeWeb/LocalVideo.jsx","components/chimeWeb/RemoteVideo.jsx","components/chimeWeb/RemoteVideoGroup.jsx","components/chimeWeb/AlertWaiting.jsx","assets/UoL.svg","assets/svgs/v-icon.svg","components/chimeWeb/Meeting.jsx","components/chimeWeb/Host.jsx","components/chimeWeb/End.jsx","components/chimeWeb/AlertRemoved.jsx","components/App.js","serviceWorker.js","index.js"],"names":["BASE_HREF","CHIME_ROOM_API","DEFAULT_VIDEO_STREAM","CHAT_WEBSOCKET","DEBUG","ChimeSdkWrapper","this","initializeSdkWrapper","meetingSession","audioVideo","title","name","region","currentAudioInputDevice","currentAudioOutputDevice","currentVideoInputDevice","audioInputDevices","audioOutputDevices","videoInputDevices","devicesUpdatedCallbacks","roster","rosterUpdateCallbacks","configuration","messagingSocket","messageUpdateCallbacks","error","console","role","playbackURL","a","payload","fetch","config","method","body","JSON","stringify","response","json","Error","JoinInfo","MeetingSessionConfiguration","Meeting","Attendee","initializeMeetingSession","Title","logger","ConsoleLogger","LogLevel","ERROR","deviceController","DefaultDeviceController","DefaultMeetingSession","listAudioInputDevices","forEach","mediaDeviceInfo","push","label","value","deviceId","listAudioOutputDevices","listVideoInputDevices","publishDevicesUpdated","addDeviceChangeObserver","realtimeSubscribeToAttendeeIdPresence","presentAttendeeId","present","publishRosterUpdate","realtimeSubscribeToVolumeIndicator","attendeeId","volume","muted","signalStrength","DefaultModality","base","Math","round","encodeURIComponent","AttendeeInfo","Name","element","logError","window","addEventListener","event","reason","audioInputs","length","chooseAudioInputDevice","audioOutputs","chooseAudioOutputDevice","videoInputs","chooseVideoInputDevice","bindAudioElement","start","messagingUrl","meetingId","credentials","joinToken","ReconnectingPromisedWebSocket","DefaultPromisedWebSocketFactory","DefaultDOMWebSocketFactory","FullJitterBackoff","open","WEB_SOCKET_TIMEOUT_MS","data","parse","publishMessageUpdate","type","timestampMs","Date","now","message","send","end","stop","device","freshAudioInputDeviceList","hasCurrentDevice","freshAudioOutputDeviceList","freshVideoInputDeviceList","callback","index","indexOf","splice","throttle","i","ROSTER_THROTTLE_MS","handleKeyDown","e","keyCode","props","closeError","handleClick","node","target","isModal","classList","contains","parentNode","handleGoCreateRoom","location","replace","document","removeEventListener","className","onClick","viewBox","xmlns","d","errorMsg","Component","Alert","src","logo","alt","href","rel","withRouter","Welcome","state","username","showError","isAvailable","handleNameChange","setState","handleRoomChange","handlePlaybackURLChange","handleCreateRoom","preventDefault","stopPropagation","createRoom","setErrorMsg","baseHref","inputRef","React","createRef","qs","URLSearchParams","search","get","current","focus","navigator","mediaDevices","enumerateDevices","log","test","userAgent","MSStream","history","sessionStorage","setItem","createRoomDisabled","Fragment","action","placeholder","ref","onChange","disabled","Join","joinRoom","handleJoinRoom","room","joinRoomDisabled","Chat","scrollToBottom","handleChange","str","sendMessage","handleSendMobile","handleRoomClick","link","origin","pathname","copyTextToClipboard","encodeURI","setShowPopup","showPopup","setTimeout","text","clipboard","writeText","then","err","parseUrls","userInput","match","formattedMatch","startsWith","renderMessages","messages","sort","compare","map","formattedMessage","dangerouslySetInnerHTML","__html","data-tip","data-for","handleUpVote","id","place","effect","vote","handleRemoveMessage","connection","handleTabChange","changeTab","handlDownRaiseHand","participant","raisehand","handlePartMute","mute","handleRemovePart","confirmAlert","buttons","handleMakeHost","renderParticipants","participants","RaiseHandIcon","isVideoChat","unIcon","tabIndex","chatRef","messagesEndRef","b","isChrome","isIOS","iosChromeClassForInput","iosChromeClassForMessages","closeChat","closeIcon","onSelect","selectedIndex","isChat","maxLength","rows","onKeyDown","Controls","videoStatus","shareScreenStatue","openChatStatus","openParticipantsStatus","muteButtonOnClick","chime","realtimeUnmuteLocalAudio","realtimeMuteLocalAudio","setMute","raiseButtonOnClick","handRaiseStatus","handlGoToLive","shareButtonOnClick","stopContentShare","startContentShareFromScreenCapture","videoButtonOnClick","isLive","selectedDevice","toLowerCase","includes","startLocalVideoTile","stopLocalVideoTile","setLocalCamera","endButtonOnClick","leaveroom","isEnd","leaveRoom","removeItem","ssName","whereTo","reload","toggleChat","openChat","togglePT","openPT","realtimeSubscribeToMuteAndUnmuteLocalAudio","addObserver","videoTileDidUpdate","tileState","realtimeUnsubscribeToMuteAndUnmuteLocalAudio","mic_controls","cam_controls","hand_controls","share_controls","muteIcon","cameraIcon","shareIcon","handIcon","isOpenChat","qaaIcon","qaIcon","useraIcon","userIcon","Settings","microphone","speaker","camera","devicesUpdatedCallback","fullDeviceInfo","closeSettings","handleMicrophoneChange","o","handleSpeakerChange","handleCameraChange","handleSave","saveSettings","renderDevices","devices","defaultValue","subscribeToDevicesUpdated","unsubscribeFromDevicesUpdated","currentMic","currentSpeaker","currentCam","availableMics","availableSpeakers","availableCams","readOnly","joinInfo","PlaybackURL","LocalVideo","enabled","showMeta","currentLocalTileId","rosterCallback","newRoster","AttendeeId","videoElement","boundAttendeeId","localTile","tileId","bindVideoElement","active","subscribeToRosterUpdate","unsubscribeFromRosterUpdate","onMouseEnter","handleMouseEnter","bind","onMouseLeave","handleMouseLeave","isLocalCamera","RemoteVideo","camClass","isHidden","videoId","count","RemoteVideoGroup","rosterChanged","shareVideoElement","isMyContent","isSharingContent","sharingTileId","sharingInfo","findRosterSlot","Object","keys","previousRoster","differ","filter","k","assign","attendee","parts","key","isExisting","item","host","setParts","videoTileDidUpdateCallback","isContent","getElementById","videoEnabled","videoTileWasRemovedCallback","find","stopHandle","getPart","part","checkInShowAble","showAbleParts","showablePart","Array","from","videoTileWasRemoved","AlertWaiting","meetingStatus","showSettings","showPopupMessage","showModal","changeChat","hideModal","openSettings","setMetadataId","metadataId","askVideoOrObserver","initChatConnection","closeOnClickOutside","handleMute","localMuted","layout","bodylogo","myVideoElement","vicon","status","audioElementRef","getItem","ssData","reInitializeMeetingSession","blocks","localStorage","block","MeetingId","audioVideoDidStop","sessionStatus","statusCode","MeetingSessionStatusCode","AudioCallEnded","JoinToken","messageData","Type","MessageId","timestamp","Time","Sender","Content","Vote","tempMessages","Data","Host","showableparts","me","setInterval","style","display","isGoToMeeting","End","AlertRemoved","App","path","Boolean","hostname","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","catch","vh","innerHeight","documentElement","setProperty"],"mappings":"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","file":"static/js/main.128b005d.chunk.js","sourcesContent":["export const BASE_HREF = \"\";\r\n\r\n// API endpoint for retrieving the attendees list, joining the room, and ending the room\r\nexport const CHIME_ROOM_API = \"https://m7qxs56fx5.execute-api.us-east-1.amazonaws.com/Prod\";\r\n\r\n// Chime-SDK allows up to 16 attendee videos\r\nexport const CHIME_ROOM_MAX_ATTENDEE = 250;\r\n\r\n// Default video stream to play inside the video player\r\nexport const DEFAULT_VIDEO_STREAM = \"https://fcc3ddae59ed.us-west-2.playback.live-video.net/api/video/v1/us-west-2.893648527354.channel.DmumNckWFTqz.m3u8\";\r\n\r\n// Default Chat websocket link\r\nexport const CHAT_WEBSOCKET = \"wss://5sg50im573.execute-api.us-east-1.amazonaws.com/Prod\";\r\n\r\n// Chime-SDK logging level: INFO, WARN, ERROR, DEBUG\r\nexport const CHIME_LOG_LEVEL = 'WARN';\r\n\r\n// Chime-Web UI debugging logging: true / false\r\nexport const DEBUG = false;\r\n\r\n","import {\r\n  ConsoleLogger,\r\n  DefaultDeviceController,\r\n  DefaultDOMWebSocketFactory,\r\n  DefaultMeetingSession,\r\n  DefaultModality,\r\n  DefaultPromisedWebSocketFactory,\r\n  FullJitterBackoff,\r\n  LogLevel,\r\n  MeetingSessionConfiguration,\r\n  ReconnectingPromisedWebSocket\r\n} from 'amazon-chime-sdk-js';\r\n\r\nimport throttle from 'lodash/throttle';\r\nimport * as config from '../../config';\r\n\r\n\r\nexport default class ChimeSdkWrapper {\r\n\r\n  static WEB_SOCKET_TIMEOUT_MS = 10000;\r\n  static ROSTER_THROTTLE_MS = 400;\r\n\r\n  constructor() {\r\n    this.initializeSdkWrapper();\r\n  }\r\n\r\n  initializeSdkWrapper() {\r\n    this.meetingSession = null;\r\n    this.audioVideo = null;\r\n    this.title = null;\r\n    this.name = null;\r\n    this.region = null;\r\n    this.currentAudioInputDevice = null;\r\n    this.currentAudioOutputDevice = null;\r\n    this.currentVideoInputDevice = null;\r\n    this.audioInputDevices = [];\r\n    this.audioOutputDevices = [];\r\n    this.videoInputDevices = [];\r\n    this.devicesUpdatedCallbacks = [];\r\n    this.roster = {};\r\n    this.rosterUpdateCallbacks = [];\r\n    this.configuration = null;\r\n    this.messagingSocket = null;\r\n    this.messageUpdateCallbacks = [];\r\n  }\r\n\r\n  logError(error) {\r\n    console.error(error);\r\n  }\r\n\r\n  async createRoom(role, name, title, playbackURL, region) {\r\n    if (!name || !title || !role) {\r\n      console.error(\r\n           `role=${role} name=${name} title=${title} must exist`\r\n      );\r\n      return;\r\n    }\r\n\r\n    const payload = {\r\n      name,\r\n      title,\r\n      playbackURL,\r\n      role\r\n    };\r\n\r\n    const response = await fetch(\r\n      `${config.CHIME_ROOM_API}/join`,\r\n      {\r\n        method: 'POST',\r\n        body: JSON.stringify(payload)\r\n      }\r\n    );\r\n    const json = await response.json();\r\n    if (json.error) {\r\n      throw new Error(\r\n        json.error\r\n      );\r\n    }\r\n\r\n    const { JoinInfo } = json;\r\n    if (!JoinInfo) {\r\n      throw new Error(\r\n        'CreateOrJoin.classRoomDoesNotExist'\r\n      );\r\n    }\r\n    this.configuration = new MeetingSessionConfiguration(\r\n      JoinInfo.Meeting,\r\n      JoinInfo.Attendee\r\n    );\r\n    await this.initializeMeetingSession(this.configuration);\r\n\r\n    this.title = title;\r\n    this.name = name;\r\n    this.region = region;\r\n\r\n    return JoinInfo;\r\n  }\r\n\r\n  async reInitializeMeetingSession(JoinInfo, name) {\r\n    this.configuration = new MeetingSessionConfiguration(\r\n      JoinInfo.Meeting,\r\n      JoinInfo.Attendee\r\n    );\r\n    await this.initializeMeetingSession(this.configuration);\r\n\r\n    this.title = JoinInfo.Title;\r\n    this.name = name;\r\n    // this.region = region;\r\n  }\r\n\r\n  async initializeMeetingSession(configuration) {\r\n    const logger = new ConsoleLogger('SDK', LogLevel.ERROR);\r\n    const deviceController = new DefaultDeviceController(logger);\r\n    this.meetingSession = new DefaultMeetingSession(\r\n      configuration,\r\n      logger,\r\n      deviceController\r\n    );\r\n    this.audioVideo = this.meetingSession.audioVideo;\r\n\r\n    this.audioInputDevices = [];\r\n    (await this.audioVideo.listAudioInputDevices()).forEach(\r\n      (mediaDeviceInfo) => {\r\n        this.audioInputDevices.push({\r\n          label: mediaDeviceInfo.label,\r\n          value: mediaDeviceInfo.deviceId\r\n        });\r\n      }\r\n    );\r\n    this.audioOutputDevices = [];\r\n    (await this.audioVideo.listAudioOutputDevices()).forEach(\r\n      (mediaDeviceInfo) => {\r\n        this.audioOutputDevices.push({\r\n          label: mediaDeviceInfo.label,\r\n          value: mediaDeviceInfo.deviceId\r\n        });\r\n      }\r\n    );\r\n    this.videoInputDevices = [];\r\n    (await this.audioVideo.listVideoInputDevices()).forEach(\r\n      (mediaDeviceInfo) => {\r\n        this.videoInputDevices.push({\r\n          label: mediaDeviceInfo.label,\r\n          value: mediaDeviceInfo.deviceId\r\n        });\r\n      }\r\n    );\r\n    this.publishDevicesUpdated();\r\n    this.audioVideo.addDeviceChangeObserver(this);\r\n\r\n    this.audioVideo.realtimeSubscribeToAttendeeIdPresence(\r\n      (presentAttendeeId, present) => {\r\n        if (!present) {\r\n          delete this.roster[presentAttendeeId];\r\n          //this.publishRosterUpdate.cancel();\r\n          this.publishRosterUpdate()();\r\n          return;\r\n        }\r\n\r\n        this.audioVideo.realtimeSubscribeToVolumeIndicator(\r\n          presentAttendeeId,\r\n          async (\r\n            attendeeId,\r\n            volume,\r\n            muted,\r\n            signalStrength\r\n          ) => {\r\n            const baseAttendeeId = new DefaultModality(attendeeId).base();\r\n            if (baseAttendeeId !== attendeeId) {\r\n              // Don't include the content attendee in the roster.\r\n              //\r\n              // When you or other attendees share content (a screen capture, a video file,\r\n              // or any other MediaStream object), the content attendee (attendee-id#content) joins the session and\r\n              // shares content as if a regular attendee shares a video.\r\n              //\r\n              // For example, your attendee ID is \"my-id\". When you call meetingSession.audioVideo.startContentShare,\r\n              // the content attendee \"my-id#content\" will join the session and share your content.\r\n              return;\r\n            }\r\n\r\n            let shouldPublishImmediately = false;\r\n\r\n            if (!this.roster[attendeeId]) {\r\n              this.roster[attendeeId] = { name: '' };\r\n            }\r\n            if (volume !== null) {\r\n              this.roster[attendeeId].volume = Math.round(volume * 100);\r\n            }\r\n            if (muted !== null) {\r\n              this.roster[attendeeId].muted = muted;\r\n            }\r\n            if (signalStrength !== null) {\r\n              this.roster[attendeeId].signalStrength = Math.round(\r\n                signalStrength * 100\r\n              );\r\n            }\r\n            if (this.title && attendeeId && !this.roster[attendeeId].name) {\r\n              const response = await fetch(\r\n                `${config.CHIME_ROOM_API}/attendee?title=${encodeURIComponent(\r\n                  this.title\r\n                )}&attendeeId=${encodeURIComponent(attendeeId)}`\r\n              );\r\n              const json = await response.json();\r\n              if (json.AttendeeInfo && this.roster[attendeeId]) {\r\n                this.roster[attendeeId].name = json.AttendeeInfo.Name || '';\r\n                shouldPublishImmediately = true;\r\n              }\r\n            }\r\n\r\n            if (shouldPublishImmediately) {\r\n              //this.publishRosterUpdate.cancel();\r\n            }\r\n            this.publishRosterUpdate()();\r\n          }\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  async joinRoom(element) {\r\n    if (!element) {\r\n      this.logError(new Error(`element does not exist`));\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\r\n      'unhandledrejection',\r\n      (event) => {\r\n        this.logError(event.reason);\r\n      }\r\n    );\r\n\r\n    const audioInputs = await this.audioVideo.listAudioInputDevices();\r\n    if (audioInputs && audioInputs.length > 0 && audioInputs[0].deviceId) {\r\n      this.currentAudioInputDevice = {\r\n        label: audioInputs[0].label,\r\n        value: audioInputs[0].deviceId\r\n      };\r\n      await this.audioVideo.chooseAudioInputDevice(audioInputs[0].deviceId);\r\n    }\r\n\r\n    const audioOutputs = await this.audioVideo.listAudioOutputDevices();\r\n    if (audioOutputs && audioOutputs.length > 0 && audioOutputs[0].deviceId) {\r\n      this.currentAudioOutputDevice = {\r\n        label: audioOutputs[0].label,\r\n        value: audioOutputs[0].deviceId\r\n      };\r\n      await this.audioVideo.chooseAudioOutputDevice(audioOutputs[0].deviceId);\r\n    }\r\n\r\n    const videoInputs = await this.audioVideo.listVideoInputDevices();\r\n    if (videoInputs && videoInputs.length > 0 && videoInputs[0].deviceId) {\r\n      this.currentVideoInputDevice = {\r\n        label: videoInputs[0].label,\r\n        value: videoInputs[0].deviceId\r\n      };\r\n      await this.audioVideo.chooseVideoInputDevice(null);\r\n    }\r\n\r\n    this.publishDevicesUpdated();\r\n\r\n    this.audioVideo.bindAudioElement(element);\r\n    this.audioVideo.start();\r\n  }\r\n\r\n  async joinRoomMessaging() {\r\n    if (!this.configuration) {\r\n      this.logError(new Error('configuration does not exist'));\r\n      return;\r\n    }\r\n\r\n    const messagingUrl = `${config.CHAT_WEBSOCKET}?MeetingId=${this.configuration.meetingId}&AttendeeId=${this.configuration.credentials.attendeeId}&JoinToken=${this.configuration.credentials.joinToken}`;\r\n    this.messagingSocket = new ReconnectingPromisedWebSocket(\r\n      messagingUrl,\r\n      [],\r\n      'arraybuffer',\r\n      new DefaultPromisedWebSocketFactory(new DefaultDOMWebSocketFactory()),\r\n      new FullJitterBackoff(1000, 0, 10000)\r\n    );\r\n\r\n    await this.messagingSocket.open(this.WEB_SOCKET_TIMEOUT_MS);\r\n\r\n    this.messagingSocket.addEventListener('message', (event) => {\r\n      try {\r\n        const data = JSON.parse(event.data);\r\n        const { attendeeId } = data.payload;\r\n\r\n        let name;\r\n        if (this.roster[attendeeId]) {\r\n          name = this.roster[attendeeId].name;\r\n        }\r\n\r\n        this.publishMessageUpdate({\r\n          type: data.type,\r\n          payload: data.payload,\r\n          timestampMs: Date.now(),\r\n          name\r\n        });\r\n      } catch (error) {\r\n        this.logError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  sendMessage(type, payload) {\r\n    if (!this.messagingSocket) {\r\n      return;\r\n    }\r\n    const message = {\r\n      message: 'sendmessage',\r\n      data: JSON.stringify({ type, payload })\r\n    };\r\n    try {\r\n      this.messagingSocket.send(JSON.stringify(message));\r\n    } catch (error) {\r\n      this.logError(error);\r\n    }\r\n  }\r\n\r\n  async leaveRoom(end) {\r\n    try {\r\n      this.audioVideo.stop();\r\n    } catch (error) {\r\n      this.logError(error);\r\n    }\r\n\r\n    // try {\r\n    //   await this.messagingSocket.close(this.WEB_SOCKET_TIMEOUT_MS);\r\n    // } catch (error) {\r\n    //   this.logError(error);\r\n    // }\r\n\r\n    try {\r\n      if (end && this.title) {\r\n        await fetch(\r\n          `${config.CHIME_ROOM_API}/end?title=${encodeURIComponent(this.title)}`,\r\n          {\r\n            method: 'POST'\r\n          }\r\n        );\r\n      }\r\n    } catch (error) {\r\n      this.logError(error);\r\n    }\r\n\r\n    this.initializeSdkWrapper();\r\n  }\r\n\r\n  // Device\r\n\r\n  async chooseAudioInputDevice(device) {\r\n    try {\r\n      await this.audioVideo.chooseAudioInputDevice(device.value);\r\n      this.currentAudioInputDevice = device;\r\n    } catch (error) {\r\n      this.logError(error);\r\n    }\r\n  }\r\n\r\n  async chooseAudioOutputDevice(device) {\r\n    try {\r\n      await this.audioVideo.chooseAudioOutputDevice(device.value);\r\n      this.currentAudioOutputDevice = device;\r\n    } catch (error) {\r\n      this.logError(error);\r\n    }\r\n  }\r\n\r\n  async chooseVideoInputDevice(device) {\r\n    try {\r\n      await this.audioVideo.chooseVideoInputDevice(device.value);\r\n      this.currentVideoInputDevice = device;\r\n    } catch (error) {\r\n      this.logError(error);\r\n    }\r\n  }\r\n\r\n  // Observer methods\r\n\r\n  audioInputsChanged(freshAudioInputDeviceList) {\r\n    let hasCurrentDevice = false;\r\n    this.audioInputDevices = [];\r\n    freshAudioInputDeviceList.forEach((mediaDeviceInfo) => {\r\n      if (\r\n        this.currentAudioInputDevice &&\r\n        mediaDeviceInfo.deviceId === this.currentAudioInputDevice.value\r\n      ) {\r\n        hasCurrentDevice = true;\r\n      }\r\n      this.audioInputDevices.push({\r\n        label: mediaDeviceInfo.label,\r\n        value: mediaDeviceInfo.deviceId\r\n      });\r\n    });\r\n    if (!hasCurrentDevice) {\r\n      this.currentAudioInputDevice =\r\n        this.audioInputDevices.length > 0 ? this.audioInputDevices[0] : null;\r\n    }\r\n    this.publishDevicesUpdated();\r\n  }\r\n\r\n  audioOutputsChanged(freshAudioOutputDeviceList) {\r\n    let hasCurrentDevice = false;\r\n    this.audioOutputDevices = [];\r\n    freshAudioOutputDeviceList.forEach((mediaDeviceInfo) => {\r\n      if (\r\n        this.currentAudioOutputDevice &&\r\n        mediaDeviceInfo.deviceId === this.currentAudioOutputDevice.value\r\n      ) {\r\n        hasCurrentDevice = true;\r\n      }\r\n      this.audioOutputDevices.push({\r\n        label: mediaDeviceInfo.label,\r\n        value: mediaDeviceInfo.deviceId\r\n      });\r\n    });\r\n    if (!hasCurrentDevice) {\r\n      this.currentAudioOutputDevice =\r\n        this.audioOutputDevices.length > 0 ? this.audioOutputDevices[0] : null;\r\n    }\r\n    this.publishDevicesUpdated();\r\n  }\r\n\r\n  videoInputsChanged(freshVideoInputDeviceList) {\r\n    let hasCurrentDevice = false;\r\n    this.videoInputDevices = [];\r\n    freshVideoInputDeviceList.forEach((mediaDeviceInfo) => {\r\n      if (\r\n        this.currentVideoInputDevice &&\r\n        mediaDeviceInfo.deviceId === this.currentVideoInputDevice.value\r\n      ) {\r\n        hasCurrentDevice = true;\r\n      }\r\n      this.videoInputDevices.push({\r\n        label: mediaDeviceInfo.label,\r\n        value: mediaDeviceInfo.deviceId\r\n      });\r\n    });\r\n    if (!hasCurrentDevice) {\r\n      this.currentVideoInputDevice =\r\n        this.videoInputDevices.length > 0 ? this.videoInputDevices[0] : null;\r\n    }\r\n    this.publishDevicesUpdated();\r\n  }\r\n\r\n  // Subscribe and unsubscribe\r\n\r\n  subscribeToDevicesUpdated(callback) {\r\n    this.devicesUpdatedCallbacks.push(callback);\r\n  }\r\n\r\n  unsubscribeFromDevicesUpdated(callback) {\r\n    const index = this.devicesUpdatedCallbacks.indexOf(callback);\r\n    if (index !== -1) {\r\n      this.devicesUpdatedCallbacks.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  publishDevicesUpdated() {\r\n    this.devicesUpdatedCallbacks.forEach(\r\n      (callback) => {\r\n        callback({\r\n          currentAudioInputDevice: this.currentAudioInputDevice,\r\n          currentAudioOutputDevice: this.currentAudioOutputDevice,\r\n          currentVideoInputDevice: this.currentVideoInputDevice,\r\n          audioInputDevices: this.audioInputDevices,\r\n          audioOutputDevices: this.audioOutputDevices,\r\n          videoInputDevices: this.videoInputDevices\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  subscribeToRosterUpdate(callback) {\r\n    this.rosterUpdateCallbacks.push(callback);\r\n  }\r\n\r\n  unsubscribeFromRosterUpdate(callback) {\r\n    const index = this.rosterUpdateCallbacks.indexOf(callback);\r\n    if (index !== -1) {\r\n      this.rosterUpdateCallbacks.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  publishRosterUpdate() {\r\n    return throttle(() => {\r\n      for (let i = 0; i < this.rosterUpdateCallbacks.length; i += 1) {\r\n        const callback = this.rosterUpdateCallbacks[i];\r\n        callback(this.roster);\r\n      }\r\n    }, this.ROSTER_THROTTLE_MS);\r\n  }\r\n\r\n  subscribeToMessageUpdate(callback) {\r\n    this.messageUpdateCallbacks.push(callback);\r\n  }\r\n\r\n  unsubscribeFromMessageUpdate(callback) {\r\n    const index = this.messageUpdateCallbacks.indexOf(callback);\r\n    if (index !== -1) {\r\n      this.messageUpdateCallbacks.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  publishMessageUpdate(message) {\r\n    for (let i = 0; i < this.messageUpdateCallbacks.length; i += 1) {\r\n      const callback = this.messageUpdateCallbacks[i];\r\n      callback(message);\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Styles\r\nimport './Error.css';\r\n\r\n// Assets\r\n\r\nclass Error extends Component {\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.handleKeyDown);\r\n\r\n    // setTimeout(() => {\r\n    //   this.props.closeError();\r\n    // }, 10000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.keyCode === 27) { // keyCode 27 is Escape key\r\n      this.props.closeError();\r\n    }\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    let node = e.target;\r\n    let isModal = false;\r\n    while (node) {\r\n      if (node && node.classList && node.classList.contains('notice--error')) {\r\n        isModal = true;\r\n        break;\r\n      }\r\n      node = node.parentNode;\r\n    }\r\n    if (!isModal) {\r\n      this.props.closeError();\r\n    }\r\n  }\r\n\r\n  handleGoCreateRoom = () => {\r\n    window.location.replace(\"/index.html\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"notice-container\">\r\n        <div className=\"notice notice--error\" onClick={this.handleClick}>\r\n          <div className=\"notice__content\">\r\n            <div className=\"icon icon--24 notice__icon\"><svg viewBox=\"0 0 1000 1000\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M 500 0C 224 0 0 224 0 500C 0 776 224 1000 500 1000C 776 1000 1000 776 1000 500C 1000 224 776 0 500 0C 500 0 500 0 500 0M 526 150C 576 150 602 175 601 224C 600 300 600 350 575 525C 570 560 560 575 525 575C 525 575 475 575 475 575C 440 575 430 560 425 525C 400 355 400 300 400 226C 400 175 425 150 475 150M 500 650C 527 650 552 661 571 679C 589 698 600 723 600 750C 600 805 555 850 500 850C 445 850 400 805 400 750C 400 723 411 698 429 679C 448 661 473 650 500 650C 500 650 500 650 500 650\"/></svg></div>\r\n            {this.props.errorMsg} <br/> \r\n            <div>\r\n              {/* To create your own room, click <span className=\"go-create-room\" onClick={this.handleGoCreateRoom}>here</span>.  */}\r\n              <span className=\"go-close-button\" onClick={this.props.closeError}>Close</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nError.propTypes = {\r\n  errorMsg: PropTypes.string,\r\n  closeError: PropTypes.func\r\n};\r\n\r\nexport default Error;\r\n","export default __webpack_public_path__ + \"static/media/Logo.c65422c9.svg\";","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\n// Styles\nimport \"./Alert.css\";\nimport logo from \"./../../assets/Logo.svg\";\n\nclass Alert extends Component {\n\n    render() {\n        return(\n        <div className={\"alert-container\"}>\n            <div className={\"alert-back-drop\"}>\n            </div>\n            <div className={\"alert-content\"}>\n                <img className=\"alert-logo\" src={logo} alt=\"Logo\" />\n                <p>Sorry, but we’ve detected that your browser or device is not compatible</p>\n                <p>with our virtual meeting software.</p>\n                <br/>\n                <p>Please try a different browser or device to access the session.</p>\n                <br/>\n                <p>For more details on compatibility options, <a target=\"_blank\" href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\" rel=\"noreferrer\">click here.</a></p>\n            </div>\n        </div>\n        );\n        \n    }\n}\n\nexport default withRouter(Alert);","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport * as config from '../../config';\r\nimport Error from './Error';\r\nimport Alert from './Alert';\r\n\r\nclass Welcome extends Component {\r\n\r\n  state = {\r\n    role: 'host',\r\n    username: '',\r\n    title: '',\r\n    playbackURL: config.DEFAULT_VIDEO_STREAM,\r\n    errorMsg: '',\r\n    showError: false,\r\n    isAvailable: false,\r\n  }\r\n\r\n  constructor() {\r\n    super ();\r\n    this.baseHref = config.BASE_HREF;\r\n    this.inputRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const qs = new URLSearchParams(this.props.location.search);\r\n    const action = qs.get('action');\r\n    if (action === 'join') {\r\n      const title = qs.get('room');\r\n      this.props.history.push(`${this.baseHref}/join?room=${title}`);\r\n      return;\r\n    }\r\n\r\n    this.inputRef.current.focus();\r\n    try{\r\n      if(!navigator.mediaDevices.enumerateDevices) {\r\n        this.setState({isAvailable: true});\r\n      }\r\n    } catch(e) {\r\n      console.log(e)\r\n      this.setState({isAvailable: true});\r\n    }\r\n    \r\n    \r\n    // const isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\r\n    const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\r\n    \r\n    if(isIOS) {\r\n      const isChrome = navigator.userAgent.indexOf(\"CriOS\") !== -1;\r\n      if(isChrome) {\r\n        this.setState({isAvailable: true});\r\n      }\r\n    }\r\n  }\r\n\r\n  handleNameChange = e => {\r\n    this.setState({ username: e.target.value })\r\n  }\r\n\r\n  handleRoomChange = e => {\r\n    this.setState({ title: e.target.value })\r\n  }\r\n\r\n  handlePlaybackURLChange = e => {\r\n    this.setState({ playbackURL: e.target.value })\r\n  }\r\n\r\n  handleCreateRoom = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    this.createRoom();\r\n  }\r\n\r\n  setErrorMsg = errorMsg => {\r\n    this.setState({ errorMsg, showError: true });\r\n  }\r\n\r\n  closeError = () => {\r\n    this.setState({ showError: false });\r\n  }\r\n\r\n  async createRoom() {\r\n    const { title, username, playbackURL } = this.state;\r\n    const data = {\r\n      username,\r\n      title,\r\n      playbackURL,\r\n      role: this.state.role\r\n    }\r\n    sessionStorage.setItem(`chime[${title}]`, JSON.stringify(data));\r\n    this.props.history.push(`${this.baseHref}/meeting?room=${title}&username=${username}`);\r\n  }\r\n\r\n  render() {\r\n    const { username, title, playbackURL, isAvailable } = this.state;\r\n    const createRoomDisabled = !username || !title || !playbackURL;\r\n    return (\r\n      <React.Fragment>\r\n        {isAvailable && <Alert />}\r\n        <div className=\"welcome form-grid\">\r\n\r\n          <div className=\"welcome__intro\">\r\n            <div className=\"intro__inner formatted-text\">\r\n              <h1>Amazon IVS with ChimeSDK</h1>\r\n              <h3>Create or join rooms, and watch Amazon IVS streams with anyone.</h3>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"welcome__content pd-4\">\r\n            <div className=\"content__inner\">\r\n              <h2 className=\"mg-b-2\">Get started</h2>\r\n              <form action=\"\">\r\n                <fieldset className=\"mg-b-2\">\r\n                  <input className=\"mg-b-2\" type=\"text\" placeholder=\"Your name\" value={username} ref={this.inputRef} onChange={this.handleNameChange} />\r\n                  <input type=\"text\" placeholder=\"Room name\" value={title} onChange={this.handleRoomChange} />\r\n                  <input type=\"hidden\" placeholder=\"Playback URL\" value={playbackURL} onChange={this.handlePlaybackURLChange} />\r\n                  <button className=\"mg-t-2 btn btn--primary\" disabled={createRoomDisabled} onClick={this.handleCreateRoom} >Create room</button>\r\n                </fieldset>\r\n              </form>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        {this.state.showError && (\r\n          <Error\r\n            closeError={this.closeError}\r\n            errorMsg={this.state.errorMsg}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Welcome);\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport * as config from '../../config';\r\nimport Error from './Error';\r\n\r\nclass Join extends Component {\r\n\r\n  state = {\r\n    role: 'attendee',\r\n    username: '',\r\n    title: '',\r\n    errorMsg: '',\r\n    showError: false\r\n  }\r\n\r\n  constructor() {\r\n    super ();\r\n    this.inputRef = React.createRef();\r\n    this.baseHref = config.BASE_HREF;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const qs = new URLSearchParams(this.props.location.search);\r\n    const room = qs.get('room');\r\n    const username = qs.get('username');\r\n\r\n    if(username) {\r\n      const data = {\r\n        username,\r\n        title: room,\r\n        role: this.state.role,\r\n        playbackURL: config.DEFAULT_VIDEO_STREAM,\r\n      }\r\n      sessionStorage.setItem(`chime[${room}]`, JSON.stringify(data));\r\n      this.props.history.push(`${this.baseHref}/meeting?room=${room}&username=${username}`);\r\n    } else {\r\n      this.setState({ title: room });\r\n    }\r\n  }\r\n\r\n  joinRoom = async () => {\r\n    const { username, title } = this.state;\r\n    const data = {\r\n      username,\r\n      title,\r\n      role: this.state.role,\r\n      playbackURL: config.DEFAULT_VIDEO_STREAM,\r\n    }\r\n    sessionStorage.setItem(`chime[${title}]`, JSON.stringify(data));\r\n    this.props.history.push(`${this.baseHref}/meeting?room=${title}&username=${username}`);\r\n  }\r\n\r\n  handleNameChange = e => {\r\n    this.setState({ username: e.target.value })\r\n  }\r\n\r\n  handleJoinRoom = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    this.joinRoom();\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    let node = e.target;\r\n    let isModal = false;\r\n    while (node) {\r\n      if (node && node.classList && node.classList.contains('notice--error')) {\r\n        isModal = true;\r\n        break;\r\n      }\r\n      node = node.parentNode;\r\n    }\r\n    if (!isModal) {\r\n      this.closeError();\r\n    }\r\n  }\r\n\r\n  setErrorMsg = errorMsg => {\r\n    this.setState({ errorMsg, showError: true });\r\n  }\r\n\r\n  closeError = () => {\r\n    this.setState({ showError: false });\r\n  }\r\n\r\n  render() {\r\n    const { username } = this.state;\r\n    const joinRoomDisabled = !username;\r\n    return (\r\n      <div className=\"welcome form-grid\" onClick={this.handleClick}>\r\n\r\n        <div className=\"welcome__intro\">\r\n          <div className=\"intro__inner formatted-text\">\r\n            <h1>Join as a Participant</h1>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"welcome__content pd-4\">\r\n          <div className=\"content__inner\">\r\n            <h2 className=\"mg-b-2\">Hey there!</h2>\r\n            <form action=\"\">\r\n              <fieldset className=\"mg-b-2\">\r\n                <input type=\"text\" placeholder=\"Your name\" value={username} ref={this.inputRef} onChange={this.handleNameChange} />\r\n                <button className=\"mg-t-1 btn btn--primary\" disabled={joinRoomDisabled} onClick={this.handleJoinRoom}>Join room</button>\r\n              </fieldset>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        {this.state.showError && (\r\n          <Error\r\n            closeError={this.closeError}\r\n            errorMsg={this.state.errorMsg}\r\n          />\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Join);\r\n","export default __webpack_public_path__ + \"static/media/Raise-Hand.fddd95b6.svg\";","export default __webpack_public_path__ + \"static/media/close.24bebf55.svg\";","export default __webpack_public_path__ + \"static/media/un-line.c90e1b7d.svg\";","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\n\r\nimport * as config from '../../config';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\n// Styles\r\nimport './Chat.css';\r\n\r\nimport RaiseHandIcon from \"./../../assets/RaiseBtn/Raise-Hand.svg\";\r\nimport closeIcon from \"./../../assets/svgs/close.svg\";\r\nimport unIcon from '../../assets/svgs/un-line.svg';\r\n\r\nclass Chat extends Component {\r\n  constructor() {\r\n    super ();\r\n    \r\n    this.state = {\r\n      message: '',\r\n      showPopup: false,\r\n      tabIndex: 0,\r\n    }\r\n    this.chatRef = React.createRef();\r\n    this.messagesEndRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  componentDidUpdate() {\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  scrollToBottom = () => {\r\n    // this.messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\r\n  }\r\n\r\n  handleChange = e => {\r\n    var str = e.target.value.replace('\\n', '');\r\n    e.target.value = str;\r\n    this.setState({ message: e.target.value })\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.keyCode === 13) { // keyCode 13 is carriage return\r\n      this.sendMessage();\r\n    }\r\n  }\r\n\r\n  handleSendMobile = () => {\r\n    this.sendMessage();\r\n  }\r\n\r\n  sendMessage() {\r\n    const { message } = this.state;\r\n    const { username, connection } = this.props;\r\n    if (message) {\r\n      const data = `{\r\n        \"message\": \"sendmessage\",\r\n        \"data\": \"${username}::${message.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"')}\",\r\n        \"sender\": \"${username}\",\r\n        \"content\": \"${message.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"')}\",\r\n        \"type\": \"sendmessage\"\r\n      }`;\r\n      connection.send(data);\r\n      this.setState({ message: '' });\r\n    }\r\n  }\r\n\r\n  handleRoomClick = (e) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    const { title } = this.props;\r\n    const link = `${window.location.origin}${window.location.pathname.replace('meeting', 'index.html')}?action=join&room=${title}`;\r\n    if (config.DEBUG) console.log(link);\r\n    this.copyTextToClipboard(encodeURI(link));\r\n  }\r\n\r\n  setShowPopup = () => {\r\n    // show popup message\r\n    this.setState({ showPopup: true });\r\n\r\n    // hide popup message after 2 seconds\r\n    setTimeout(() => {\r\n      this.setState({ showPopup: false })\r\n    }, 2000);\r\n  }\r\n\r\n  copyTextToClipboard = text => {\r\n    if (navigator.clipboard) {\r\n      navigator.clipboard.writeText(text)\r\n      .then(() => {\r\n        this.setShowPopup();\r\n        if (config.DEBUG) console.log('Room link copied to clipboard');\r\n      }, (err) => {\r\n        if (config.DEBUG) console.log('Could not copy text: ', err);\r\n      });\r\n    }\r\n  }\r\n\r\n  parseUrls = (userInput) => {\r\n    // console.log(userInput);\r\n    var urlRegExp = /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_.~#?&//=]*)/g;\r\n    let formattedMessage = userInput.replace(urlRegExp, (match) => {\r\n      let formattedMatch = match;\r\n      if (!match.startsWith('http')) {\r\n        formattedMatch = `http://${match}`;\r\n      }\r\n      return `<a href=${formattedMatch} class=\"chat-line__link\" target=\"_blank\" rel=\"noopener noreferrer\">${match}</a>`;\r\n    });\r\n    return formattedMessage;\r\n  }\r\n\r\n  compare(a, b) {\r\n    if(a.vote.length < b.vote.length) return 1;\r\n    if(a.vote.length > b.vote.length) return -1;\r\n    return 0\r\n  }\r\n\r\n  renderMessages = () => {\r\n    let { messages } = this.props;\r\n    messages.sort(this.compare);\r\n    return (\r\n      messages.map(message => {\r\n        let formattedMessage = this.parseUrls(message.message);\r\n        return (\r\n          <div className=\"chat-line\" key={message.id}>\r\n            <p><span dangerouslySetInnerHTML={{__html: formattedMessage}} /></p>\r\n            <div className={'chat-sender-name'}>{message.username}</div>\r\n            <div className=\"chat-action\">\r\n              <span className=\"qa-tool-btn vote-icon\" data-tip data-for='tooltip-for-boost' onClick={() => this.handleUpVote(message)}></span>\r\n              <ReactTooltip id='tooltip-for-boost' type='dark' place=\"bottom\" effect=\"solid\">\r\n                <span>Boost question</span>\r\n              </ReactTooltip>\r\n              <span className=\"vote-count\"> {message.vote.length} </span>\r\n              {\r\n                this.props.role === 'host' ? \r\n                <>\r\n                  <span className=\"border-bottom\"> </span>\r\n                  <span className=\"qa-tool-btn delete-icon\" data-tip data-for='tooltip-for-remove-q' onClick={() => this.handleRemoveMessage(message)}></span>\r\n                  <ReactTooltip id='tooltip-for-remove-q' type='dark' place=\"bottom\" effect=\"solid\">\r\n                    <span>Remove question</span>\r\n                  </ReactTooltip>\r\n                </> : <></>\r\n              }\r\n              \r\n            </div>\r\n          </div>\r\n        )\r\n      })\r\n    )\r\n  }\r\n\r\n  handleUpVote = (message) => {\r\n    if (message) {\r\n      const { connection } = this.props;\r\n      const { username } = this.props;\r\n      const data = `{\r\n        \"message\": \"sendmessage\",\r\n        \"sender\": \"${username}\",\r\n        \"id\": \"${message.id}\",\r\n        \"type\": \"upvote\"\r\n      }`;\r\n      connection.send(data);\r\n\r\n      this.setState({ message: '' });\r\n    }\r\n  }\r\n\r\n  handleRemoveMessage = (message) => {\r\n    if(this.props.role !== 'host') {\r\n      this.props.setErrorMsg('You are not a host!')\r\n      return;\r\n    }\r\n\r\n    if (message) {\r\n      const { connection } = this.props;\r\n      const data = `{\r\n        \"message\": \"sendmessage\",\r\n        \"id\": \"${message.id}\",\r\n        \"type\": \"deletemessage\"\r\n      }`;\r\n      connection.send(data);\r\n\r\n      this.setState({ message: '' });\r\n    }\r\n  }\r\n\r\n  handleTabChange = (index) => {\r\n    // this.setState({\r\n    //   tabIndex: index\r\n    // })\r\n    this.props.changeTab(index);\r\n  }\r\n\r\n  handlDownRaiseHand = (participant) => {\r\n    if(this.props.role !== 'host') {\r\n      this.props.setErrorMsg('You are not a host!')\r\n      return;\r\n    }\r\n\r\n    if(!participant.raisehand) {\r\n      return;\r\n    }\r\n\r\n    const data = `{\r\n      \"message\": \"sendmessage\",\r\n      \"attendeeId\": \"${participant.attendeeId}\",\r\n      \"type\": \"downhand\"\r\n    }`;\r\n    this.props.connection.send(data);\r\n  }\r\n\r\n  handlePartMute = (participant) => {\r\n    if(this.props.role !== 'host') {\r\n      this.props.setErrorMsg('You are not a host!')\r\n      return;\r\n    }\r\n\r\n    if(participant.mute) {\r\n      return;\r\n    }\r\n\r\n    const data = `{\r\n      \"message\": \"sendmessage\",\r\n      \"attendeeId\": \"${participant.attendeeId}\",\r\n      \"type\": \"muteremote\"\r\n    }`;\r\n    this.props.connection.send(data);\r\n  }\r\n\r\n  handleRemovePart = (participant) => {\r\n    confirmAlert({\r\n      title: 'Confirm to remove',\r\n      message: 'Are you sure you want to remove this participant?',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: ()=> {\r\n            if(this.props.role !== 'host') {\r\n              this.props.setErrorMsg('You are not a host!')\r\n              return;\r\n            }\r\n        \r\n            const data = `{\r\n              \"message\": \"sendmessage\",\r\n              \"attendeeId\": \"${participant.attendeeId}\",\r\n              \"type\": \"removeremote\"\r\n            }`;\r\n            this.props.connection.send(data);\r\n          }\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => console.log()\r\n        }\r\n      ]\r\n    })\r\n\r\n    \r\n  }\r\n\r\n  handleMakeHost = (participant) => {\r\n    if(this.props.role !== 'host') {\r\n      this.props.setErrorMsg('You are not a host!')\r\n      return;\r\n    }\r\n\r\n    const data = `{\r\n      \"message\": \"sendmessage\",\r\n      \"attendeeId\": \"${participant.attendeeId}\",\r\n      \"type\": \"makehost\"\r\n    }`;\r\n    this.props.connection.send(data);\r\n  }\r\n\r\n  renderParticipants = () => {\r\n    const { participants } = this.props;\r\n    \r\n    if (this.props.role === 'attendee') {\r\n      return <></>;\r\n    }\r\n\r\n    return (\r\n      participants.map((participant, index) => {\r\n        return (\r\n          <div className=\"participant-item\" key={index}>\r\n            <span className={'part-raise-hand-btn'} onClick={() => this.handlDownRaiseHand(participant)}>\r\n              {\r\n                participant.raisehand && <img src={RaiseHandIcon} alt=\"\" className=\"raise-hand-icon\"/>\r\n              }\r\n              \r\n            </span>\r\n            \r\n            <span className=\"participant-name\">{participant.name}{participant.isVideoChat? \" (Video Chat)\" : \" (Watching)\"}</span>\r\n\r\n            <div className=\"participant-tool-btns\">\r\n              <span className=\"participant-tool-btn mute-icon\" data-tip data-for='tooltip-for-mute' onClick={() => this.handlePartMute(participant)}>\r\n                {participant.mute && <img src={unIcon} alt=\"block\"/>}\r\n              </span>\r\n              <ReactTooltip id='tooltip-for-mute' type='dark' place=\"bottom\" effect=\"solid\">\r\n                <span>Mute participant</span>\r\n              </ReactTooltip>\r\n              <span className=\"participant-tool-btn host-icon\" data-tip data-for='tooltip-for-host' onClick={() => this.handleMakeHost(participant)}></span>\r\n              <ReactTooltip id='tooltip-for-host' type='dark' place=\"bottom\" effect=\"solid\">\r\n                <span>Make host</span>\r\n              </ReactTooltip>\r\n              \r\n              {\r\n                this.props.role === 'host' && (\r\n                <>\r\n                  <span className=\"participant-tool-btn delete-icon\" data-tip data-for='tooltip-for-remove' onClick={() => this.handleRemovePart(participant)}></span>\r\n                  <ReactTooltip id='tooltip-for-remove' type='dark' place=\"bottom\" effect=\"solid\">\r\n                    <span>Remove participant</span>\r\n                  </ReactTooltip>\r\n                </>  \r\n              )}\r\n              \r\n            </div>\r\n          </div>\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n  render() {\r\n    const { message } = this.state;\r\n    // const popup = showPopup ? 'show' : '';\r\n    const isChrome = navigator.userAgent.indexOf(\"CriOS\") !== -1;\r\n    const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\r\n    const iosChromeClassForInput = (isChrome && isIOS) ? 'ioschrome-input' : '';\r\n    const iosChromeClassForMessages = (isChrome && isIOS) ? 'ioschrome-messages' : '';\r\n   \r\n    return (\r\n      <div className=\"chat full-height pos-relative\">\r\n        <div className=\"close-button\" onClick={this.props.closeChat}>\r\n          <img src={closeIcon} alt=\"Close Icon\" />\r\n          <span>CLOSE</span>\r\n        </div>\r\n        <div className=\"chat__wrapper full-width pos-relative\">\r\n          <Tabs onSelect={index => {this.handleTabChange(index)}} selectedIndex={this.props.isChat ? 0 : 1}>\r\n            <div className=\"desktop-tab\">\r\n              <TabList>\r\n                <Tab>Q&A</Tab>\r\n                {\r\n                  this.props.role === 'host' && <Tab>PARTICIPANTS</Tab>\r\n                }\r\n                \r\n              </TabList>\r\n            </div>\r\n\r\n            <div className=\"mobile-tab-title\">\r\n            {this.props.isChat ? \"Q&A\" : \"Participants\"}\r\n            </div>\r\n      \r\n            <TabPanel>\r\n              <div className=\"message-container\">\r\n                <div className={`messages pd-x-1 ${iosChromeClassForMessages}`}>\r\n                  {this.renderMessages()}\r\n                  <div ref={this.messagesEndRef} />\r\n                </div>\r\n\r\n                <div className={`composer chime-web-composer full-width ${iosChromeClassForInput}`}>\r\n                  <span className=\"label submit-question-label\">\r\n                    Submit question\r\n                  </span>\r\n                  <textarea\r\n                    ref={this.chatRef}\r\n                    placeholder=\"Type question here...\"\r\n                    value={message}\r\n                    maxLength={510}\r\n                    rows={3}\r\n                    onChange={this.handleChange}\r\n                    onKeyDown={this.handleKeyDown}\r\n                    className=\"chat-input desktop-question-input\"\r\n                  />\r\n                  <textarea\r\n                    ref={this.chatRef}\r\n                    placeholder=\"Type question here...\"\r\n                    value={message}\r\n                    maxLength={510}\r\n                    rows={3}\r\n                    onChange={this.handleChange}\r\n                    className=\"chat-input mobile-question-input\"\r\n                  />\r\n                </div>\r\n\r\n                <div className={`mobile-submit-btn-container ${iosChromeClassForInput}`}>\r\n                  <button onClick={this.handleSendMobile}>submit question</button>\r\n                </div>\r\n              </div>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <div className=\"messages pd-x-1\">\r\n                {this.renderParticipants()}\r\n              </div>\r\n            </TabPanel>\r\n          </Tabs>\r\n          \r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nChat.propTypes = {\r\n  chime: PropTypes.object,\r\n  title: PropTypes.string,\r\n  username: PropTypes.string,\r\n  joinInfo: PropTypes.object,\r\n  closeChat:  PropTypes.func,\r\n  isChat: PropTypes.bool,\r\n  changeTab: PropTypes.func,\r\n  connection: PropTypes.object,\r\n  messages: PropTypes.array,\r\n  participants: PropTypes.array,\r\n  role: PropTypes.string,\r\n  setErrorMsg: PropTypes.func,\r\n};\r\n\r\nexport default Chat;\r\n","export default __webpack_public_path__ + \"static/media/mute.aec53e75.svg\";","export default __webpack_public_path__ + \"static/media/camera.776f1869.svg\";","export default __webpack_public_path__ + \"static/media/share.3313e06a.svg\";","export default __webpack_public_path__ + \"static/media/hand.c928c6c0.svg\";","export default __webpack_public_path__ + \"static/media/qa.ce90c700.svg\";","export default __webpack_public_path__ + \"static/media/qaa.35a6a8e2.svg\";","export default __webpack_public_path__ + \"static/media/user.7a529212.svg\";","export default __webpack_public_path__ + \"static/media/usera.ac1cee42.svg\";","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\nimport unIcon from '../../assets/svgs/un-line.svg';\r\nimport muteIcon from '../../assets/svgs/mute.svg';\r\nimport cameraIcon from '../../assets/svgs/camera.svg';\r\nimport shareIcon from '../../assets/svgs/share.svg';\r\nimport handIcon from '../../assets/svgs/hand.svg';\r\nimport qaIcon from '../../assets/svgs/qa.svg';\r\nimport qaaIcon from '../../assets/svgs/qaa.svg';\r\nimport userIcon from '../../assets/svgs/user.svg';\r\nimport useraIcon from '../../assets/svgs/usera.svg';\r\n\r\nimport './control.css';\r\n\r\nclass Controls extends Component {\r\n  \r\n  state = {\r\n    // muted: false,\r\n    focus: false,\r\n    videoStatus: 'Enabled',\r\n    shareScreenStatue: true,\r\n    openChatStatus: false,\r\n    openParticipantsStatus: false,\r\n  };\r\n\r\n  // callback = (localMuted) => {\r\n  //   this.setState({ muted: localMuted });\r\n  // }\r\n\r\n  componentDidMount() {\r\n    this.props.chime.audioVideo.realtimeSubscribeToMuteAndUnmuteLocalAudio(\r\n      this.props.setMute\r\n    );\r\n    this.props.chime.audioVideo.addObserver({\r\n      videoTileDidUpdate: async (tileState) => {\r\n        if(this.state.videoStatus === 'Enabled') {\r\n          try {\r\n            if (!this.props.chime.currentVideoInputDevice) {\r\n              // throw new Error('currentVideoInputDevice does not exist');\r\n              const videoInputDevices = await this.props.chime.audioVideo.listVideoInputDevices();\r\n              let selectedDevice = videoInputDevices[0];\r\n              if(videoInputDevices.length >= 2) {\r\n                videoInputDevices.map(device => {\r\n                  if(device.label.toLowerCase().includes('front')) {\r\n                    selectedDevice = {\r\n                      label: device.label,\r\n                      value: device.deviceId\r\n                    };\r\n                  }\r\n\r\n                  return device;\r\n                })\r\n              }\r\n    \r\n              await this.props.chime.audioVideo.chooseVideoInputDevice(selectedDevice);\r\n            } else {\r\n              const videoInputDevices = await this.props.chime.audioVideo.listVideoInputDevices();\r\n              let selectedDevice = this.props.chime.currentVideoInputDevice;\r\n              if(videoInputDevices.length >= 2) {\r\n                videoInputDevices.map(device => {\r\n                  if(device.label.toLowerCase().includes('front')) {\r\n                    selectedDevice = {\r\n                      label: device.label,\r\n                      value: device.deviceId\r\n                    };\r\n                  }\r\n\r\n                  return device;\r\n                })\r\n              }\r\n    \r\n              await this.props.chime.chooseVideoInputDevice(selectedDevice);\r\n            }\r\n            \r\n  \r\n          } catch (err) {\r\n            try{\r\n              const videoInputDevices = await this.props.chime.audioVideo.listVideoInputDevices();\r\n              await this.props.chime.audioVideo.chooseVideoInputDevice(videoInputDevices[0]);\r\n            } catch(e) {\r\n              console.log(e);\r\n            }\r\n            \r\n          }\r\n  \r\n          try{\r\n            this.props.chime.audioVideo.startLocalVideoTile();\r\n          } catch(e) {\r\n            console.log(e);\r\n          }\r\n          \r\n        } else {\r\n          this.props.chime.meetingSession.audioVideo.stopLocalVideoTile();\r\n        }\r\n      }\r\n    })\r\n    \r\n    \r\n    // let me = this;\r\n    // setTimeout(function() {\r\n    //   me.videoButtonOnClick();\r\n    // }, 10000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.props && this.props.chime.audioVideo) {\r\n      this.props.chime.audioVideo.realtimeUnsubscribeToMuteAndUnmuteLocalAudio(\r\n        this.props.setMute\r\n      );\r\n    }\r\n\r\n    if(!this.props.isVideoChat) {\r\n      this.props.chime.audioVideo.realtimeMuteLocalAudio();\r\n    }\r\n  }\r\n\r\n  muteButtonOnClick = async () => {\r\n    if (this.props.muted) {\r\n      this.props.chime.audioVideo.realtimeUnmuteLocalAudio();\r\n    } else {\r\n      this.props.chime.audioVideo.realtimeMuteLocalAudio();\r\n    }\r\n    this.props.setMute(!this.props.muted)\r\n    // await new Promise(resolve => setTimeout(resolve, 10));\r\n  }\r\n\r\n  raiseButtonOnClick = () => {\r\n    const { connection } = this.props;\r\n    const data = `{\r\n      \"message\": \"sendmessage\",\r\n      \"data\": \"${!this.props.handRaiseStatus}\",\r\n      \"type\": \"raisehand\"\r\n    }`;\r\n    connection.send(data);\r\n  }\r\n\r\n  handlGoToLive = () => {\r\n    const { connection } = this.props;\r\n    const data = `{\r\n      \"message\": \"sendmessage\",\r\n      \"title\": \"${this.props.title}\",\r\n      \"type\": \"gotolive\"\r\n    }`;\r\n    connection.send(data);\r\n  }\r\n\r\n  shareButtonOnClick = async () => {\r\n    if (this.state.shareScreenStatue === false) {\r\n      this.setState({ shareScreenStatue: true });\r\n      await this.props.chime.audioVideo.stopContentShare();\r\n    }\r\n    else {\r\n      try{\r\n        let stream = await this.props.chime.audioVideo.startContentShareFromScreenCapture();\r\n        if(stream) {\r\n          this.setState({ shareScreenStatue: false });\r\n        }\r\n      } catch(e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }\r\n\r\n  videoButtonOnClick = async () => {\r\n    if(this.props.isLive) {\r\n      if (this.state.videoStatus === 'Disabled') {\r\n        this.setState({ videoStatus: 'Loading' });\r\n        try {\r\n          if (!this.props.chime.currentVideoInputDevice) {\r\n            // throw new Error('currentVideoInputDevice does not exist');\r\n            const videoInputDevices = await this.props.chime.audioVideo.listVideoInputDevices();\r\n            let selectedDevice = videoInputDevices[0];\r\n            if(videoInputDevices.length >= 2) {\r\n              videoInputDevices.map(device => {\r\n                if(device.label.toLowerCase().includes('front')) {\r\n                  selectedDevice = {\r\n                    label: device.label,\r\n                    value: device.deviceId\r\n                  };\r\n                }\r\n\r\n                return device;\r\n              })\r\n            }\r\n  \r\n            await this.props.chime.audioVideo.chooseVideoInputDevice(selectedDevice);\r\n          } else {\r\n            try {\r\n              const videoInputDevices = await this.props.chime.audioVideo.listVideoInputDevices();\r\n              // await this.props.chime.chooseVideoInputDevice(\r\n              //   this.props.chime.currentVideoInputDevice\r\n              // );\r\n    \r\n              let selectedDevice = this.props.chime.currentVideoInputDevice;\r\n              if(videoInputDevices.length >= 2) {\r\n                videoInputDevices.map(device => {\r\n                  if(device.label.toLowerCase().includes('front')) {\r\n                    selectedDevice = {\r\n                      label: device.label,\r\n                      value: device.deviceId\r\n                    };\r\n                  }\r\n\r\n                  return device;\r\n                })\r\n              }\r\n    \r\n              await this.props.chime.chooseVideoInputDevice(selectedDevice);\r\n    \r\n            } catch (err) {\r\n              const videoInputDevices = await this.props.chime.audioVideo.listVideoInputDevices();\r\n              await this.props.chime.audioVideo.chooseVideoInputDevice(videoInputDevices[0]);\r\n            }\r\n          }\r\n  \r\n          this.props.chime.audioVideo.startLocalVideoTile();\r\n  \r\n          this.setState({ videoStatus: 'Enabled' });\r\n        } catch (error) {\r\n          // eslint-disable-next-line\r\n          console.error(error);\r\n          this.setState({ videoStatus: 'Disabled' });\r\n        }\r\n      } else if (this.state.videoStatus === 'Enabled') {\r\n        this.setState({ videoStatus: 'Loading' });\r\n        this.props.chime.meetingSession.audioVideo.stopLocalVideoTile();\r\n        this.setState({ videoStatus: 'Disabled' });\r\n      }\r\n    } else {\r\n      if(this.state.videoStatus === 'Enabled') {\r\n        this.props.setLocalCamera(false);\r\n        this.setState({videoStatus: 'Disabled'});\r\n      } else {\r\n        this.props.setLocalCamera(true);\r\n        this.setState({videoStatus: 'Enabled'});\r\n      }\r\n      \r\n    }\r\n    \r\n  }\r\n\r\n  endButtonOnClick = async () => {\r\n    if(this.props.role === 'host') {\r\n      confirmAlert({\r\n        title: 'Confirm to leave or end session',\r\n        message: '',\r\n        buttons: [\r\n          {\r\n            label: 'Leave Room',\r\n            onClick: ()=> this.leaveroom()\r\n          },\r\n          {\r\n            label: 'End Session',\r\n            onClick: ()=> this.leaveroom(true)\r\n          },\r\n          {\r\n            label: 'Cancel',\r\n            onClick: () => console.log()\r\n          }\r\n        ]\r\n      })\r\n    } else {\r\n      confirmAlert({\r\n        title: 'Confirm to leave',\r\n        message: 'Are you sure you want to leave?',\r\n        buttons: [\r\n          {\r\n            label: 'Leave Room',\r\n            onClick: ()=> this.leaveroom()\r\n          },\r\n          {\r\n            label: 'Cancel',\r\n            onClick: () => console.log()\r\n          }\r\n        ]\r\n      })\r\n    }\r\n  }\r\n\r\n  leaveroom = async (isEnd = false) => {\r\n    await this.props.chime.leaveRoom(this.props.role === 'host' && isEnd);\r\n    sessionStorage.removeItem(this.props.ssName);\r\n    const whereTo = `${this.props.baseHref}/${this.props.role === 'host' && isEnd ? '' : 'join?room=' + this.props.title}`;\r\n    this.props.history.push(whereTo);\r\n    window.location.reload();\r\n  }\r\n\r\n  toggleChat = () => {\r\n    if (this.state.openChatStatus === false) {\r\n      this.setState({ openChatStatus: true, openParticipantsStatus: false });\r\n      this.props.openChat();\r\n    }\r\n    else {\r\n      this.setState({ openChatStatus: false });\r\n      this.props.closeChat();\r\n    }\r\n  }\r\n\r\n  togglePT = () => {\r\n    if (this.state.openParticipantsStatus === false) {\r\n      this.setState({ openParticipantsStatus: true, openChatStatus: false });\r\n      this.props.openPT();\r\n    }\r\n    else {\r\n      this.setState({ openParticipantsStatus: false });\r\n      this.props.closeChat();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const mic_controls = this.props.muted ? 'controls__btn--mic_on' : 'controls__btn--mic_off';\r\n    const cam_controls = this.state.videoStatus === 'Enabled' ? 'controls__btn--cam_off' : 'controls__btn--cam_on';\r\n    const hand_controls = this.props.handRaiseStatus ? 'controls__btn--raise-on' : 'controls__btn--raise-off';\r\n    const share_controls = this.state.shareScreenStatue ? 'controls__btn--share-on' : 'controls__btn--share-off';\r\n    return (\r\n      <div className=\"controls pos-relative\">\r\n        \r\n        {\r\n          this.props.isVideoChat && \r\n          <div className=\"button-group1\">\r\n          <button className={`controls__btn ${mic_controls} btn rounded btn--mic`} onClick={this.muteButtonOnClick}>\r\n            <div className=\"btn__svg btn__svg--mic_on button-layout btn-toggle\" >\r\n              <img src={muteIcon} alt=\"mute icon\" className={`toggle-icon ${this.props.muted ? 'toggle-off-icon' : ''}`}></img>\r\n              {\r\n                this.props.muted && <img src={unIcon} alt=\"block icon\" className={'un-icon mute-block'}></img>\r\n              }\r\n              <span className=\"txt-oncontrolbtn toggle-text\">{this.props.muted ? 'Unmute' : 'Mute'}</span>\r\n            </div>\r\n          </button>\r\n\r\n          <button className={`controls__btn ${cam_controls} btn rounded btn--cam`} onClick={this.videoButtonOnClick}>\r\n            <div className=\"btn__svg btn__svg--cam_on button-layout btn-toggle\">\r\n              <img src={cameraIcon} alt=\"camera icon\" className={`toggle-icon ${this.state.videoStatus !== 'Enabled' ? 'toggle-off-icon' : ''}`}></img>\r\n              {\r\n                this.state.videoStatus !== 'Enabled' && <img src={unIcon} alt=\"block icon\" className={'un-icon camera-block'}></img>\r\n              }\r\n              <span className=\"txt-oncontrolbtn toggle-text\">{this.state.videoStatus === 'Enabled' ? 'Camera off' : 'Camera on'}</span>\r\n            </div>\r\n          </button>\r\n          \r\n          {\r\n            this.props.role === 'host' && (\r\n            <button className={`controls__btn ${share_controls} btn rounded btn--share`} onClick={this.shareButtonOnClick}>\r\n              <div className=\"btn__svg btn__svg--share_on button-layout btn-toggle\">\r\n                <img src={shareIcon} alt=\"share icon\" className={`toggle-icon ${this.state.shareScreenStatue ? 'toggle-off-icon' : ''}`}></img>\r\n                {\r\n                  this.state.shareScreenStatue && <img src={unIcon} alt=\"block icon\" className={'un-icon share-block'}></img>\r\n                }\r\n                <span className=\"txt-oncontrolbtn toggle-text\">{this.state.shareScreenStatue ? 'Share screen' : 'Stop sharing'}</span>\r\n              </div>\r\n            </button>\r\n          )}\r\n\r\n          \r\n          {\r\n            this.props.role === 'attendee' && (\r\n            <button className={`controls__btn ${hand_controls} btn rounded btn--hand`} onClick={this.raiseButtonOnClick}>\r\n              <div className=\"btn__svg btn__svg--hand_on button-layout btn-toggle\">\r\n                <img src={handIcon} alt=\"raise icon\" className={`toggle-icon raise-toggle-icon ${this.props.handRaiseStatus ? 'toggle-off-icon' : ''}`}></img>\r\n                {\r\n                  this.props.handRaiseStatus && <img src={unIcon} alt=\"block icon\" className={'un-icon hand-block'}></img>\r\n                }\r\n                <span className=\"txt-oncontrolbtn toggle-text\">{this.props.handRaiseStatus ? 'Raise hand' : 'Lower hand'}</span>\r\n              </div>\r\n            </button>\r\n          )}\r\n          \r\n\r\n          <button className={`controls__btn ${share_controls} btn rounded btn--qa`} onClick={this.toggleChat}>\r\n            <div className=\"btn__svg btn__svg--share_on button-layout btn-toggle\">\r\n              <img src={this.props.isOpenChat && this.state.openChatStatus ? qaaIcon : qaIcon} alt=\"qa icon\" className={'toggle-icon'}></img>\r\n              <span className=\"txt-oncontrolbtn toggle-text\">Q&A</span>\r\n            </div>\r\n          </button>\r\n          \r\n          {\r\n            this.props.role === 'host' && \r\n            <button className={`controls__btn ${share_controls} btn rounded btn--participants`} onClick={this.togglePT}>\r\n            <div className=\"btn__svg btn__svg--share_on button-layout btn-toggle\">\r\n              <img src={this.props.isOpenChat && this.state.openParticipantsStatus ? useraIcon : userIcon} alt=\"qa icon\" className={'toggle-icon'}></img>\r\n              <span className=\"txt-oncontrolbtn toggle-text\">Participants</span>\r\n            </div>\r\n          </button>\r\n          }\r\n          \r\n        </div>\r\n        \r\n        }\r\n        \r\n        {\r\n          !this.props.isVideoChat && <div></div>\r\n        }\r\n        <div className=\"button-group3\">\r\n          {\r\n            (!this.props.isLive && this.props.role === 'host') &&\r\n            <button className=\"go-livebtn\" onClick={this.handlGoToLive}>\r\n              <span className=\"txt-onbtn\">GO LIVE</span>\r\n            </button>\r\n          }\r\n          \r\n          {\r\n            this.props.isLive && \r\n            <button className=\"live-meetingbtn txt-onbtn\" onClick={this.endButtonOnClick}>\r\n            <span className=\"txt-onbtn\">{this.props.role === 'host' ? 'End Session' : 'LEAVE MEETING'}</span>\r\n          </button>\r\n          }\r\n          \r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nControls.propTypes = {\r\n  chime: PropTypes.object,\r\n  baseHref: PropTypes.string,\r\n  ssName: PropTypes.string,\r\n  title: PropTypes.string,\r\n  openSettings: PropTypes.func,\r\n  role: PropTypes.string,\r\n  history: PropTypes.object,\r\n  myVideoElement: PropTypes.object,\r\n  openChat: PropTypes.func,\r\n  openPT: PropTypes.func,\r\n  closeChat: PropTypes.func,\r\n  isOpenChat: PropTypes.bool,\r\n  joinInfo: PropTypes.object,\r\n  connection: PropTypes.object,\r\n  handRaiseStatus: PropTypes.bool,\r\n  muted: PropTypes.bool,\r\n  setMute: PropTypes.func,\r\n  isLive: PropTypes.bool,\r\n  isLocalCamera: PropTypes.bool,\r\n  setLocalCamera: PropTypes.func,\r\n  isVideoChat: PropTypes.bool\r\n};\r\n\r\nexport default Controls;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as config from '../../config';\r\n\r\nclass Settings extends Component {\r\n\r\n  state = {\r\n    microphone: '',\r\n    speaker: '',\r\n    camera: ''\r\n  }\r\n\r\n  devicesUpdatedCallback = (fullDeviceInfo) => {\r\n    if (config.DEBUG) console.log(fullDeviceInfo);\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.handleKeyDown);\r\n\r\n    this.props.chime.subscribeToDevicesUpdated(this.devicesUpdatedCallback);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\r\n\r\n    this.props.chime.unsubscribeFromDevicesUpdated(this.devicesUpdatedCallback);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.keyCode === 27) { // keyCode 27 is Escape key\r\n      this.props.closeSettings();\r\n    }\r\n  }\r\n\r\n  handlePlaybackURLChange = (e) => {\r\n    this.setState({ playbackURL: e.target.value });\r\n  }\r\n\r\n  handleMicrophoneChange = (e) => {\r\n    this.setState({ microphone: e.target.value });\r\n\r\n    if (this.props.chime.audioInputDevices.length) {\r\n      let selectedDevice;\r\n      let o;\r\n      for (o in this.props.chime.audioInputDevices) {\r\n        if (this.props.chime.audioInputDevices[o].value === e.target.value) {\r\n          selectedDevice = this.props.chime.audioInputDevices[o];\r\n          break;\r\n        }\r\n      }\r\n      this.props.chime.chooseAudioInputDevice(selectedDevice);\r\n    }\r\n  }\r\n\r\n  handleSpeakerChange = (e) => {\r\n    this.setState({ speaker: e.target.value });\r\n\r\n    if (this.props.chime.audioOutputDevices.length) {\r\n      let selectedDevice;\r\n      let o;\r\n      for (o in this.props.chime.audioOutputDevices) {\r\n        if (this.props.chime.audioOutputDevices[o].value === e.target.value) {\r\n          selectedDevice = this.props.chime.audioOutputDevices[o];\r\n          break;\r\n        }\r\n      }\r\n      this.props.chime.chooseAudioOutputDevice(selectedDevice);\r\n    }\r\n  }\r\n\r\n  handleCameraChange = async (e) => {\r\n    this.setState({ camera: e.target.value });\r\n\r\n    if (this.props.chime.videoInputDevices.length) {\r\n      let selectedDevice;\r\n      let o;\r\n      for (o in this.props.chime.videoInputDevices) {\r\n        if (this.props.chime.videoInputDevices[o].value === e.target.value) {\r\n          selectedDevice = this.props.chime.videoInputDevices[o];\r\n          break;\r\n        }\r\n      }\r\n      this.props.chime.chooseVideoInputDevice(selectedDevice);\r\n    }\r\n  }\r\n\r\n  handleSave = (e) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    const {microphone, speaker, camera } = this.state;\r\n    this.props.saveSettings(microphone, speaker, camera);\r\n  }\r\n\r\n  renderDevices = (devices, defaultValue, label) => {\r\n    if (devices && devices.length) {\r\n      return (\r\n        devices.map(device => {\r\n          return (\r\n            <option key={device.value} value={device.value}>{`${device.label}`}</option>\r\n          )\r\n        })\r\n      )\r\n    } else {\r\n      return (\r\n      <option value=\"no-permission\">{`Permission not granted to access ${label} devices`}</option>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const currentMic = this.props.chime.currentAudioInputDevice;\r\n    const currentSpeaker = this.props.chime.currentAudioOutputDevice;\r\n    const currentCam = this.props.chime.currentVideoInputDevice;\r\n    const availableMics = this.props.chime.audioInputDevices;\r\n    const availableSpeakers = this.props.chime.audioOutputDevices;\r\n    const availableCams = this.props.chime.videoInputDevices;\r\n\r\n    return (\r\n      <div className=\"modal pos-absolute top-0 bottom-0 \">\r\n        <div className=\"modal__el\">\r\n          <h1 className=\"mg-b-2\">Settings</h1>\r\n          <form>\r\n            <fieldset>\r\n              <input className=\"mg-b-2\" name=\"\" id=\"\" type=\"text\" readOnly={true} placeholder=\"Playback URL\" onChange={this.handlePlaybackURLChange} value={this.props.joinInfo.PlaybackURL} disabled />\r\n              <select\r\n                name=\"microphone\"\r\n                className=\"select__field\"\r\n                onChange={this.handleMicrophoneChange}\r\n                value={this.state.microphone || currentMic.value}\r\n                disabled={!availableMics.length}\r\n              >\r\n                {this.renderDevices(availableMics, currentMic, 'microphone')}\r\n              </select>\r\n              <select\r\n                name=\"speaker\"\r\n                className=\"select__field\"\r\n                onChange={this.handleSpeakerChange}\r\n                value={this.state.speaker || currentSpeaker.value}\r\n                disabled={!availableSpeakers.length}\r\n              >\r\n                {this.renderDevices(availableSpeakers, currentSpeaker, 'speaker')}\r\n              </select>\r\n              <select\r\n                name=\"camera\"\r\n                className=\"select__field\"\r\n                onChange={this.handleCameraChange}\r\n                value={this.state.camera || currentCam.value}\r\n                disabled={!availableCams.length}\r\n              >\r\n                {this.renderDevices(availableCams, currentCam, 'camera')}\r\n              </select>\r\n              <button className=\"btn btn--primary mg-t-2\" onClick={this.handleSave}>Save</button>\r\n            </fieldset>\r\n          </form>\r\n        </div>\r\n        <div className=\"modal__overlay\"></div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nSettings.propTypes = {\r\n  chime: PropTypes.object,\r\n  joinInfo: PropTypes.object,\r\n  saveSettings: PropTypes.func,\r\n  closeSettings: PropTypes.func,\r\n  settings: PropTypes.object,\r\n  checkAudioVideoPermission: PropTypes.func,\r\n  updateAudioVideoDevices: PropTypes.func,\r\n};\r\n\r\nexport default Settings;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Webcam from 'react-webcam';\r\n\r\nclass LocalVideo extends Component {\r\n\r\n  state = {\r\n    enabled: false,\r\n    muted: false,\r\n    showMeta: true,\r\n    currentLocalTileId: -1\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.videoElement = React.createRef();\r\n  }\r\n\r\n  rosterCallback = (newRoster) => {\r\n\r\n    let attendeeId;\r\n    for (attendeeId in newRoster) {\r\n\r\n      // Exclude others\r\n      if (attendeeId !== this.props.joinInfo.Attendee.AttendeeId) {\r\n        continue;\r\n      }\r\n\r\n      this.setState({ muted: newRoster[attendeeId].muted });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Hide meta info after 2 seconds\r\n    setTimeout(() => {\r\n      this.setState({\r\n        showMeta: false\r\n      });\r\n    }, 2500);\r\n\r\n    this.props.chime.audioVideo.addObserver({\r\n      videoTileDidUpdate: (tileState) => {\r\n        console.log(tileState);\r\n        if (\r\n          !tileState.boundAttendeeId ||\r\n          !tileState.localTile ||\r\n          !tileState.tileId ||\r\n          !this.videoElement.current\r\n        ) {\r\n          return;\r\n        }\r\n\r\n        if(this.state.currentLocalTileId === -1) {\r\n          this.props.chime.audioVideo.bindVideoElement(\r\n            tileState.tileId,\r\n            this.videoElement.current\r\n          );\r\n          this.setState({\r\n            enabled: tileState.active,\r\n            currentLocalTileId: tileState.tileId\r\n          });\r\n\r\n        } else {\r\n          // this.props.chime.audioVideo.bindVideoElement(\r\n          //   this.state.currentLocalTileId,\r\n          //   this.videoElement.current\r\n          // );\r\n          // this.setState({\r\n          //   enabled: tileState.active,\r\n          //   currentLocalTileId: tileState.tileId\r\n          // });\r\n          // if(this.state.enabled) {\r\n          //   this.props.chime.audioVideo.startLocalVideoTile();\r\n          // }\r\n        }\r\n        \r\n      }\r\n    });\r\n\r\n    this.props.chime.subscribeToRosterUpdate(this.rosterCallback);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.chime.unsubscribeFromRosterUpdate(this.rosterCallback);\r\n  }\r\n\r\n  handleMouseEnter(e) {\r\n    this.setState({\r\n      showMeta: true\r\n    });\r\n  }\r\n\r\n  handleMouseLeave(e) {\r\n    this.setState({\r\n      showMeta: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // always show metadata when muted\r\n    // const showMeta = this.state.showMeta || this.state.muted || !this.state.enabled;\r\n\r\n    // const micMuteCls = this.state.muted ? 'controls__btn--mic_on' : 'controls__btn--mic_off';\r\n    // const metaCls = showMeta ? '' : ' cam__meta--hide';\r\n    return (\r\n      <div className=\"cam local-cam\" onMouseEnter={this.handleMouseEnter.bind(this)} onMouseLeave={this.handleMouseLeave.bind(this)}>\r\n        <div className=\"cam__preview\">\r\n          <div className=\"video-container pos-relative\">\r\n            {\r\n              this.props.isLive ? <video className=\"attendee_cam\" ref={this.videoElement} /> : \r\n              this.props.isLocalCamera ? <Webcam className={\"attendee_cam local-cam-not-live\"}/> : ''\r\n            }\r\n            \r\n          </div>\r\n        </div>\r\n        {/* <span className={`cam__meta${metaCls}`} id={`${this.props.joinInfo.Attendee.AttendeeId}`}>\r\n          You\r\n          <span className={`${micMuteCls} btn--mic`} data-id={this.props.joinInfo.Attendee.AttendeeId}>\r\n            <svg className=\"attendee mg-l-1 btn__svg btn__svg--sm btn__svg--mic_on\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14C13.66 14 14.99 12.66 14.99 11L15 5C15 3.34 13.66 2 12 2C10.34 2 9 3.34 9 5V11C9 12.66 10.34 14 12 14ZM17.3 11C17.3 14 14.76 16.1 12 16.1C9.24 16.1 6.7 14 6.7 11H5C5 14.41 7.72 17.23 11 17.72V21H13V17.72C16.28 17.24 19 14.42 19 11H17.3Z\" fill=\"white\"/></svg>\r\n            <svg className=\"attendee mg-l-1 btn__svg btn__svg--sm btn__svg--mic_off\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M19 11H17.3C17.3 11.74 17.14 12.43 16.87 13.05L18.1 14.28C18.66 13.3 19 12.19 19 11ZM14.98 11.17C14.98 11.11 15 11.06 15 11V5C15 3.34 13.66 2 12 2C10.34 2 9 3.34 9 5V5.18L14.98 11.17ZM4.27 3L3 4.27L9.01 10.28V11C9.01 12.66 10.34 14 12 14C12.22 14 12.44 13.97 12.65 13.92L14.31 15.58C13.6 15.91 12.81 16.1 12 16.1C9.24 16.1 6.7 14 6.7 11H5C5 14.41 7.72 17.23 11 17.72V21H13V17.72C13.91 17.59 14.77 17.27 15.54 16.82L19.73 21L21 19.73L4.27 3Z\" fill=\"white\"/></svg>\r\n          </span>\r\n        </span> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nLocalVideo.propTypes = {\r\n  chime: PropTypes.object,\r\n  joinInfo: PropTypes.object,\r\n  isLive: PropTypes.bool,\r\n  isLocalCamera: PropTypes.bool\r\n};\r\n\r\nexport default LocalVideo;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass RemoteVideo extends Component {\r\n\r\n  state = {\r\n    showMeta: true\r\n  }\r\n  \r\n  componentDidMount() {\r\n    // Hide meta info after 2 seconds\r\n    if (!this.props.muted) {\r\n      setTimeout(() => {\r\n        this.setState({\r\n          showMeta: false\r\n        });\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  handleMouseEnter(e) {\r\n    this.setState({\r\n      showMeta: true\r\n    });\r\n  }\r\n\r\n  handleMouseLeave(e) {\r\n    this.setState({\r\n      showMeta: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      attendeeId,\r\n      // videoEnabled,\r\n      // name,\r\n      // muted,\r\n      videoElement,\r\n      isHidden\r\n    } = this.props;\r\n    // always show metadata when participant is muted or cam is off\r\n    // const showMeta = this.state.showMeta || muted || !videoEnabled;\r\n\r\n    let camClass = attendeeId  ? '' : ' hidden';\r\n    if (isHidden) {\r\n      camClass = ' hidden';\r\n    }\r\n    // const micMuteCls = muted ? 'controls__btn--mic_on' : 'controls__btn--mic_off';\r\n    // const metaCls =  showMeta ? '' : ' cam__meta--hide';\r\n    const videoId = `video_${attendeeId}`;\r\n    return(\r\n\r\n        <div className={`cam${camClass} cam-layout-${this.props.count}`} key={attendeeId} onMouseEnter={this.handleMouseEnter.bind(this)} onMouseLeave={this.handleMouseLeave.bind(this)}>\r\n          <div className=\"cam__preview\">\r\n            <div className=\"video-container pos-relative\">\r\n              <video ref={videoElement} className=\"attendee_cam remote-attendee\" id={videoId} />\r\n            </div>\r\n\r\n            <div className=\"remote-bottom-bar\">\r\n              {this.props.name}\r\n            </div>\r\n          </div>\r\n          {/* <span className={`cam__meta${metaCls}`}>\r\n            {name}\r\n            <span className={`${micMuteCls} btn--mic`} data-id={attendeeId}>\r\n              <svg className=\"attendee mg-l-1 btn__svg btn__svg--sm btn__svg--mic_on\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14C13.66 14 14.99 12.66 14.99 11L15 5C15 3.34 13.66 2 12 2C10.34 2 9 3.34 9 5V11C9 12.66 10.34 14 12 14ZM17.3 11C17.3 14 14.76 16.1 12 16.1C9.24 16.1 6.7 14 6.7 11H5C5 14.41 7.72 17.23 11 17.72V21H13V17.72C16.28 17.24 19 14.42 19 11H17.3Z\" fill=\"white\"/></svg>\r\n              <svg className=\"attendee mg-l-1 btn__svg btn__svg--sm btn__svg--mic_off\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M19 11H17.3C17.3 11.74 17.14 12.43 16.87 13.05L18.1 14.28C18.66 13.3 19 12.19 19 11ZM14.98 11.17C14.98 11.11 15 11.06 15 11V5C15 3.34 13.66 2 12 2C10.34 2 9 3.34 9 5V5.18L14.98 11.17ZM4.27 3L3 4.27L9.01 10.28V11C9.01 12.66 10.34 14 12 14C12.22 14 12.44 13.97 12.65 13.92L14.31 15.58C13.6 15.91 12.81 16.1 12 16.1C9.24 16.1 6.7 14 6.7 11H5C5 14.41 7.72 17.23 11 17.72V21H13V17.72C13.91 17.59 14.77 17.27 15.54 16.82L19.73 21L21 19.73L4.27 3Z\" fill=\"white\"/></svg>\r\n            </span>\r\n          </span> */}\r\n        </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nRemoteVideo.propTypes = {\r\n  chime: PropTypes.object,\r\n  attendeeId: PropTypes.string,\r\n  videoEnabled: PropTypes.bool,\r\n  name: PropTypes.string,\r\n  muted: PropTypes.bool,\r\n  videoElement: PropTypes.object,\r\n  count: PropTypes.number,\r\n  joinInfo: PropTypes.object,\r\n  isHidden: PropTypes.bool,\r\n};\r\n\r\nexport default RemoteVideo;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RemoteVideo from './RemoteVideo';\r\nimport * as config from '../../config';\r\n\r\nconst MAX_REMOTE_VIDEOS = config.CHIME_ROOM_MAX_ATTENDEE;\r\n\r\nclass RemoteVideoGroup extends Component {\r\n\r\n  state = {\r\n    rosterChanged: false,\r\n    roster: [],\r\n    shareVideoElement: React.createRef(),\r\n    isMyContent: false,\r\n    isSharingContent: false,\r\n    sharingTileId: 0,\r\n    sharingInfo: {}\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.previousRoster = {};\r\n  }\r\n\r\n  findRosterSlot = (attendeeId) => {\r\n    let index;\r\n    for (index = 0; index < this.state.roster.length; index++) {\r\n      if (this.state.roster[index].attendeeId === attendeeId) {\r\n        return index;\r\n      }\r\n    }\r\n    for (index = 0; index < this.state.roster.length; index++) {\r\n      if (!this.state.roster[index].attendeeId) {\r\n        return index;\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  rosterCallback = (newRoster) => {\r\n    if (Object.keys(newRoster).length > 2) {\r\n      if (config.DEBUG) console.log('More than 2');\r\n    }\r\n\r\n    if (Object.keys(newRoster).length < Object.keys(this.previousRoster).length) {\r\n      if (config.DEBUG) console.log('Attendee(s) left');\r\n      const differ = Object.keys(this.previousRoster).filter(k => this.previousRoster[k] !== newRoster[k]);\r\n      if (config.DEBUG) console.log(differ);\r\n\r\n      if (differ.length) {\r\n        let i;\r\n        for (i in differ) {\r\n          const index = this.findRosterSlot(differ[i]);\r\n          const roster = this.state.roster;\r\n          roster[index] = {\r\n            videoElement: roster[index].videoElement\r\n          }\r\n          this.setState({ roster });\r\n        }\r\n      }\r\n    }\r\n\r\n    this.previousRoster = Object.assign({}, newRoster);\r\n\r\n    let attendeeId;\r\n    for (attendeeId in newRoster) {\r\n\r\n      // Exclude self\r\n      if (attendeeId === this.props.joinInfo.Attendee.AttendeeId) {\r\n        continue;\r\n      }\r\n\r\n      // exclude empty name\r\n      if (!newRoster[attendeeId].name) {\r\n        continue;\r\n      }\r\n\r\n      const index = this.findRosterSlot(attendeeId);\r\n      const roster = this.state.roster;\r\n      const attendee = {\r\n        ...roster[index],\r\n        attendeeId,\r\n        ...newRoster[attendeeId]\r\n      };\r\n\r\n      roster[index] = attendee;\r\n      this.setState({ roster });\r\n    }\r\n\r\n    // participants props proceed\r\n    let {participants} = this.props;\r\n    let keys = Object.keys(newRoster);\r\n    let parts = [];\r\n    keys.map(key => {\r\n\r\n      if(key !== this.props.joinInfo.Attendee.AttendeeId) {\r\n        let isExisting = false;\r\n        participants.map(participant => {\r\n          if(participant.attendeeId === key) {\r\n            parts.push({\r\n              ...participant,\r\n              mute: newRoster[key].muted,\r\n              name: newRoster[key].name\r\n            });\r\n\r\n            participant.mute = newRoster[key].muted;\r\n            participant.name = newRoster[key].name;\r\n\r\n            isExisting = true;\r\n          }\r\n\r\n          return participant;\r\n        });\r\n        \r\n        if(!isExisting) {\r\n          let item = {\r\n            name: newRoster[key].name,\r\n            mute: newRoster[key].muted,\r\n            host: false,\r\n            raisehand: false,\r\n            attendeeId: key,\r\n            isVideoChat: true\r\n          }\r\n    \r\n          parts.push(item);\r\n        }\r\n      }\r\n\r\n      return key;\r\n    });\r\n    \r\n    this.props.setParts(parts);\r\n\r\n  };\r\n\r\n  videoTileDidUpdateCallback = async (tileState) => {\r\n    \r\n    if (\r\n      tileState.boundAttendeeId &&\r\n      // tileState.localTile &&\r\n      tileState.isContent &&\r\n      tileState.tileId\r\n    ) {\r\n      if(tileState.boundAttendeeId === this.props.joinInfo.Attendee.AttendeeId + '#content') {\r\n        this.setState({isMyContent: true});\r\n      } else {\r\n        this.setState({isMyContent: false});\r\n      }\r\n\r\n      const shareVideoElement = document.getElementById(`share_video`);\r\n      this.props.chime.audioVideo.bindVideoElement(\r\n        tileState.tileId,\r\n        shareVideoElement\r\n      );\r\n\r\n      this.setState({isSharingContent: true, sharingTileId: tileState.tileId});\r\n      this.setState({\r\n        sharingInfo: this.previousRoster[tileState.boundAttendeeId.replace('#content', '')]\r\n      });\r\n      return;\r\n    } else {\r\n      this.setState({isSharingContent: false});\r\n    }\r\n\r\n    if (\r\n      !tileState.boundAttendeeId ||\r\n      tileState.localTile ||\r\n      tileState.isContent ||\r\n      !tileState.tileId\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    let index = this.findRosterSlot(tileState.boundAttendeeId);\r\n    const roster = this.state.roster;\r\n    const attendee = {\r\n      ...roster[index],\r\n      videoEnabled: tileState.active,\r\n      attendeeId: tileState.boundAttendeeId,\r\n      tileId: tileState.tileId\r\n    };\r\n    roster[index] = attendee;\r\n    this.setState({ roster });\r\n\r\n    setTimeout(() => {\r\n      if (config.DEBUG) console.log(roster[index]);\r\n      const videoElement = document.getElementById(`video_${tileState.boundAttendeeId}`);\r\n      if (videoElement) {\r\n        this.props.chime.audioVideo.bindVideoElement(\r\n          tileState.tileId,\r\n          videoElement\r\n        );\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  videoTileWasRemovedCallback = (tileId) => {\r\n    let roster = this.state.roster;\r\n\r\n    // Find the removed tileId in the roster and mark the video as disabled.\r\n    // eslint-disable-next-line\r\n    if(tileId === this.state.sharingTileId) {\r\n      this.setState({\r\n        sharingTileId: 0, \r\n        isMyContent: false,\r\n        isSharingContent: false,\r\n        sharingInfo: {}\r\n      });\r\n    }\r\n\r\n    roster.find((o, i) => {\r\n      if (o.tileId === tileId) {\r\n        roster[i].videoEnabled = false;\r\n        this.setState({ roster });\r\n        if (config.DEBUG) console.log(`Tile was removed ${tileId}`);\r\n      }\r\n\r\n      return o;\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const roster = [];\r\n    // eslint-disable-next-line\r\n    Array.from(Array(MAX_REMOTE_VIDEOS).keys()).map((key, index) => {\r\n      roster[index] = {\r\n        videoElement: React.createRef()\r\n      };\r\n\r\n      return key;\r\n    });\r\n    this.setState({ roster });\r\n\r\n    this.props.chime.subscribeToRosterUpdate(this.rosterCallback);\r\n\r\n    this.props.chime.audioVideo.addObserver({\r\n      videoTileDidUpdate: this.videoTileDidUpdateCallback,\r\n      videoTileWasRemoved: this.videoTileWasRemovedCallback,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.chime.unsubscribeFromRosterUpdate(this.rosterCallback);\r\n  }\r\n\r\n  stopHandle = async () => {\r\n    await this.props.chime.audioVideo.stopContentShare();\r\n  }\r\n\r\n  getPart = (attendee) => {\r\n    let part = {};\r\n    this.props.participants.map(participant => {\r\n      if(participant.attendeeId === attendee.attendeeId) {\r\n        part = participant;\r\n      }\r\n      return participant;\r\n    });\r\n   \r\n    return part;\r\n  }\r\n\r\n  checkInShowAble = (attendeeId) => {\r\n    let isExisting = true;\r\n    this.props.showAbleParts.map(showablePart => {\r\n      if(attendeeId === showablePart) {\r\n        isExisting = false;\r\n      }\r\n      return showablePart;\r\n    });\r\n    return isExisting;\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.props.showAbleParts)\r\n    let count = 0;\r\n    this.state.roster.map((attendee) => {\r\n      if(attendee.attendeeId) {\r\n        const part = this.getPart(attendee);\r\n        if(part.attendeeId && part.isVideoChat) {\r\n          count ++;\r\n        }\r\n      }\r\n\r\n      return attendee;\r\n    });\r\n\r\n    let {shareVideoElement, isMyContent, isSharingContent, sharingInfo} = this.state;\r\n    \r\n    return(\r\n      <React.Fragment>\r\n        <div className={`sharing-video-container ${isMyContent || !isSharingContent ? 'display-none': ''}`}>\r\n          <video ref={shareVideoElement} className={`${this.props.isOpenChat ? 'opened-width-share-video' : ''}`} id='share_video' />\r\n        </div>\r\n\r\n        {isSharingContent && (\r\n          <div className={'sharing-headline-container'}>\r\n            {isMyContent ? <span className=\"sharing-text\">You are currently sharing your screen</span> : \r\n            <span className=\"sharing-text\">{sharingInfo.name} is currently screen sharing</span>}\r\n            \r\n            {isMyContent && <button className=\"mycontent-stop-sharing\" onClick={this.stopHandle}>STOP SHARING</button>}\r\n          </div>\r\n        )}\r\n        \r\n        \r\n        <div className={`remote-cams-container ${!isMyContent && isSharingContent ? 'display-none' : ''}`}>\r\n          {this.state.roster.map((attendee, index) => {\r\n            const part = this.getPart(attendee);\r\n            // if(part.attendeeId) console.log(part);\r\n            const isHidden = !part.attendeeId ? true : !part.isVideoChat ? true : this.checkInShowAble(part.attendeeId);\r\n            return (\r\n              <RemoteVideo\r\n                chime={this.props.chime}\r\n                key={index}\r\n                attendeeId={attendee.attendeeId}\r\n                videoEnabled={attendee.videoEnabled}\r\n                name={attendee.name}\r\n                muted={attendee.muted}\r\n                videoElement={attendee.videoElement}\r\n                count={count}\r\n                joinInfo={this.props.joinInfo}\r\n                isHidden={isHidden}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nRemoteVideoGroup.propTypes = {\r\n  chime: PropTypes.object,\r\n  joinInfo: PropTypes.object,\r\n  participants: PropTypes.array,\r\n  setParts: PropTypes.func,\r\n  isOpenChat: PropTypes.bool\r\n};\r\n\r\nexport default RemoteVideoGroup;\r\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\n// Styles\nimport \"./Alert.css\";\nimport logo from \"./../../assets/Logo.svg\";\n\nclass AlertWaiting extends Component {\n\n    render() {\n        return(\n        <div className={\"alert-container\"}>\n            <div className={\"alert-back-drop\"}>\n            </div>\n            <div className={\"alert-content\"}>\n                <img className=\"alert-logo\" src={logo} alt=\"Logo\" />\n                <p>Sorry, the session is not live yet.</p>\n                <p>Thank you for your patience.</p>\n                <p>You will be able to access this session shortly.</p>\n            </div>\n        </div>\n        );\n        \n    }\n}\n\nexport default withRouter(AlertWaiting);","export default __webpack_public_path__ + \"static/media/UoL.3e01f2ee.svg\";","export default __webpack_public_path__ + \"static/media/v-icon.c9bccf9e.svg\";","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as config from \"../../config\";\r\nimport {\r\n    DefaultPromisedWebSocketFactory,\r\n    DefaultDOMWebSocketFactory,\r\n    FullJitterBackoff,\r\n    ReconnectingPromisedWebSocket,\r\n    MeetingSessionStatusCode\r\n  } from 'amazon-chime-sdk-js';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\n// Components\r\n// import VideoPlayer from \"../videoPlayer/VideoPlayer\";\r\nimport Chat from \"../chat/Chat\";\r\nimport Controls from \"./Controls\";\r\nimport Settings from \"./Settings\";\r\nimport Error from \"./Error\";\r\nimport LocalVideo from './LocalVideo';\r\nimport RemoteVideoGroup from './RemoteVideoGroup';\r\nimport Alert from './Alert';\r\nimport AlertWaiting from './AlertWaiting';\r\n\r\n// Styles\r\nimport \"./ChimeWeb.css\";\r\nimport \"./Meeting.css\";\r\n\r\nimport logo from \"./../../assets/Logo.svg\";\r\nimport bodylogo from \"../../assets/UoL.svg\";\r\nimport vicon from \"../../assets/svgs/v-icon.svg\";\r\n\r\nclass Meeting extends Component {\r\n    constructor() {\r\n      super();\r\n\r\n      this.baseHref = config.BASE_HREF;\r\n      this.ssName = \"\";\r\n\r\n      this.audioElementRef = React.createRef();\r\n      this.myVideoElement = React.createRef();\r\n      this.WEB_SOCKET_TIMEOUT_MS = 130000;\r\n    }\r\n\r\n    state = {\r\n      meetingStatus: null, // Loading, Success or Failed\r\n      showSettings: false,\r\n      showError: false,\r\n      errorMsg: \"\",\r\n      showPopupMessage: false,\r\n      isChat: true,\r\n      isAvailable: false,\r\n\r\n      messages: [],\r\n      connection: null,\r\n      participants: [],\r\n      handRaiseStatus: true,\r\n      muted: false,\r\n\r\n      isLive: false,\r\n      isLocalCamera: true,\r\n      isVideoChat: true,\r\n      showAbleParts: [],\r\n    };\r\n\r\n    showModal = () => {\r\n      this.setState({ showPopupMessage: true });\r\n    };\r\n\r\n    openChat = () => {\r\n        this.setState({ showPopupMessage: true, isChat: true });\r\n    }\r\n\r\n    openPT = () => {\r\n        this.setState({ showPopupMessage: true, isChat: false });\r\n    }\r\n\r\n    changeChat = (index) => {\r\n        if(index === 0) this.setState({ isChat: true });\r\n        if(index === 1) this.setState({ isChat: false });\r\n    }\r\n\r\n    hideModal = () => {\r\n        this.setState({ showPopupMessage: false });\r\n    };\r\n\r\n    componentDidMount() {\r\n      \r\n      const start = async () => {\r\n        try {\r\n          const qs = new URLSearchParams(this.props.location.search);\r\n          const room = qs.get(\"room\");\r\n          this.ssName = `chime[${room}]`;\r\n          if (!room || !sessionStorage.getItem(this.ssName)) {\r\n              this.props.history.push(`${this.baseHref}/`);\r\n          }\r\n\r\n          const ssData = JSON.parse(sessionStorage.getItem(this.ssName));\r\n          if (config.DEBUG) console.log(ssData);\r\n\r\n          this.username = ssData.username;\r\n          this.title = ssData.title;\r\n          this.role = ssData.role;\r\n\r\n          if (!ssData.joinInfo) {\r\n              this.joinInfo = await this.props.chime.createRoom(\r\n                  this.role,\r\n                  this.username,\r\n                  this.title,\r\n                  ssData.playbackURL\r\n              );\r\n              const data = {\r\n                  ...ssData,\r\n                  joinInfo: this.joinInfo,\r\n              };\r\n              sessionStorage.setItem(this.ssName, JSON.stringify(data));\r\n              this.playbackURL = this.joinInfo.PlaybackURL;\r\n          } else {\r\n              // Browser refresh\r\n              this.joinInfo = ssData.joinInfo;\r\n              this.playbackURL = ssData.joinInfo.PlaybackURL;\r\n              await this.props.chime.reInitializeMeetingSession(\r\n                  this.joinInfo,\r\n                  this.username\r\n              );\r\n          }\r\n\r\n          let blocks = JSON.parse(localStorage.getItem('blockedMeetings'));\r\n          if(blocks) {\r\n              blocks.forEach(block => {\r\n                  if(block === this.joinInfo.Meeting.MeetingId) {\r\n                      this.props.history.push(`${this.baseHref}/removed`);\r\n                  }\r\n              })\r\n          }\r\n\r\n          this.setState({ \r\n            meetingStatus: \"Success\",\r\n            muted: this.role === 'host' ? false : true\r\n          });\r\n\r\n          if (this.role !== 'host') {\r\n            this.props.chime.audioVideo.realtimeMuteLocalAudio();\r\n          }\r\n\r\n          this.props.chime.audioVideo.addObserver({\r\n              audioVideoDidStop: async (sessionStatus) => {\r\n                  if (\r\n                      sessionStatus.statusCode() ===\r\n                      MeetingSessionStatusCode.AudioCallEnded\r\n                  ) {\r\n                      const whereTo = `${this.baseHref}/${\r\n                          this.role === \"host\" ? \"\" : \"end\"\r\n                      }`;\r\n                      this.props.chime.leaveRoom(this.role === \"host\");\r\n                      this.props.history.push(whereTo);\r\n                  }\r\n              },\r\n          });\r\n\r\n          // this.props.chime.joinRoom(this.audioElementRef.current);\r\n\r\n          // await this.props.chime.joinRoom(this.audioElementRef.current);\r\n\r\n          // inverk init websocket connection\r\n          // this.initChatConnection();\r\n          this.askVideoOrObserver();\r\n        } catch (error) {\r\n          // eslint-disable-next-line\r\n          console.error(error);\r\n          this.setState({ meetingStatus: \"Failed\" });\r\n        }\r\n      };\r\n      start();\r\n      \r\n\r\n      try{\r\n        if(!navigator.mediaDevices.enumerateDevices) {\r\n          this.setState({isAvailable: true});\r\n        }\r\n      } catch(e) {\r\n        console.log(e)\r\n        this.setState({isAvailable: true});\r\n      }\r\n\r\n      //   const isChrome = navigator.userAgent.indexOf(\"Chrome\") !== -1;\r\n      //   const isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\r\n      const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\r\n        \r\n      if(isIOS) {\r\n        const isChrome = navigator.userAgent.indexOf(\"CriOS\") !== -1;\r\n        if(isChrome) {\r\n          this.setState({isAvailable: true});\r\n        }\r\n      }\r\n    }\r\n\r\n    // init connection\r\n    \r\n  async initChatConnection() {\r\n    const { Meeting, Attendee } = this.joinInfo;\r\n    const messagingUrl = `${config.CHAT_WEBSOCKET}?MeetingId=${Meeting.MeetingId}&AttendeeId=${Attendee.AttendeeId}&JoinToken=${Attendee.JoinToken}`\r\n    const connection = new ReconnectingPromisedWebSocket(\r\n      messagingUrl,\r\n      [],\r\n      'arraybuffer',\r\n      new DefaultPromisedWebSocketFactory(new DefaultDOMWebSocketFactory()),\r\n      new FullJitterBackoff(1000, 0, 10000)\r\n    );\r\n\r\n    if (config.DEBUG) console.log(connection);\r\n\r\n    await connection.open(this.WEB_SOCKET_TIMEOUT_MS);\r\n\r\n    connection.addEventListener('message', async event => {\r\n      let {messages, participants} = this.state;\r\n      const messageData = JSON.parse(event.data);\r\n      \r\n      if(messageData.Type === 'sendmessage') {\r\n        messages.push({\r\n          id: messageData.MessageId,\r\n          timestamp: messageData.Time,\r\n          username: messageData.Sender,\r\n          message: messageData.Content,\r\n          vote: messageData.Vote,\r\n        });\r\n\r\n        this.setState({ messages });\r\n      } else if(messageData.Type === 'upvote') {\r\n        messages.map(message => {\r\n          if(message.id === messageData.MessageId) {\r\n            message.vote = messageData.Vote\r\n          }\r\n\r\n          return message;\r\n        });\r\n\r\n        this.setState({messages});\r\n      } else if(messageData.Type === 'deletemessage') {\r\n        let tempMessages = [];\r\n        messages.map(message => {\r\n          if(message.id !== messageData.MessageId) {\r\n            tempMessages.push(message);\r\n          }\r\n\r\n          return message;\r\n        });\r\n        \r\n        this.setState({messages: tempMessages});\r\n      } else if(messageData.Type === 'getall') {\r\n        let tempMessages = [];\r\n        messageData.messages.map(message => {\r\n          tempMessages.push({\r\n            id: message.MessageId,\r\n            timestamp: message.Time,\r\n            username: message.Sender,\r\n            message: message.Content,\r\n            vote: message.Vote,\r\n          });\r\n\r\n          return message;\r\n        });\r\n        \r\n        this.setState({messages: tempMessages});\r\n      } else if(messageData.Type === 'raisehand') {\r\n        participants.map(participant => {\r\n          if(participant.attendeeId === messageData.Sender && this.role === 'host') {\r\n            participant.raisehand = messageData.Data === 'false' ? true : false;\r\n            this.setErrorMsg(`${participant.name} has raised their hand.`)\r\n          }\r\n\r\n          return participant;\r\n        });\r\n        this.setState({participants});\r\n\r\n        if(messageData.Sender === this.joinInfo.Attendee.AttendeeId) {\r\n            this.setState({handRaiseStatus: messageData.Data === 'false' ? false: true})\r\n        }\r\n      } else if(messageData.Type === 'downhand') {\r\n        participants.map(participant => {\r\n          if(participant.attendeeId === messageData.Data) {\r\n            participant.raisehand = false;\r\n          }\r\n\r\n          return participant;\r\n        });\r\n\r\n        this.setState({participants});\r\n\r\n        if(messageData.Data === this.joinInfo.Attendee.AttendeeId) {\r\n          this.setState({handRaiseStatus: true});\r\n          this.setErrorMsg(\"Your hand has been lowered.\");\r\n        }\r\n      } else if(messageData.Type === 'muteremote') {\r\n        if(this.joinInfo.Attendee.AttendeeId === messageData.Data) {\r\n            this.props.chime.audioVideo.realtimeMuteLocalAudio();\r\n            this.setErrorMsg('You have been muted by the host.');\r\n        }\r\n      } else if(messageData.Type === 'removeremote') {\r\n        if(this.joinInfo.Attendee.AttendeeId === messageData.Data) {\r\n            this.setErrorMsg('Host removed you!');\r\n            await this.props.chime.leaveRoom(this.role === 'host');\r\n            sessionStorage.removeItem(this.ssName);\r\n            \r\n            let blocks = JSON.parse(localStorage.getItem('blockedMeetings'));\r\n            if(!blocks) {\r\n                blocks = [];\r\n            }\r\n\r\n            blocks.push(this.joinInfo.Meeting.MeetingId);\r\n            localStorage.setItem('blockedMeetings', JSON.stringify(blocks));\r\n\r\n\r\n            const whereTo = `${this.baseHref}/${this.role === 'host' ? '' : 'removed'}`;\r\n            this.props.history.push(whereTo);\r\n        }\r\n      } else if(messageData.Type === 'makehost') {\r\n        if(this.joinInfo.Attendee.AttendeeId === messageData.Data) {\r\n            this.role = 'host';\r\n            const ssData = JSON.parse(sessionStorage.getItem(this.ssName));\r\n            ssData.role = this.role;\r\n            sessionStorage.setItem(this.ssName, JSON.stringify(ssData));\r\n            this.setErrorMsg('You are now a host!');\r\n        }\r\n      } else if(messageData.Type === 'gotolive') {\r\n        this.setState({isLive: true});\r\n        \r\n        await this.props.chime.joinRoom(this.audioElementRef.current);\r\n        if(messageData.Host === this.joinInfo.Attendee.AttendeeId) {\r\n            this.setErrorMsg('The session is now live!');\r\n            if(this.state.isLive) {\r\n                try {\r\n                    if (!this.props.chime.currentVideoInputDevice) {\r\n                      // throw new Error('currentVideoInputDevice does not exist');\r\n                      const videoInputDevices = await this.props.chime.audioVideo.listVideoInputDevices();\r\n                      let selectedDevice = videoInputDevices[0];\r\n                      if(videoInputDevices.length >= 2) {\r\n                        videoInputDevices.map(device => {\r\n                          if(device.label.toLowerCase().includes('front')) {\r\n                            selectedDevice = {\r\n                              label: device.label,\r\n                              value: device.deviceId\r\n                            };\r\n                          }\r\n\r\n                          return device;\r\n                        })\r\n                      }\r\n            \r\n                      await this.props.chime.audioVideo.chooseVideoInputDevice(selectedDevice);\r\n                    } else {\r\n                      try {\r\n                        const videoInputDevices = await this.props.chime.audioVideo.listVideoInputDevices();\r\n                        // await this.props.chime.chooseVideoInputDevice(\r\n                        //   this.props.chime.currentVideoInputDevice\r\n                        // );\r\n              \r\n                        let selectedDevice = this.props.chime.currentVideoInputDevice;\r\n                        if(videoInputDevices.length >= 2) {\r\n                          videoInputDevices.map(device => {\r\n                            if(device.label.toLowerCase().includes('front')) {\r\n                              selectedDevice = {\r\n                                label: device.label,\r\n                                value: device.deviceId\r\n                              };\r\n                            }\r\n\r\n                            return device;\r\n                          })\r\n                        }\r\n              \r\n                        await this.props.chime.chooseVideoInputDevice(selectedDevice);\r\n              \r\n                      } catch (err) {\r\n                        const videoInputDevices = await this.props.chime.audioVideo.listVideoInputDevices();\r\n                        await this.props.chime.audioVideo.chooseVideoInputDevice(videoInputDevices[0]);\r\n                      }\r\n                    }\r\n            \r\n                    this.props.chime.audioVideo.startLocalVideoTile();\r\n                  } catch (error) {\r\n                    // eslint-disable-next-line\r\n                    console.error(error);\r\n                  }\r\n            }\r\n        } else {\r\n            this.setErrorMsg('The session is now live!');\r\n        }\r\n      } else if(messageData.Type === 'getlivestatus') {\r\n        if(!this.state.isLive) {\r\n            this.setState({isLive: messageData.status});\r\n            if(messageData.status) {\r\n                await this.props.chime.joinRoom(this.audioElementRef.current);\r\n            }\r\n        }\r\n        \r\n      } else if(messageData.Type === 'beforepart') {\r\n        // if(!this.state.isLive && this.role === 'host') {\r\n        if(this.joinInfo.Attendee.AttendeeId !== messageData.Sender) {\r\n          let {participants} = this.state;\r\n          let isExisting = false;\r\n          participants.map(part => {\r\n            if(part.attendeeId === messageData.Sender)\r\n            {\r\n              isExisting = true;\r\n              let isVideoChat = messageData.isVideoChat === 'true' ? true : false;\r\n              if(part.isVideoChat !== isVideoChat) {\r\n                part.isVideoChat = isVideoChat;\r\n              }\r\n            }\r\n            \r\n            return part;\r\n          })\r\n          if(!isExisting) {\r\n            console.log(messageData);\r\n            participants.push({\r\n              name: messageData.Name,\r\n              mute: false,\r\n              host: false,\r\n              raisehand: false,\r\n              attendeeId: messageData.Sender,\r\n              isVideoChat: messageData.isVideoChat === 'true' ? true : false,\r\n            });\r\n          }\r\n\r\n          this.setParts(participants);\r\n        }\r\n        \r\n      } else if (messageData.Type === 'showableparts') {\r\n        if(this.role !== 'host') {  \r\n          console.log(messageData);\r\n          // if(messageData.showableparts.length === 0) return;\r\n          // let isExist = false;\r\n          // messageData.showableparts.map(part => {\r\n          //   if (this.state.showAbleParts.includes(part)) {\r\n          //     isExist = true;\r\n          //   } else {\r\n          //     console.log(messageData.showableparts);\r\n          //     this.setState({showAbleParts: messageData.showableparts});  \r\n          //   }\r\n          //   return part;\r\n          // });\r\n\r\n          // if (!isExist) {\r\n          //   console.log(messageData.showableparts);\r\n          //   this.setState({showAbleParts: messageData.showableparts});\r\n          // }\r\n          this.setState({showAbleParts: messageData.showableparts});\r\n        }\r\n      }\r\n      \r\n    });\r\n\r\n    let data = `{\r\n      \"message\": \"sendmessage\",\r\n      \"type\": \"getall\"\r\n    }`;\r\n    connection.send(data);\r\n\r\n    data = `{\r\n      \"message\": \"sendmessage\",\r\n      \"title\": \"${this.title}\",\r\n      \"type\": \"getlivestatus\"\r\n    }`;\r\n    connection.send(data);\r\n\r\n    // if(!this.state.isLive && this.role !== 'host') {\r\n    let me  =this;\r\n    setInterval(function() {\r\n      data = `{\r\n        \"message\": \"sendmessage\",\r\n        \"name\": \"${me.username}\",\r\n        \"isVideoChat\": \"${me.state.isVideoChat}\",\r\n        \"type\": \"beforepart\"\r\n      }`;\r\n      connection.send(data);\r\n\r\n      if (me.role === 'host') {\r\n        data = {\r\n          \"message\": \"sendmessage\",\r\n          \"showableparts\": me.state.showAbleParts,\r\n          \"type\": \"showableparts\"\r\n        };\r\n        connection.send(JSON.stringify(data));\r\n      }\r\n      \r\n    }, 3000)\r\n      \r\n    // }\r\n\r\n    this.setState({ connection });\r\n\r\n    // this.chatRef.current.focus();\r\n  }\r\n\r\n    /*\r\n     * Settings\r\n     */\r\n\r\n    openSettings = () => {\r\n      this.setState({ showSettings: true });\r\n    };\r\n\r\n    closeSettings = () => {\r\n        this.setState({ showSettings: false });\r\n    };\r\n\r\n    handleClick = (e) => {\r\n        const { showSettings } = this.state;\r\n        if (showSettings) {\r\n            let node = e.target;\r\n            let isModal = false;\r\n            while (node) {\r\n                if (\r\n                    node &&\r\n                    node.classList &&\r\n                    node.classList.contains(\"modal__el\")\r\n                ) {\r\n                    isModal = true;\r\n                    break;\r\n                }\r\n                node = node.parentNode;\r\n            }\r\n            if (!isModal) {\r\n                this.setState({ showSettings: false });\r\n            }\r\n        }\r\n    };\r\n\r\n    saveSettings = (\r\n        playbackURL,\r\n        currentAudioInputDevice,\r\n        currentAudioOutputDevice,\r\n        currentVideoInputDevice\r\n    ) => {\r\n        this.setState({\r\n            showSettings: false,\r\n            currentAudioInputDevice,\r\n            currentAudioOutputDevice,\r\n            currentVideoInputDevice,\r\n        });\r\n    };\r\n\r\n    setMetadataId = (metadataId) => {\r\n        this.setState({ metadataId });\r\n    };\r\n\r\n    setErrorMsg = (errorMsg) => {\r\n        this.setState({ errorMsg, showError: true });\r\n    };\r\n\r\n    closeError = () => {\r\n        this.setState({ showError: false });\r\n    };\r\n\r\n    endButtonOnClick = async () => {\r\n      if(this.role === 'host') {\r\n        confirmAlert({\r\n          title: 'Confirm to leave or end session',\r\n          message: '',\r\n          buttons: [\r\n            {\r\n              label: 'Leave Room',\r\n              onClick: ()=> this.leaveroom()\r\n            },\r\n            {\r\n              label: 'End Session',\r\n              onClick: ()=> this.leaveroom(true)\r\n            },\r\n            {\r\n              label: 'Cancel',\r\n              onClick: () => console.log()\r\n            }\r\n          ]\r\n        })\r\n      } else {\r\n        confirmAlert({\r\n          title: 'Confirm to leave',\r\n          message: 'Are you sure you want to leave?',\r\n          buttons: [\r\n            {\r\n              label: 'Leave Room',\r\n              onClick: ()=> this.leaveroom()\r\n            },\r\n            {\r\n              label: 'Cancel',\r\n              onClick: () => console.log()\r\n            }\r\n          ]\r\n        })\r\n      }\r\n    }\r\n\r\n    askVideoOrObserver = () => {\r\n      if(this.role !== 'host') {\r\n        confirmAlert({\r\n          title: '',\r\n          message: 'Do you want to video chat or do you want to be an observer?',\r\n          buttons: [\r\n            {\r\n              label: 'Yes, I want to video chat',\r\n              onClick: ()=> {this.setState({isVideoChat: true}); this.initChatConnection();}\r\n            },\r\n            {\r\n              label: \"I'd like to watch please!\",\r\n              onClick: ()=> {this.setState({isVideoChat: false}); this.initChatConnection();}\r\n            }\r\n          ],\r\n          closeOnClickOutside: false\r\n        });\r\n      } else {\r\n        this.initChatConnection();\r\n      }\r\n    }\r\n\r\n    leaveroom = async (isEnd = false) => {\r\n      await this.props.chime.leaveRoom(this.role === 'host' && isEnd);\r\n      sessionStorage.removeItem(this.ssName);\r\n      const whereTo = `${this.baseHref}/${this.role === 'host' && isEnd ? '' : 'join?room=' + this.title}`;\r\n      this.props.history.push(whereTo);\r\n      window.location.reload();\r\n    }\r\n\r\n    handleMute = (localMuted) => {\r\n        this.setState({ muted: localMuted });\r\n    }\r\n\r\n    handlGoToLive = () => {\r\n        const data = `{\r\n          \"message\": \"sendmessage\",\r\n          \"title\": \"${this.title}\",\r\n          \"type\": \"gotolive\"\r\n        }`;\r\n        this.state.connection.send(data);\r\n      }\r\n\r\n    layout = () => {\r\n        if (this.state.meetingStatus !== \"Success\") {\r\n            return;\r\n        }\r\n\r\n        return (\r\n            <div className=\"meeting-grid\" onClick={this.handleClick}>\r\n                <div className=\"meeting-header\">\r\n                    <img className=\"header-logo\" src={logo} alt=\"Logo\" />\r\n                    <div className=\"body-logo\">\r\n                        <span> SPONSORED BY: </span>\r\n                        <img src={bodylogo} alt=\"body logo\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"main-body\">\r\n                    {this.state.showSettings && (\r\n                        <Settings\r\n                            chime={this.props.chime}\r\n                            joinInfo={this.joinInfo}\r\n                            saveSettings={this.saveSettings}\r\n                        />\r\n                    )}\r\n                    <div className=\"main-stage body-left\">\r\n                        <div className=\"body-before\">\r\n                            <div className=\"body-wrapper\">\r\n                                {\r\n                                  this.state.isVideoChat && \r\n                                  <LocalVideo\r\n                                    chime={this.props.chime}\r\n                                    joinInfo={this.joinInfo}\r\n                                    isLive={this.state.isLive}\r\n                                    isLocalCamera={this.state.isLocalCamera}\r\n                                  />\r\n                                }\r\n                                \r\n                                <div className=\"mobile-buttons\">\r\n                                    {(!this.state.isLive && this.role === 'host') &&\r\n                                     <button className=\"go-livebtn\" onClick={this.handlGoToLive}>\r\n                                        <span className=\"txt-onbtn\">GO LIVE</span>\r\n                                    </button>}\r\n                                   \r\n                                   {\r\n                                     this.state.isLive &&\r\n                                      <button className=\"live-meetingbtn txt-onbtn\" onClick={this.endButtonOnClick}>\r\n                                        <span className=\"txt-onbtn\">{this.role === 'host' ? 'End Session' : 'LEAVE MEETING'}</span>\r\n                                      </button>\r\n                                   }\r\n                                    \r\n                                </div>\r\n                                \r\n                                <div className=\"remote-cams\">\r\n                                  <RemoteVideoGroup\r\n                                    chime={this.props.chime}\r\n                                    joinInfo={this.joinInfo}\r\n                                    participants={this.state.participants}\r\n                                    setParts={this.setParts}\r\n                                    isOpenChat={this.state.showPopupMessage}\r\n                                    showAbleParts={this.state.showAbleParts}\r\n                                  />\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"meeting-footer\">\r\n                          <Controls\r\n                            chime={this.props.chime}\r\n                            baseHref={this.baseHref}\r\n                            ssName={this.ssName}\r\n                            title={this.title}\r\n                            openSettings={this.openSettings}\r\n                            role={this.role}\r\n                            history={this.props.history}\r\n                            myVideoElement={this.myVideoElement}\r\n                            openChat={this.openChat}\r\n                            openPT={this.openPT}\r\n                            closeChat={this.hideModal}\r\n                            isOpenChat={this.state.showPopupMessage}\r\n                            joinInfo={this.joinInfo}\r\n                            connection={this.state.connection}\r\n                            handRaiseStatus={this.state.handRaiseStatus}\r\n                            muted={this.state.muted}\r\n                            setMute={this.handleMute}\r\n                            isLive={this.state.isLive}\r\n                            isLocalCamera={this.state.isLocalCamera}\r\n                            setLocalCamera={this.setLocalCamera}\r\n                            isVideoChat={this.state.isVideoChat}\r\n                          />\r\n                        </div>\r\n                    </div>\r\n                    {/* {\r\n                      this.state.isVideoChat &&  */}\r\n                      <div className=\"right-sidebar\">\r\n                        {!this.state.showPopupMessage ? (\r\n                            \" \"\r\n                        ) : (\r\n                            <button className={\"btnPopdownMessage btnPopupMessageFont\"} onClick={this.hideModal}>\r\n                                <img src={vicon} alt=\"v right\" className={'vicon vright'}/>\r\n                            </button>\r\n                        )}\r\n                        {this.state.showPopupMessage ? (\r\n                            \" \"\r\n                        ) : (\r\n                            <button className={\"btnPopupMessage btnPopupMessageFont\"} onClick={this.showModal}>\r\n                                <img src={vicon} alt=\"v left\" className={'vicon vleft'}/>\r\n                                <span>{this.role === 'host' ? 'Q&A/PARTICIPANTS': 'Q&A'}</span>\r\n                            </button>\r\n                        )}\r\n                        {!this.state.showPopupMessage ? (\r\n                            \" \"\r\n                        ) : (\r\n                            <Chat\r\n                              chime={this.props.chime}\r\n                              title={this.title}\r\n                              username={this.username}\r\n                              joinInfo={this.joinInfo}\r\n                              closeChat={this.hideModal}\r\n                              isChat={this.state.isChat}\r\n                              changeTab={this.changeChat}\r\n                              connection={this.state.connection}\r\n                              messages={this.state.messages}\r\n                              participants={this.state.participants}\r\n                              role={this.role}\r\n                              setErrorMsg={this.setErrorMsg}\r\n                            />\r\n                        )}\r\n                      </div>\r\n                    {/* } */}\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    setLocalCamera = (status) =>{\r\n      this.setState({isLocalCamera: status});\r\n    }\r\n\r\n    setParts = (participants) => {\r\n      this.setState({participants});\r\n\r\n      if (this.role === 'host') {\r\n        let showAbleParts = [];\r\n\r\n        showAbleParts.push(this.joinInfo.Attendee.AttendeeId);\r\n        participants.map(part => {\r\n          if(showAbleParts.length < 9 && part.host) {\r\n            showAbleParts.push(part.attendeeId);\r\n          }\r\n  \r\n          return part;\r\n        });\r\n\r\n        participants.map(part => {\r\n          if(showAbleParts.length < 9 && part.isVideoChat) {\r\n            showAbleParts.push(part.attendeeId);\r\n          }\r\n  \r\n          return part;\r\n        });\r\n\r\n        this.setState({showAbleParts});\r\n      }\r\n    }\r\n\r\n    render() {\r\n      const {isAvailable, isLive} = this.state;\r\n\r\n      return (\r\n        <React.Fragment>\r\n          {isAvailable && <Alert />}\r\n          {(this.role === 'attendee' && !isLive) && <AlertWaiting />}\r\n          <audio ref={this.audioElementRef} style={{ display: \"none\" }} />\r\n\r\n          {this.layout()}\r\n\r\n          {this.state.showError && (\r\n            <Error\r\n              closeError={this.closeError}\r\n              errorMsg={this.state.errorMsg}\r\n            />\r\n          )}\r\n        </React.Fragment>\r\n      );\r\n    }\r\n}\r\n\r\nMeeting.propTypes = {\r\n  chime: PropTypes.object,\r\n};\r\n\r\nexport default withRouter(Meeting);\r\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport * as config from '../../config';\nimport Meeting from './Meeting';\n\nclass Host extends Component {\n\n  state = {\n    role: 'host',\n    username: '',\n    title: '',\n    errorMsg: '',\n    showError: false,\n    isGoToMeeting: false,\n  }\n\n  constructor() {\n    super ();\n    this.inputRef = React.createRef();\n    this.baseHref = config.BASE_HREF;\n  }\n\n  componentDidMount() {\n    const qs = new URLSearchParams(this.props.location.search);\n    const room = qs.get('room');\n    const username = qs.get('username');\n\n    this.setState({\n      title: room,\n      username\n    });\n\n    if(username && room) {\n      const data = {\n        username,\n        title: room,\n        role: this.state.role,\n        playbackURL: config.DEFAULT_VIDEO_STREAM,\n      }\n\n      sessionStorage.setItem(`chime[${room}]`, JSON.stringify(data));\n\n      this.setState({isGoToMeeting: true});\n      // this.props.history.push(`${this.baseHref}/meeting?room=${room}&username=${username}`);\n    }\n  }\n\n  handleNameChange = e => {\n    this.setState({ username: e.target.value })\n  }\n\n  handleJoinRoom = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.joinRoom();\n  }\n\n  joinRoom = async () => {\n    const { username, title } = this.state;\n    const data = {\n      username,\n      title,\n      role: this.state.role,\n      playbackURL: config.DEFAULT_VIDEO_STREAM,\n    }\n    sessionStorage.setItem(`chime[${title}]`, JSON.stringify(data));\n    this.setState({isGoToMeeting: true});\n    this.props.history.push(`${this.baseHref}/NA25KW8TFW?room=${title}&username=${username}`);\n  }\n\n  render() {\n    const { username, isGoToMeeting } = this.state;\n    const joinRoomDisabled = !username;\n\n    if (isGoToMeeting) {\n      return <Meeting chime={this.props.chime}/>\n    }\n    return (\n      <div className=\"welcome form-grid\" onClick={this.handleClick}>\n\n        <div className=\"welcome__intro\">\n          <div className=\"intro__inner formatted-text\">\n            <h1>Join as a Host</h1>\n          </div>\n        </div>\n\n        <div className=\"welcome__content pd-4\">\n          <div className=\"content__inner\">\n            <h2 className=\"mg-b-2\">Hey there!</h2>\n            <form action=\"\">\n              <fieldset className=\"mg-b-2\">\n                <input type=\"text\" placeholder=\"Your name\" value={username} ref={this.inputRef} onChange={this.handleNameChange} />\n                <button className=\"mg-t-1 btn btn--primary\" disabled={joinRoomDisabled} onClick={this.handleJoinRoom}>Join room</button>\n              </fieldset>\n            </form>\n          </div>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Host);\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport * as config from '../../config';\r\n\r\nclass End extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.baseHref = config.BASE_HREF;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"welcome form-grid\">\r\n        <div className=\"welcome__intro\">\r\n          <div className=\"intro__inner formatted-text\">\r\n            <h1>Amazon IVS with ChimeSDK</h1>\r\n            <h3>Create or join rooms, and watch Amazon IVS streams with anyone.</h3>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"welcome__content pd-4\">\r\n          <div className=\"content__inner formatted-text\">\r\n            <h2 className=\"mg-b-2\">Room closed</h2>\r\n            <p>The host has ended the meeting and closed the room.</p>\r\n            <a href={`${this.baseHref}/`} className=\"mg-t-3 btn btn--primary\">Create a new room</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(End);\r\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\n// Styles\nimport \"./Alert.css\";\nimport logo from \"./../../assets/Logo.svg\";\n\nclass AlertRemoved extends Component {\n\n    render() {\n        return(\n        <div className={\"alert-container\"}>\n            <div className={\"alert-back-drop\"}>\n            </div>\n            <div className={\"alert-content\"}>\n                <img className=\"alert-logo\" src={logo} alt=\"Logo\" />\n                <p>Sorry, you have been removed from the session by the host.</p>\n                <p>Unfortunately, you cannot rejoin.</p>\n            </div>\n        </div>\n        );\n        \n    }\n}\n\nexport default withRouter(AlertRemoved);","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport * as config from '../config';\r\n// import './App.css';\r\n\r\nimport ChimeSdkWrapper from './chime/ChimeSdkWrapper';\r\n\r\nimport Home from './chimeWeb/Welcome';\r\nimport Join from './chimeWeb/Join';\r\nimport Host from './chimeWeb/Host';\r\nimport Meeting from './chimeWeb/Meeting';\r\nimport End from './chimeWeb/End';\r\nimport AlertRemoved from './chimeWeb/AlertRemoved';\r\n\r\nfunction App() {\r\n  const chime = new ChimeSdkWrapper();\r\n  const baseHref = config.BASE_HREF;\r\n\r\n  return (\r\n    <div className=\"App full-width full-height\">\r\n      <Router>\r\n        <Switch>\r\n          <Route path={`${baseHref}/removed`}>\r\n            <AlertRemoved/>\r\n          </Route>\r\n          <Route path={`${baseHref}/end`}>\r\n            <End />\r\n          </Route>\r\n          <Route path={`${baseHref}/meeting`}>\r\n            <Meeting\r\n              chime={chime}\r\n            />\r\n          </Route>\r\n          <Route path={`${baseHref}/join`}>\r\n            <Join\r\n              chime={chime}\r\n            />\r\n          </Route>\r\n\r\n          <Route path={`${baseHref}/NA25KW8TFW`}>\r\n            <Host\r\n              chime={chime}\r\n            />\r\n          </Route>\r\n          \r\n          <Route path={`${baseHref}`}>\r\n            <Home\r\n              chime={chime}\r\n            />\r\n          </Route>\r\n\r\n          \r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\nwindow.addEventListener('resize', () => {\r\n  // Update the element's size\r\n  let vh = window.innerHeight * 0.01;\r\n  document.documentElement.style.setProperty('--vh', `${vh}px`);\r\n  // alert(vh);\r\n});"],"sourceRoot":""}