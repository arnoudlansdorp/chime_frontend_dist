{"version":3,"sources":["config.js","components/chime/ChimeSdkWrapper.js","components/chimeWeb/Error.jsx","assets/Logo.svg","components/chimeWeb/Alert.jsx","assets/svgs/AAL-Events.svg","components/chimeWeb/Welcome.jsx","components/chimeWeb/Join.jsx","assets/RaiseBtn/Raise-Hand.svg","assets/svgs/close.svg","assets/svgs/un-line.svg","assets/svgs/bin.svg","assets/svgs/cancel-alert.svg","components/chimeWeb/AlertAskRemovePart.jsx","components/chat/Chat.jsx","assets/svgs/mute.svg","assets/svgs/camera.svg","assets/svgs/share.svg","assets/svgs/hand.svg","assets/svgs/qa.svg","assets/svgs/qaa.svg","assets/svgs/user.svg","assets/svgs/usera.svg","assets/svgs/leave-room.svg","assets/svgs/end-session-icon.svg","components/chimeWeb/AlertAskLeaveRoom.jsx","components/chimeWeb/Controls.jsx","components/chimeWeb/Settings.jsx","components/chimeWeb/LocalVideo.jsx","components/chimeWeb/RemoteVideo.jsx","components/chimeWeb/RemoteVideoGroup.jsx","components/chimeWeb/AlertWaiting.jsx","assets/svgs/video-chat.svg","assets/svgs/Stop-Video.svg","components/chimeWeb/AlertAskVideoObserver.jsx","components/chimeWeb/AlertHolding.jsx","assets/ULAW-colour-hires.jpg","assets/svgs/v-icon.svg","components/chimeWeb/Meeting.jsx","components/chimeWeb/Host.jsx","components/chimeWeb/End.jsx","components/chimeWeb/AlertRemoved.jsx","components/App.js","serviceWorker.js","index.js"],"names":["BASE_HREF","CHIME_ROOM_API","DEFAULT_VIDEO_STREAM","CHAT_WEBSOCKET","DEBUG","ChimeSdkWrapper","this","initializeSdkWrapper","meetingSession","audioVideo","title","name","region","currentAudioInputDevice","currentAudioOutputDevice","currentVideoInputDevice","audioInputDevices","audioOutputDevices","videoInputDevices","devicesUpdatedCallbacks","roster","rosterUpdateCallbacks","configuration","messagingSocket","messageUpdateCallbacks","error","console","role","playbackURL","a","payload","fetch","config","method","body","JSON","stringify","response","json","Error","JoinInfo","MeetingSessionConfiguration","Meeting","Attendee","initializeMeetingSession","Title","logger","ConsoleLogger","LogLevel","ERROR","deviceController","DefaultDeviceController","DefaultMeetingSession","listAudioInputDevices","forEach","mediaDeviceInfo","push","label","value","deviceId","listAudioOutputDevices","listVideoInputDevices","publishDevicesUpdated","addDeviceChangeObserver","realtimeSubscribeToAttendeeIdPresence","presentAttendeeId","present","publishRosterUpdate","realtimeSubscribeToVolumeIndicator","attendeeId","volume","muted","signalStrength","DefaultModality","base","Math","round","encodeURIComponent","AttendeeInfo","Name","element","logError","window","addEventListener","event","reason","audioInputs","length","chooseAudioInputDevice","audioOutputs","chooseAudioOutputDevice","videoInputs","chooseVideoInputDevice","bindAudioElement","start","messagingUrl","meetingId","credentials","joinToken","ReconnectingPromisedWebSocket","DefaultPromisedWebSocketFactory","DefaultDOMWebSocketFactory","FullJitterBackoff","open","WEB_SOCKET_TIMEOUT_MS","data","parse","publishMessageUpdate","type","timestampMs","Date","now","message","send","end","stop","device","freshAudioInputDeviceList","hasCurrentDevice","freshAudioOutputDeviceList","freshVideoInputDeviceList","callback","index","indexOf","splice","throttle","i","ROSTER_THROTTLE_MS","handleKeyDown","e","keyCode","props","closeError","handleClick","node","target","isModal","classList","contains","parentNode","handleGoCreateRoom","location","replace","document","removeEventListener","className","onClick","viewBox","xmlns","d","errorMsg","isClosable","Component","Alert","src","logo","alt","href","rel","withRouter","Welcome","state","username","showError","isAvailable","handleNameChange","setState","handleRoomChange","handlePlaybackURLChange","handleCreateRoom","preventDefault","stopPropagation","createRoom","handleCreateWebinar","createWebinar","setErrorMsg","baseHref","inputRef","React","createRef","qs","URLSearchParams","search","get","current","focus","navigator","mediaDevices","enumerateDevices","log","test","userAgent","MSStream","history","sessionStorage","setItem","createRoomDisabled","Fragment","eventslogo","action","placeholder","ref","onChange","disabled","Join","joinRoom","joinWebinar","handleJoinRoom","handleJoinWebinar","room","webinar","joinRoomDisabled","AlertAskRemovePart","onCancel","onRemove","removepart","cancelalert","Chat","scrollToBottom","handleChange","str","sendMessage","handleSendMobile","handleRoomClick","link","origin","pathname","copyTextToClipboard","encodeURI","setShowPopup","showPopup","setTimeout","text","clipboard","writeText","then","err","parseUrls","userInput","match","formattedMatch","startsWith","renderMessages","messages","sort","compare","map","formattedMessage","dangerouslySetInnerHTML","__html","data-tip","data-for","handleUpVote","id","place","effect","vote","handleRemoveMessage","connection","handleTabChange","changeTab","handlDownRaiseHand","participant","raisehand","handlePartMute","mute","handleRemovePart","isAskForLeave","removeablePart","removePart","handleMakeHost","renderParticipants","participants","RaiseHandIcon","isVideoChat","isWebinar","unIcon","tabIndex","chatRef","messagesEndRef","b","isChrome","isIOS","iosChromeClassForInput","iosChromeClassForMessages","closeChat","closeIcon","onSelect","selectedIndex","isChat","maxLength","rows","onKeyDown","AlertAskLeaveRoom","onLeave","leaveroom","onEndSession","endsession","Controls","videoStatus","shareScreenStatue","openChatStatus","openParticipantsStatus","muteButtonOnClick","chime","realtimeUnmuteLocalAudio","realtimeMuteLocalAudio","setMute","raiseButtonOnClick","handRaiseStatus","handlGoToLive","shareButtonOnClick","stopContentShare","startContentShareFromScreenCapture","videoButtonOnClick","isLive","turnOnCamera","stopLocalVideoTile","setLocalCamera","endButtonOnClick","isEnd","leaveRoom","removeItem","ssName","whereTo","reload","toggleChat","openChat","togglePT","openPT","realtimeSubscribeToMuteAndUnmuteLocalAudio","addObserver","videoTileDidUpdate","tileState","realtimeUnsubscribeToMuteAndUnmuteLocalAudio","mic_controls","cam_controls","hand_controls","share_controls","muteIcon","cameraIcon","shareIcon","handIcon","isOpenChat","qaaIcon","qaIcon","useraIcon","userIcon","setVideo","Settings","microphone","speaker","camera","devicesUpdatedCallback","fullDeviceInfo","closeSettings","handleMicrophoneChange","selectedDevice","o","handleSpeakerChange","handleCameraChange","handleSave","saveSettings","renderDevices","devices","defaultValue","subscribeToDevicesUpdated","unsubscribeFromDevicesUpdated","currentMic","currentSpeaker","currentCam","availableMics","availableSpeakers","availableCams","readOnly","joinInfo","PlaybackURL","LocalVideo","enabled","showMeta","currentLocalTileId","rosterCallback","newRoster","AttendeeId","videoElement","boundAttendeeId","localTile","tileId","bindVideoElement","active","subscribeToRosterUpdate","unsubscribeFromRosterUpdate","onMouseEnter","handleMouseEnter","bind","onMouseLeave","handleMouseLeave","isLocalCamera","RemoteVideo","camClass","isHidden","videoId","count","RemoteVideoGroup","rosterChanged","shareVideoElement","isMyContent","isSharingContent","sharingTileId","sharingInfo","findRosterSlot","Object","keys","previousRoster","differ","filter","k","assign","attendee","parts","key","MAX_REMOTE_VIDEOS","setParts","videoTileDidUpdateCallback","isContent","getElementById","videoEnabled","videoTileWasRemovedCallback","find","stopHandle","getPart","part","checkInShowAble","isExisting","showAbleParts","showablePart","Array","from","videoTileWasRemoved","AlertWaiting","AlertAskVideoObserver","onVideoChat","videochat","onObserverChat","observerchat","AlertHolding","meetingStatus","showSettings","showPopupMessage","getStatus","isAsking","isOverFlow","getOverFlowStatus","showModal","changeChat","hideModal","toLowerCase","includes","startLocalVideoTile","openSettings","setMetadataId","metadataId","askVideoOrObserver","initChatConnection","handleMute","localMuted","layout","bodylogo","myVideoElement","vicon","status","host","hosts","videos","obs","audioElementRef","getItem","ssData","reInitializeMeetingSession","blocks","localStorage","block","MeetingId","audioVideoDidStop","sessionStatus","statusCode","MeetingSessionStatusCode","AudioCallEnded","JoinToken","messageData","Type","MessageId","timestamp","Time","Sender","Content","Vote","tempMessages","Data","Host","showableparts","overflowId","me","setInterval","style","display","isGoToMeeting","End","AlertRemoved","App","path","Boolean","hostname","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","catch","vh","innerHeight","documentElement","setProperty"],"mappings":"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","file":"static/js/main.6824c581.chunk.js","sourcesContent":["export const BASE_HREF = \"\";\r\n\r\n// API endpoint for retrieving the attendees list, joining the room, and ending the room\r\nexport const CHIME_ROOM_API = \"https://m7qxs56fx5.execute-api.us-east-1.amazonaws.com/Prod\";\r\n\r\n// Chime-SDK allows up to 16 attendee videos\r\nexport const CHIME_ROOM_MAX_ATTENDEE = 250;\r\n\r\n// Default video stream to play inside the video player\r\nexport const DEFAULT_VIDEO_STREAM = \"https://fcc3ddae59ed.us-west-2.playback.live-video.net/api/video/v1/us-west-2.893648527354.channel.DmumNckWFTqz.m3u8\";\r\n\r\n// Default Chat websocket link\r\nexport const CHAT_WEBSOCKET = \"wss://5sg50im573.execute-api.us-east-1.amazonaws.com/Prod\";\r\n\r\n// Chime-SDK logging level: INFO, WARN, ERROR, DEBUG\r\nexport const CHIME_LOG_LEVEL = 'WARN';\r\n\r\n// Chime-Web UI debugging logging: true / false\r\nexport const DEBUG = false;\r\n","import {\r\n  ConsoleLogger,\r\n  DefaultDeviceController,\r\n  DefaultDOMWebSocketFactory,\r\n  DefaultMeetingSession,\r\n  DefaultModality,\r\n  DefaultPromisedWebSocketFactory,\r\n  FullJitterBackoff,\r\n  LogLevel,\r\n  MeetingSessionConfiguration,\r\n  ReconnectingPromisedWebSocket\r\n} from 'amazon-chime-sdk-js';\r\n\r\nimport throttle from 'lodash/throttle';\r\nimport * as config from '../../config';\r\n\r\n\r\nexport default class ChimeSdkWrapper {\r\n\r\n  static WEB_SOCKET_TIMEOUT_MS = 10000;\r\n  static ROSTER_THROTTLE_MS = 400;\r\n\r\n  constructor() {\r\n    this.initializeSdkWrapper();\r\n  }\r\n\r\n  initializeSdkWrapper() {\r\n    this.meetingSession = null;\r\n    this.audioVideo = null;\r\n    this.title = null;\r\n    this.name = null;\r\n    this.region = null;\r\n    this.currentAudioInputDevice = null;\r\n    this.currentAudioOutputDevice = null;\r\n    this.currentVideoInputDevice = null;\r\n    this.audioInputDevices = [];\r\n    this.audioOutputDevices = [];\r\n    this.videoInputDevices = [];\r\n    this.devicesUpdatedCallbacks = [];\r\n    this.roster = {};\r\n    this.rosterUpdateCallbacks = [];\r\n    this.configuration = null;\r\n    this.messagingSocket = null;\r\n    this.messageUpdateCallbacks = [];\r\n  }\r\n\r\n  logError(error) {\r\n    console.error(error);\r\n  }\r\n\r\n  async createRoom(role, name, title, playbackURL, region) {\r\n    if (!name || !title || !role) {\r\n      console.error(\r\n           `role=${role} name=${name} title=${title} must exist`\r\n      );\r\n      return;\r\n    }\r\n\r\n    const payload = {\r\n      name,\r\n      title,\r\n      playbackURL,\r\n      role\r\n    };\r\n\r\n    const response = await fetch(\r\n      `${config.CHIME_ROOM_API}/join`,\r\n      {\r\n        method: 'POST',\r\n        body: JSON.stringify(payload)\r\n      }\r\n    );\r\n    const json = await response.json();\r\n    if (json.error) {\r\n      throw new Error(\r\n        json.error\r\n      );\r\n    }\r\n\r\n    const { JoinInfo } = json;\r\n    if (!JoinInfo) {\r\n      throw new Error(\r\n        'CreateOrJoin.classRoomDoesNotExist'\r\n      );\r\n    }\r\n    this.configuration = new MeetingSessionConfiguration(\r\n      JoinInfo.Meeting,\r\n      JoinInfo.Attendee\r\n    );\r\n    await this.initializeMeetingSession(this.configuration);\r\n\r\n    this.title = title;\r\n    this.name = name;\r\n    this.region = region;\r\n\r\n    return JoinInfo;\r\n  }\r\n\r\n  async reInitializeMeetingSession(JoinInfo, name) {\r\n    this.configuration = new MeetingSessionConfiguration(\r\n      JoinInfo.Meeting,\r\n      JoinInfo.Attendee\r\n    );\r\n    await this.initializeMeetingSession(this.configuration);\r\n\r\n    this.title = JoinInfo.Title;\r\n    this.name = name;\r\n    // this.region = region;\r\n  }\r\n\r\n  async initializeMeetingSession(configuration) {\r\n    const logger = new ConsoleLogger('SDK', LogLevel.ERROR);\r\n    const deviceController = new DefaultDeviceController(logger);\r\n    this.meetingSession = new DefaultMeetingSession(\r\n      configuration,\r\n      logger,\r\n      deviceController\r\n    );\r\n    this.audioVideo = this.meetingSession.audioVideo;\r\n\r\n    this.audioInputDevices = [];\r\n    (await this.audioVideo.listAudioInputDevices()).forEach(\r\n      (mediaDeviceInfo) => {\r\n        this.audioInputDevices.push({\r\n          label: mediaDeviceInfo.label,\r\n          value: mediaDeviceInfo.deviceId\r\n        });\r\n      }\r\n    );\r\n    this.audioOutputDevices = [];\r\n    (await this.audioVideo.listAudioOutputDevices()).forEach(\r\n      (mediaDeviceInfo) => {\r\n        this.audioOutputDevices.push({\r\n          label: mediaDeviceInfo.label,\r\n          value: mediaDeviceInfo.deviceId\r\n        });\r\n      }\r\n    );\r\n    this.videoInputDevices = [];\r\n    (await this.audioVideo.listVideoInputDevices()).forEach(\r\n      (mediaDeviceInfo) => {\r\n        this.videoInputDevices.push({\r\n          label: mediaDeviceInfo.label,\r\n          value: mediaDeviceInfo.deviceId\r\n        });\r\n      }\r\n    );\r\n    this.publishDevicesUpdated();\r\n    this.audioVideo.addDeviceChangeObserver(this);\r\n\r\n    this.audioVideo.realtimeSubscribeToAttendeeIdPresence(\r\n      (presentAttendeeId, present) => {\r\n        if (!present) {\r\n          delete this.roster[presentAttendeeId];\r\n          //this.publishRosterUpdate.cancel();\r\n          this.publishRosterUpdate()();\r\n          return;\r\n        }\r\n\r\n        this.audioVideo.realtimeSubscribeToVolumeIndicator(\r\n          presentAttendeeId,\r\n          async (\r\n            attendeeId,\r\n            volume,\r\n            muted,\r\n            signalStrength\r\n          ) => {\r\n            const baseAttendeeId = new DefaultModality(attendeeId).base();\r\n            if (baseAttendeeId !== attendeeId) {\r\n              // Don't include the content attendee in the roster.\r\n              //\r\n              // When you or other attendees share content (a screen capture, a video file,\r\n              // or any other MediaStream object), the content attendee (attendee-id#content) joins the session and\r\n              // shares content as if a regular attendee shares a video.\r\n              //\r\n              // For example, your attendee ID is \"my-id\". When you call meetingSession.audioVideo.startContentShare,\r\n              // the content attendee \"my-id#content\" will join the session and share your content.\r\n              return;\r\n            }\r\n\r\n            let shouldPublishImmediately = false;\r\n\r\n            if (!this.roster[attendeeId]) {\r\n              this.roster[attendeeId] = { name: '' };\r\n            }\r\n            if (volume !== null) {\r\n              this.roster[attendeeId].volume = Math.round(volume * 100);\r\n            }\r\n            if (muted !== null) {\r\n              this.roster[attendeeId].muted = muted;\r\n            }\r\n            if (signalStrength !== null) {\r\n              this.roster[attendeeId].signalStrength = Math.round(\r\n                signalStrength * 100\r\n              );\r\n            }\r\n            if (this.title && attendeeId && !this.roster[attendeeId].name) {\r\n              const response = await fetch(\r\n                `${config.CHIME_ROOM_API}/attendee?title=${encodeURIComponent(\r\n                  this.title\r\n                )}&attendeeId=${encodeURIComponent(attendeeId)}`\r\n              );\r\n              const json = await response.json();\r\n              if (json.AttendeeInfo && this.roster[attendeeId]) {\r\n                this.roster[attendeeId].name = json.AttendeeInfo.Name || '';\r\n                shouldPublishImmediately = true;\r\n              }\r\n            }\r\n\r\n            if (shouldPublishImmediately) {\r\n              //this.publishRosterUpdate.cancel();\r\n            }\r\n            this.publishRosterUpdate()();\r\n          }\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  async joinRoom(element) {\r\n    if (!element) {\r\n      this.logError(new Error(`element does not exist`));\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\r\n      'unhandledrejection',\r\n      (event) => {\r\n        this.logError(event.reason);\r\n      }\r\n    );\r\n\r\n    const audioInputs = await this.audioVideo.listAudioInputDevices();\r\n    if (audioInputs && audioInputs.length > 0 && audioInputs[0].deviceId) {\r\n      this.currentAudioInputDevice = {\r\n        label: audioInputs[0].label,\r\n        value: audioInputs[0].deviceId\r\n      };\r\n      await this.audioVideo.chooseAudioInputDevice(audioInputs[0].deviceId);\r\n    }\r\n\r\n    const audioOutputs = await this.audioVideo.listAudioOutputDevices();\r\n    if (audioOutputs && audioOutputs.length > 0 && audioOutputs[0].deviceId) {\r\n      this.currentAudioOutputDevice = {\r\n        label: audioOutputs[0].label,\r\n        value: audioOutputs[0].deviceId\r\n      };\r\n      await this.audioVideo.chooseAudioOutputDevice(audioOutputs[0].deviceId);\r\n    }\r\n\r\n    const videoInputs = await this.audioVideo.listVideoInputDevices();\r\n    if (videoInputs && videoInputs.length > 0 && videoInputs[0].deviceId) {\r\n      this.currentVideoInputDevice = {\r\n        label: videoInputs[0].label,\r\n        value: videoInputs[0].deviceId\r\n      };\r\n      await this.audioVideo.chooseVideoInputDevice(null);\r\n    }\r\n\r\n    this.publishDevicesUpdated();\r\n\r\n    this.audioVideo.bindAudioElement(element);\r\n    this.audioVideo.start();\r\n  }\r\n\r\n  async joinRoomMessaging() {\r\n    if (!this.configuration) {\r\n      this.logError(new Error('configuration does not exist'));\r\n      return;\r\n    }\r\n\r\n    const messagingUrl = `${config.CHAT_WEBSOCKET}?MeetingId=${this.configuration.meetingId}&AttendeeId=${this.configuration.credentials.attendeeId}&JoinToken=${this.configuration.credentials.joinToken}`;\r\n    this.messagingSocket = new ReconnectingPromisedWebSocket(\r\n      messagingUrl,\r\n      [],\r\n      'arraybuffer',\r\n      new DefaultPromisedWebSocketFactory(new DefaultDOMWebSocketFactory()),\r\n      new FullJitterBackoff(1000, 0, 10000)\r\n    );\r\n\r\n    await this.messagingSocket.open(this.WEB_SOCKET_TIMEOUT_MS);\r\n\r\n    this.messagingSocket.addEventListener('message', (event) => {\r\n      try {\r\n        const data = JSON.parse(event.data);\r\n        const { attendeeId } = data.payload;\r\n\r\n        let name;\r\n        if (this.roster[attendeeId]) {\r\n          name = this.roster[attendeeId].name;\r\n        }\r\n\r\n        this.publishMessageUpdate({\r\n          type: data.type,\r\n          payload: data.payload,\r\n          timestampMs: Date.now(),\r\n          name\r\n        });\r\n      } catch (error) {\r\n        this.logError(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  sendMessage(type, payload) {\r\n    if (!this.messagingSocket) {\r\n      return;\r\n    }\r\n    const message = {\r\n      message: 'sendmessage',\r\n      data: JSON.stringify({ type, payload })\r\n    };\r\n    try {\r\n      this.messagingSocket.send(JSON.stringify(message));\r\n    } catch (error) {\r\n      this.logError(error);\r\n    }\r\n  }\r\n\r\n  async leaveRoom(end) {\r\n    try {\r\n      this.audioVideo.stop();\r\n    } catch (error) {\r\n      this.logError(error);\r\n    }\r\n\r\n    // try {\r\n    //   await this.messagingSocket.close(this.WEB_SOCKET_TIMEOUT_MS);\r\n    // } catch (error) {\r\n    //   this.logError(error);\r\n    // }\r\n\r\n    try {\r\n      if (end && this.title) {\r\n        await fetch(\r\n          `${config.CHIME_ROOM_API}/end?title=${encodeURIComponent(this.title)}`,\r\n          {\r\n            method: 'POST'\r\n          }\r\n        );\r\n      }\r\n    } catch (error) {\r\n      this.logError(error);\r\n    }\r\n\r\n    this.initializeSdkWrapper();\r\n  }\r\n\r\n  // Device\r\n\r\n  async chooseAudioInputDevice(device) {\r\n    try {\r\n      await this.audioVideo.chooseAudioInputDevice(device.value);\r\n      this.currentAudioInputDevice = device;\r\n    } catch (error) {\r\n      this.logError(error);\r\n    }\r\n  }\r\n\r\n  async chooseAudioOutputDevice(device) {\r\n    try {\r\n      await this.audioVideo.chooseAudioOutputDevice(device.value);\r\n      this.currentAudioOutputDevice = device;\r\n    } catch (error) {\r\n      this.logError(error);\r\n    }\r\n  }\r\n\r\n  async chooseVideoInputDevice(device) {\r\n    try {\r\n      await this.audioVideo.chooseVideoInputDevice(device.value);\r\n      this.currentVideoInputDevice = device;\r\n    } catch (error) {\r\n      this.logError(error);\r\n    }\r\n  }\r\n\r\n  // Observer methods\r\n\r\n  audioInputsChanged(freshAudioInputDeviceList) {\r\n    let hasCurrentDevice = false;\r\n    this.audioInputDevices = [];\r\n    freshAudioInputDeviceList.forEach((mediaDeviceInfo) => {\r\n      if (\r\n        this.currentAudioInputDevice &&\r\n        mediaDeviceInfo.deviceId === this.currentAudioInputDevice.value\r\n      ) {\r\n        hasCurrentDevice = true;\r\n      }\r\n      this.audioInputDevices.push({\r\n        label: mediaDeviceInfo.label,\r\n        value: mediaDeviceInfo.deviceId\r\n      });\r\n    });\r\n    if (!hasCurrentDevice) {\r\n      this.currentAudioInputDevice =\r\n        this.audioInputDevices.length > 0 ? this.audioInputDevices[0] : null;\r\n    }\r\n    this.publishDevicesUpdated();\r\n  }\r\n\r\n  audioOutputsChanged(freshAudioOutputDeviceList) {\r\n    let hasCurrentDevice = false;\r\n    this.audioOutputDevices = [];\r\n    freshAudioOutputDeviceList.forEach((mediaDeviceInfo) => {\r\n      if (\r\n        this.currentAudioOutputDevice &&\r\n        mediaDeviceInfo.deviceId === this.currentAudioOutputDevice.value\r\n      ) {\r\n        hasCurrentDevice = true;\r\n      }\r\n      this.audioOutputDevices.push({\r\n        label: mediaDeviceInfo.label,\r\n        value: mediaDeviceInfo.deviceId\r\n      });\r\n    });\r\n    if (!hasCurrentDevice) {\r\n      this.currentAudioOutputDevice =\r\n        this.audioOutputDevices.length > 0 ? this.audioOutputDevices[0] : null;\r\n    }\r\n    this.publishDevicesUpdated();\r\n  }\r\n\r\n  videoInputsChanged(freshVideoInputDeviceList) {\r\n    let hasCurrentDevice = false;\r\n    this.videoInputDevices = [];\r\n    freshVideoInputDeviceList.forEach((mediaDeviceInfo) => {\r\n      if (\r\n        this.currentVideoInputDevice &&\r\n        mediaDeviceInfo.deviceId === this.currentVideoInputDevice.value\r\n      ) {\r\n        hasCurrentDevice = true;\r\n      }\r\n      this.videoInputDevices.push({\r\n        label: mediaDeviceInfo.label,\r\n        value: mediaDeviceInfo.deviceId\r\n      });\r\n    });\r\n    if (!hasCurrentDevice) {\r\n      this.currentVideoInputDevice =\r\n        this.videoInputDevices.length > 0 ? this.videoInputDevices[0] : null;\r\n    }\r\n    this.publishDevicesUpdated();\r\n  }\r\n\r\n  // Subscribe and unsubscribe\r\n\r\n  subscribeToDevicesUpdated(callback) {\r\n    this.devicesUpdatedCallbacks.push(callback);\r\n  }\r\n\r\n  unsubscribeFromDevicesUpdated(callback) {\r\n    const index = this.devicesUpdatedCallbacks.indexOf(callback);\r\n    if (index !== -1) {\r\n      this.devicesUpdatedCallbacks.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  publishDevicesUpdated() {\r\n    this.devicesUpdatedCallbacks.forEach(\r\n      (callback) => {\r\n        callback({\r\n          currentAudioInputDevice: this.currentAudioInputDevice,\r\n          currentAudioOutputDevice: this.currentAudioOutputDevice,\r\n          currentVideoInputDevice: this.currentVideoInputDevice,\r\n          audioInputDevices: this.audioInputDevices,\r\n          audioOutputDevices: this.audioOutputDevices,\r\n          videoInputDevices: this.videoInputDevices\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  subscribeToRosterUpdate(callback) {\r\n    this.rosterUpdateCallbacks.push(callback);\r\n  }\r\n\r\n  unsubscribeFromRosterUpdate(callback) {\r\n    const index = this.rosterUpdateCallbacks.indexOf(callback);\r\n    if (index !== -1) {\r\n      this.rosterUpdateCallbacks.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  publishRosterUpdate() {\r\n    return throttle(() => {\r\n      for (let i = 0; i < this.rosterUpdateCallbacks.length; i += 1) {\r\n        const callback = this.rosterUpdateCallbacks[i];\r\n        callback(this.roster);\r\n      }\r\n    }, this.ROSTER_THROTTLE_MS);\r\n  }\r\n\r\n  subscribeToMessageUpdate(callback) {\r\n    this.messageUpdateCallbacks.push(callback);\r\n  }\r\n\r\n  unsubscribeFromMessageUpdate(callback) {\r\n    const index = this.messageUpdateCallbacks.indexOf(callback);\r\n    if (index !== -1) {\r\n      this.messageUpdateCallbacks.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  publishMessageUpdate(message) {\r\n    for (let i = 0; i < this.messageUpdateCallbacks.length; i += 1) {\r\n      const callback = this.messageUpdateCallbacks[i];\r\n      callback(message);\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Styles\r\nimport './Error.css';\r\n\r\n// Assets\r\n\r\nclass Error extends Component {\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.handleKeyDown);\r\n\r\n    // setTimeout(() => {\r\n    //   this.props.closeError();\r\n    // }, 10000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.keyCode === 27) { // keyCode 27 is Escape key\r\n      this.props.closeError();\r\n    }\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    let node = e.target;\r\n    let isModal = false;\r\n    while (node) {\r\n      if (node && node.classList && node.classList.contains('notice--error')) {\r\n        isModal = true;\r\n        break;\r\n      }\r\n      node = node.parentNode;\r\n    }\r\n    if (!isModal) {\r\n      this.props.closeError();\r\n    }\r\n  }\r\n\r\n  handleGoCreateRoom = () => {\r\n    window.location.replace(\"/index.html\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"notice-container\">\r\n        <div className=\"notice notice--error\" onClick={this.handleClick}>\r\n          <div className=\"notice__content\">\r\n            <div className=\"icon icon--24 notice__icon\"><svg viewBox=\"0 0 1000 1000\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M 500 0C 224 0 0 224 0 500C 0 776 224 1000 500 1000C 776 1000 1000 776 1000 500C 1000 224 776 0 500 0C 500 0 500 0 500 0M 526 150C 576 150 602 175 601 224C 600 300 600 350 575 525C 570 560 560 575 525 575C 525 575 475 575 475 575C 440 575 430 560 425 525C 400 355 400 300 400 226C 400 175 425 150 475 150M 500 650C 527 650 552 661 571 679C 589 698 600 723 600 750C 600 805 555 850 500 850C 445 850 400 805 400 750C 400 723 411 698 429 679C 448 661 473 650 500 650C 500 650 500 650 500 650\"/></svg></div>\r\n            {this.props.errorMsg} <br/> \r\n            <div>\r\n              {/* To create your own room, click <span className=\"go-create-room\" onClick={this.handleGoCreateRoom}>here</span>.  */}\r\n              {this.props.isClosable && <span className=\"go-close-button\" onClick={this.props.closeError}>Close</span>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nError.propTypes = {\r\n  errorMsg: PropTypes.string,\r\n  closeError: PropTypes.func,\r\n  isClosable: PropTypes.bool\r\n};\r\n\r\nexport default Error;\r\n","export default __webpack_public_path__ + \"static/media/Logo.c65422c9.svg\";","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\n// Styles\nimport \"./Alert.css\";\nimport logo from \"./../../assets/Logo.svg\";\n\nclass Alert extends Component {\n\n    render() {\n        return(\n        <div className={\"alert-container\"}>\n            <div className={\"alert-back-drop\"}>\n            </div>\n            <div className={\"alert-content\"}>\n                <img className=\"alert-logo\" src={logo} alt=\"Logo\" />\n                <p>Sorry, but we’ve detected that your browser or device is not compatible</p>\n                <p>with our virtual meeting software.</p>\n                <br/>\n                <p>Please try a different browser or device to access the session.</p>\n                <br/>\n                <p>For more details on compatibility options, <a target=\"_blank\" href=\"https://docs.aws.amazon.com/chime/latest/dg/meetings-sdk.html\" rel=\"noreferrer\">click here.</a></p>\n            </div>\n        </div>\n        );\n        \n    }\n}\n\nexport default withRouter(Alert);","export default __webpack_public_path__ + \"static/media/AAL-Events.9bbb4182.svg\";","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport * as config from '../../config';\r\nimport Error from './Error';\r\nimport Alert from './Alert';\r\n\r\nimport eventslogo from '../../assets/svgs/AAL-Events.svg';\r\n\r\nclass Welcome extends Component {\r\n\r\n  state = {\r\n    role: 'host',\r\n    username: '',\r\n    title: '',\r\n    playbackURL: config.DEFAULT_VIDEO_STREAM,\r\n    errorMsg: '',\r\n    showError: false,\r\n    isAvailable: false,\r\n  }\r\n\r\n  constructor() {\r\n    super ();\r\n    this.baseHref = config.BASE_HREF;\r\n    this.inputRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const qs = new URLSearchParams(this.props.location.search);\r\n    const action = qs.get('action');\r\n    if (action === 'join') {\r\n      const title = qs.get('room');\r\n      this.props.history.push(`${this.baseHref}/join?room=${title}`);\r\n      return;\r\n    }\r\n\r\n    this.inputRef.current.focus();\r\n    try{\r\n      if(!navigator.mediaDevices.enumerateDevices) {\r\n        this.setState({isAvailable: true});\r\n      }\r\n    } catch(e) {\r\n      console.log(e)\r\n      this.setState({isAvailable: true});\r\n    }\r\n    \r\n    \r\n    // const isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\r\n    const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\r\n    \r\n    if(isIOS) {\r\n      const isChrome = navigator.userAgent.indexOf(\"CriOS\") !== -1;\r\n      if(isChrome) {\r\n        this.setState({isAvailable: true});\r\n      }\r\n    }\r\n  }\r\n\r\n  handleNameChange = e => {\r\n    this.setState({ username: e.target.value })\r\n  }\r\n\r\n  handleRoomChange = e => {\r\n    this.setState({ title: e.target.value })\r\n  }\r\n\r\n  handlePlaybackURLChange = e => {\r\n    this.setState({ playbackURL: e.target.value })\r\n  }\r\n\r\n  handleCreateRoom = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    this.createRoom();\r\n  }\r\n\r\n  handleCreateWebinar = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    this.createWebinar();\r\n  }\r\n\r\n  setErrorMsg = errorMsg => {\r\n    this.setState({ errorMsg, showError: true });\r\n  }\r\n\r\n  closeError = () => {\r\n    this.setState({ showError: false });\r\n  }\r\n\r\n  async createRoom() {\r\n    const { title, username, playbackURL } = this.state;\r\n    const data = {\r\n      username,\r\n      title,\r\n      playbackURL,\r\n      role: this.state.role\r\n    }\r\n    sessionStorage.setItem(`chime[${title}]`, JSON.stringify(data));\r\n    this.props.history.push(`${this.baseHref}/NA25KW8TFW?room=${title}&username=${username}`);\r\n  }\r\n\r\n  async createWebinar() {\r\n    const { title, username, playbackURL } = this.state;\r\n    const data = {\r\n      username,\r\n      title,\r\n      playbackURL,\r\n      role: this.state.role\r\n    }\r\n    sessionStorage.setItem(`chime[${title}]`, JSON.stringify(data));\r\n    this.props.history.push(`${this.baseHref}/NA25KW8TFW?webinar=true&room=${title}&username=${username}`);\r\n  }\r\n\r\n  render() {\r\n    const { username, title, playbackURL, isAvailable } = this.state;\r\n    const createRoomDisabled = !username || !title || !playbackURL;\r\n    return (\r\n      <React.Fragment>\r\n        {isAvailable && <Alert />}\r\n        <div className=\"welcome\">\r\n          <div className=\"welcome__content\">\r\n            <div className=\"content__inner\">\r\n              {/* <h2 className=\"all-about-law\">ALLABOUTLAW</h2> */}\r\n              {/* <h2 className=\"events-title\">EVENTS</h2> */}\r\n              <img src={eventslogo} alt=\"logo\" className=\"events-logo\"/>\r\n              <h2 className=\"join-as-host-part-title\">Join as a host</h2>\r\n              <form action=\"\">\r\n                <fieldset className=\"mg-b-2\">\r\n                  <input className=\"join-info-text\" type=\"text\" placeholder=\"Enter display name\" value={username} ref={this.inputRef} onChange={this.handleNameChange} />\r\n                  <input className=\"join-info-text\" type=\"text\" placeholder=\"Enter room name\" value={title} onChange={this.handleRoomChange} />\r\n                  <input type=\"hidden\" placeholder=\"Playback URL\" value={playbackURL} onChange={this.handlePlaybackURLChange} />\r\n                  <div>\r\n                    <button className=\"join-btn\" disabled={createRoomDisabled} onClick={this.handleCreateRoom} >JOIN SESSION</button>\r\n                    <button className=\"join-btn webinar-btn\" disabled={createRoomDisabled} onClick={this.handleCreateWebinar} >CREATE WEBINAR</button>\r\n                  </div>\r\n                  \r\n                </fieldset>\r\n              </form>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        {this.state.showError && (\r\n          <Error\r\n            closeError={this.closeError}\r\n            errorMsg={this.state.errorMsg}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Welcome);\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport * as config from '../../config';\r\nimport Error from './Error';\r\nimport eventslogo from '../../assets/svgs/AAL-Events.svg';\r\n\r\nclass Join extends Component {\r\n\r\n  state = {\r\n    role: 'attendee',\r\n    username: '',\r\n    title: '',\r\n    errorMsg: '',\r\n    showError: false\r\n  }\r\n\r\n  constructor() {\r\n    super ();\r\n    this.inputRef = React.createRef();\r\n    this.baseHref = config.BASE_HREF;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const qs = new URLSearchParams(this.props.location.search);\r\n    const room = qs.get('room');\r\n    const username = qs.get('username');\r\n    const webinar = qs.get('webinar');\r\n\r\n    if(username) {\r\n      const data = {\r\n        username,\r\n        title: room,\r\n        role: this.state.role,\r\n        playbackURL: config.DEFAULT_VIDEO_STREAM,\r\n      }\r\n      sessionStorage.setItem(`chime[${room}]`, JSON.stringify(data));\r\n      if(webinar === 'true') {\r\n        this.props.history.push(`${this.baseHref}/meeting?webinar=true&room=${room}&username=${username}`);  \r\n      } else {\r\n        this.props.history.push(`${this.baseHref}/meeting?room=${room}&username=${username}`);\r\n      }\r\n    } else {\r\n      this.setState({ title: room });\r\n    }\r\n  }\r\n\r\n  joinRoom = async () => {\r\n    const { username, title } = this.state;\r\n    const data = {\r\n      username,\r\n      title,\r\n      role: this.state.role,\r\n      playbackURL: config.DEFAULT_VIDEO_STREAM,\r\n    }\r\n    sessionStorage.setItem(`chime[${title}]`, JSON.stringify(data));\r\n    this.props.history.push(`${this.baseHref}/meeting?room=${title}&username=${username}`);\r\n  }\r\n\r\n  joinWebinar = async () => {\r\n    const { username, title } = this.state;\r\n    const data = {\r\n      username,\r\n      title,\r\n      role: this.state.role,\r\n      playbackURL: config.DEFAULT_VIDEO_STREAM,\r\n    }\r\n    sessionStorage.setItem(`chime[${title}]`, JSON.stringify(data));\r\n    this.props.history.push(`${this.baseHref}/meeting?webinar=true&room=${title}&username=${username}`);\r\n  }\r\n\r\n  handleNameChange = e => {\r\n    this.setState({ username: e.target.value })\r\n  }\r\n\r\n  handleJoinRoom = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    this.joinRoom();\r\n  }\r\n\r\n  handleJoinWebinar = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    this.joinWebinar();\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    let node = e.target;\r\n    let isModal = false;\r\n    while (node) {\r\n      if (node && node.classList && node.classList.contains('notice--error')) {\r\n        isModal = true;\r\n        break;\r\n      }\r\n      node = node.parentNode;\r\n    }\r\n    if (!isModal) {\r\n      this.closeError();\r\n    }\r\n  }\r\n\r\n  setErrorMsg = errorMsg => {\r\n    this.setState({ errorMsg, showError: true });\r\n  }\r\n\r\n  closeError = () => {\r\n    this.setState({ showError: false });\r\n  }\r\n\r\n  render() {\r\n    const { username } = this.state;\r\n    const joinRoomDisabled = !username;\r\n    return (\r\n      <div className=\"welcome\" onClick={this.handleClick}>\r\n        <div className=\"welcome__content\">\r\n          <div className=\"content__inner\">\r\n            {/* <h2 className=\"all-about-law\">ALLABOUTLAW</h2>\r\n            <h2 className=\"events-title\">EVENTS</h2> */}\r\n            <img src={eventslogo} alt=\"logo\" className=\"events-logo\"/>\r\n            <h2 className=\"join-as-host-part-title\">Join as a participant</h2>\r\n            <form action=\"\">\r\n              <fieldset className=\"mg-b-2\">\r\n                <input className=\"join-info-text\" type=\"text\" placeholder=\"Enter display name\" value={username} ref={this.inputRef} onChange={this.handleNameChange} />\r\n                <div>\r\n                  <button className=\"join-btn\" disabled={joinRoomDisabled} onClick={this.handleJoinRoom}>JOIN SESSION</button>\r\n                  <button className=\"join-btn webinar-btn\" disabled={joinRoomDisabled} onClick={this.handleJoinWebinar}>JOIN WEBINAR</button>\r\n                </div>\r\n                \r\n              </fieldset>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        {this.state.showError && (\r\n          <Error\r\n            closeError={this.closeError}\r\n            errorMsg={this.state.errorMsg}\r\n          />\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Join);\r\n","export default __webpack_public_path__ + \"static/media/Raise-Hand.fddd95b6.svg\";","export default __webpack_public_path__ + \"static/media/close.24bebf55.svg\";","export default __webpack_public_path__ + \"static/media/un-line.c90e1b7d.svg\";","export default __webpack_public_path__ + \"static/media/bin.89a69be7.svg\";","export default __webpack_public_path__ + \"static/media/cancel-alert.d6cc9654.svg\";","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nimport \"./Alert.css\";\nimport removepart from \"./../../assets/svgs/bin.svg\";\nimport cancelalert from \"./../../assets/svgs/cancel-alert.svg\";\n\nclass AlertAskRemovePart extends Component {\n\n    render() {\n        return (\n            <div className=\"ask-alert\">\n                <div className=\"ask-alert-backdrop\" onClick={this.props.onCancel}></div>\n                \n                <div className=\"ask-alert-container\">\n                    <div className=\"ask-alert-header\">\n                       Are you sure you want <br/> to remove this participant?\n                    </div>\n\n                    <div className=\"ask-alert-content\">\n                        <div className=\"ask-alert-item remove-ask-item\" onClick={this.props.onRemove}>\n                            <img src={removepart} alt=\"video chat\"/>\n                            <span className=\"ask-alert-item-text\">Remove participant</span>\n                        </div>\n\n                        <div className=\"ask-alert-item\" onClick={this.props.onCancel}>\n                            <img src={cancelalert} alt=\"cancel\"/>\n                            <span className=\"ask-alert-item-text\">Cancel</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAlertAskRemovePart.propTypes = {\n    onRemove: PropTypes.func,\n    onCancel: PropTypes.func,\n};\n\nexport default withRouter(AlertAskRemovePart);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport * as config from '../../config';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\n// Styles\r\nimport './Chat.css';\r\n\r\nimport RaiseHandIcon from \"./../../assets/RaiseBtn/Raise-Hand.svg\";\r\nimport closeIcon from \"./../../assets/svgs/close.svg\";\r\nimport unIcon from '../../assets/svgs/un-line.svg';\r\n\r\nimport AlertAskRemovePart from '../chimeWeb/AlertAskRemovePart';\r\n\r\nclass Chat extends Component {\r\n  constructor() {\r\n    super ();\r\n    \r\n    this.state = {\r\n      message: '',\r\n      showPopup: false,\r\n      tabIndex: 0,\r\n      isAskForLeave: false,\r\n      removeablePart: null,\r\n    }\r\n    this.chatRef = React.createRef();\r\n    this.messagesEndRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  componentDidUpdate() {\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  scrollToBottom = () => {\r\n    // this.messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\r\n  }\r\n\r\n  handleChange = e => {\r\n    var str = e.target.value.replace('\\n', '');\r\n    e.target.value = str;\r\n    this.setState({ message: e.target.value })\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.keyCode === 13) { // keyCode 13 is carriage return\r\n      this.sendMessage();\r\n    }\r\n  }\r\n\r\n  handleSendMobile = () => {\r\n    this.sendMessage();\r\n  }\r\n\r\n  sendMessage() {\r\n    const { message } = this.state;\r\n    const { username, connection } = this.props;\r\n    if (message) {\r\n      const data = `{\r\n        \"message\": \"sendmessage\",\r\n        \"data\": \"${username}::${message.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"')}\",\r\n        \"sender\": \"${username}\",\r\n        \"content\": \"${message.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"')}\",\r\n        \"type\": \"sendmessage\"\r\n      }`;\r\n      connection.send(data);\r\n      this.setState({ message: '' });\r\n    }\r\n  }\r\n\r\n  handleRoomClick = (e) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    const { title } = this.props;\r\n    const link = `${window.location.origin}${window.location.pathname.replace('meeting', 'index.html')}?action=join&room=${title}`;\r\n    if (config.DEBUG) console.log(link);\r\n    this.copyTextToClipboard(encodeURI(link));\r\n  }\r\n\r\n  setShowPopup = () => {\r\n    // show popup message\r\n    this.setState({ showPopup: true });\r\n\r\n    // hide popup message after 2 seconds\r\n    setTimeout(() => {\r\n      this.setState({ showPopup: false })\r\n    }, 2000);\r\n  }\r\n\r\n  copyTextToClipboard = text => {\r\n    if (navigator.clipboard) {\r\n      navigator.clipboard.writeText(text)\r\n      .then(() => {\r\n        this.setShowPopup();\r\n        if (config.DEBUG) console.log('Room link copied to clipboard');\r\n      }, (err) => {\r\n        if (config.DEBUG) console.log('Could not copy text: ', err);\r\n      });\r\n    }\r\n  }\r\n\r\n  parseUrls = (userInput) => {\r\n    // console.log(userInput);\r\n    var urlRegExp = /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_.~#?&//=]*)/g;\r\n    let formattedMessage = userInput.replace(urlRegExp, (match) => {\r\n      let formattedMatch = match;\r\n      if (!match.startsWith('http')) {\r\n        formattedMatch = `http://${match}`;\r\n      }\r\n      return `<a href=${formattedMatch} class=\"chat-line__link\" target=\"_blank\" rel=\"noopener noreferrer\">${match}</a>`;\r\n    });\r\n    return formattedMessage;\r\n  }\r\n\r\n  compare(a, b) {\r\n    if(a.vote.length < b.vote.length) return 1;\r\n    if(a.vote.length > b.vote.length) return -1;\r\n    return 0\r\n  }\r\n\r\n  renderMessages = () => {\r\n    let { messages } = this.props;\r\n    messages.sort(this.compare);\r\n    return (\r\n      messages.map(message => {\r\n        let formattedMessage = this.parseUrls(message.message);\r\n        return (\r\n          <div className=\"chat-line\" key={message.id}>\r\n            <p><span dangerouslySetInnerHTML={{__html: formattedMessage}} /></p>\r\n            <div className={'chat-sender-name'}>{message.username}</div>\r\n            <div className=\"chat-action\">\r\n              <span className=\"qa-tool-btn vote-icon\" data-tip data-for='tooltip-for-boost' onClick={() => this.handleUpVote(message)}></span>\r\n              <ReactTooltip id='tooltip-for-boost' type='dark' place=\"bottom\" effect=\"solid\">\r\n                <span>Boost question</span>\r\n              </ReactTooltip>\r\n              <span className=\"vote-count\"> {message.vote.length} </span>\r\n              {\r\n                this.props.role === 'host' ? \r\n                <>\r\n                  <span className=\"border-bottom\"> </span>\r\n                  <span className=\"qa-tool-btn delete-icon\" data-tip data-for='tooltip-for-remove-q' onClick={() => this.handleRemoveMessage(message)}></span>\r\n                  <ReactTooltip id='tooltip-for-remove-q' type='dark' place=\"bottom\" effect=\"solid\">\r\n                    <span>Remove question</span>\r\n                  </ReactTooltip>\r\n                </> : <></>\r\n              }\r\n              \r\n            </div>\r\n          </div>\r\n        )\r\n      })\r\n    )\r\n  }\r\n\r\n  handleUpVote = (message) => {\r\n    if (message) {\r\n      const { connection } = this.props;\r\n      const { username } = this.props;\r\n      const data = `{\r\n        \"message\": \"sendmessage\",\r\n        \"sender\": \"${username}\",\r\n        \"id\": \"${message.id}\",\r\n        \"type\": \"upvote\"\r\n      }`;\r\n      connection.send(data);\r\n\r\n      this.setState({ message: '' });\r\n    }\r\n  }\r\n\r\n  handleRemoveMessage = (message) => {\r\n    if(this.props.role !== 'host') {\r\n      this.props.setErrorMsg('You are not a host!')\r\n      return;\r\n    }\r\n\r\n    if (message) {\r\n      const { connection } = this.props;\r\n      const data = `{\r\n        \"message\": \"sendmessage\",\r\n        \"id\": \"${message.id}\",\r\n        \"type\": \"deletemessage\"\r\n      }`;\r\n      connection.send(data);\r\n\r\n      this.setState({ message: '' });\r\n    }\r\n  }\r\n\r\n  handleTabChange = (index) => {\r\n    // this.setState({\r\n    //   tabIndex: index\r\n    // })\r\n    this.props.changeTab(index);\r\n  }\r\n\r\n  handlDownRaiseHand = (participant) => {\r\n    if(this.props.role !== 'host') {\r\n      this.props.setErrorMsg('You are not a host!')\r\n      return;\r\n    }\r\n\r\n    if(!participant.raisehand) {\r\n      return;\r\n    }\r\n\r\n    const data = `{\r\n      \"message\": \"sendmessage\",\r\n      \"attendeeId\": \"${participant.attendeeId}\",\r\n      \"type\": \"downhand\"\r\n    }`;\r\n    this.props.connection.send(data);\r\n  }\r\n\r\n  handlePartMute = (participant) => {\r\n    if(this.props.role !== 'host') {\r\n      this.props.setErrorMsg('You are not a host!')\r\n      return;\r\n    }\r\n\r\n    if(participant.mute) {\r\n      return;\r\n    }\r\n\r\n    const data = `{\r\n      \"message\": \"sendmessage\",\r\n      \"attendeeId\": \"${participant.attendeeId}\",\r\n      \"type\": \"muteremote\"\r\n    }`;\r\n    this.props.connection.send(data);\r\n  }\r\n\r\n  handleRemovePart = (participant) => {\r\n    // confirmAlert({\r\n    //   title: 'Confirm to remove',\r\n    //   message: 'Are you sure you want to remove this participant?',\r\n    //   buttons: [\r\n    //     {\r\n    //       label: 'Yes',\r\n    //       onClick: ()=> {\r\n    //         if(this.props.role !== 'host') {\r\n    //           this.props.setErrorMsg('You are not a host!')\r\n    //           return;\r\n    //         }\r\n        \r\n    //         const data = `{\r\n    //           \"message\": \"sendmessage\",\r\n    //           \"attendeeId\": \"${participant.attendeeId}\",\r\n    //           \"type\": \"removeremote\"\r\n    //         }`;\r\n    //         this.props.connection.send(data);\r\n    //       }\r\n    //     },\r\n    //     {\r\n    //       label: 'No',\r\n    //       onClick: () => console.log()\r\n    //     }\r\n    //   ]\r\n    // })\r\n\r\n    this.setState({isAskForLeave: true, removeablePart: participant});\r\n  }\r\n\r\n  removePart = () => {\r\n    if(this.props.role !== 'host') {\r\n      this.props.setErrorMsg('You are not a host!')\r\n      return;\r\n    }\r\n\r\n    const data = `{\r\n      \"message\": \"sendmessage\",\r\n      \"attendeeId\": \"${this.state.removeablePart.attendeeId}\",\r\n      \"type\": \"removeremote\"\r\n    }`;\r\n    this.props.connection.send(data);\r\n\r\n    this.setState({isAskForLeave: false, removeablePart: null});\r\n  }\r\n\r\n  handleMakeHost = (participant) => {\r\n    if(this.props.role !== 'host') {\r\n      this.props.setErrorMsg('You are not a host!')\r\n      return;\r\n    }\r\n\r\n    const data = `{\r\n      \"message\": \"sendmessage\",\r\n      \"attendeeId\": \"${participant.attendeeId}\",\r\n      \"type\": \"makehost\"\r\n    }`;\r\n    this.props.connection.send(data);\r\n  }\r\n\r\n  renderParticipants = () => {\r\n    const { participants } = this.props;\r\n    \r\n    if (this.props.role === 'attendee') {\r\n      return <></>;\r\n    }\r\n\r\n    return (\r\n      participants.map((participant, index) => {\r\n        return (\r\n          <div className=\"participant-item\" key={index}>\r\n            <span className={'part-raise-hand-btn'} onClick={() => this.handlDownRaiseHand(participant)}>\r\n              {\r\n                participant.raisehand && <img src={RaiseHandIcon} alt=\"\" className=\"raise-hand-icon\"/>\r\n              }\r\n              \r\n            </span>\r\n            \r\n            <span className=\"participant-name\">{participant.name}{participant.isVideoChat? \" (Video Chat)\" : \" (Watching)\"}</span>\r\n\r\n            <div className=\"participant-tool-btns\">\r\n              {\r\n                !this.props.isWebinar && \r\n                <>\r\n                  <span className=\"participant-tool-btn mute-icon\" data-tip data-for='tooltip-for-mute' onClick={() => this.handlePartMute(participant)}>\r\n                    {participant.mute && <img src={unIcon} alt=\"block\"/>}\r\n                  </span>\r\n                  <ReactTooltip id='tooltip-for-mute' type='dark' place=\"bottom\" effect=\"solid\">\r\n                    <span>Mute participant</span>\r\n                  </ReactTooltip>\r\n                </>\r\n              }\r\n\r\n              {\r\n                !this.props.isWebinar && \r\n                <>\r\n                  <span className=\"participant-tool-btn host-icon\" data-tip data-for='tooltip-for-host' onClick={() => this.handleMakeHost(participant)}></span>\r\n                  <ReactTooltip id='tooltip-for-host' type='dark' place=\"bottom\" effect=\"solid\">\r\n                    <span>Make host</span>\r\n                  </ReactTooltip>\r\n                </>\r\n              }\r\n              \r\n              \r\n              \r\n              {\r\n                this.props.role === 'host' && (\r\n                <>\r\n                  <span className=\"participant-tool-btn delete-icon\" data-tip data-for='tooltip-for-remove' onClick={() => this.handleRemovePart(participant)}></span>\r\n                  <ReactTooltip id='tooltip-for-remove' type='dark' place=\"bottom\" effect=\"solid\">\r\n                    <span>Remove participant</span>\r\n                  </ReactTooltip>\r\n                </>  \r\n              )}\r\n              \r\n            </div>\r\n          </div>\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n  render() {\r\n    const { message } = this.state;\r\n    // const popup = showPopup ? 'show' : '';\r\n    const isChrome = navigator.userAgent.indexOf(\"CriOS\") !== -1;\r\n    const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\r\n    const iosChromeClassForInput = (isChrome && isIOS) ? 'ioschrome-input' : '';\r\n    const iosChromeClassForMessages = (isChrome && isIOS) ? 'ioschrome-messages' : '';\r\n   \r\n    return (\r\n      <div className=\"chat full-height pos-relative\">\r\n        {\r\n          this.state.isAskForLeave && \r\n          <AlertAskRemovePart \r\n            onRemove={() => this.removePart()}\r\n            onCancel={() => this.setState({isAskForLeave: false})}\r\n          />\r\n        }\r\n        \r\n        <div className=\"close-button\" onClick={this.props.closeChat}>\r\n          <img src={closeIcon} alt=\"Close Icon\" />\r\n          <span>CLOSE</span>\r\n        </div>\r\n        <div className=\"chat__wrapper full-width pos-relative\">\r\n          <Tabs onSelect={index => {this.handleTabChange(index)}} selectedIndex={this.props.isChat ? 0 : 1}>\r\n            <div className=\"desktop-tab\">\r\n              <TabList>\r\n                <Tab>Q&A</Tab>\r\n                {\r\n                  this.props.role === 'host' && <Tab>PARTICIPANTS</Tab>\r\n                }\r\n                \r\n              </TabList>\r\n            </div>\r\n\r\n            <div className=\"mobile-tab-title\">\r\n            {this.props.isChat ? \"Q&A\" : \"Participants\"}\r\n            </div>\r\n      \r\n            <TabPanel>\r\n              <div className=\"message-container\">\r\n                <div className={`messages pd-x-1 ${iosChromeClassForMessages}`}>\r\n                  {this.renderMessages()}\r\n                  <div ref={this.messagesEndRef} />\r\n                </div>\r\n\r\n                <div className={`composer chime-web-composer full-width ${iosChromeClassForInput}`}>\r\n                  <span className=\"label submit-question-label\">\r\n                    Submit question\r\n                  </span>\r\n                  <textarea\r\n                    ref={this.chatRef}\r\n                    placeholder=\"Type question here...\"\r\n                    value={message}\r\n                    maxLength={510}\r\n                    rows={3}\r\n                    onChange={this.handleChange}\r\n                    onKeyDown={this.handleKeyDown}\r\n                    className=\"chat-input desktop-question-input\"\r\n                  />\r\n                  <textarea\r\n                    ref={this.chatRef}\r\n                    placeholder=\"Type question here...\"\r\n                    value={message}\r\n                    maxLength={510}\r\n                    rows={3}\r\n                    onChange={this.handleChange}\r\n                    className=\"chat-input mobile-question-input\"\r\n                  />\r\n                </div>\r\n\r\n                <div className={`mobile-submit-btn-container ${iosChromeClassForInput}`}>\r\n                  <button onClick={this.handleSendMobile}>submit question</button>\r\n                </div>\r\n              </div>\r\n            </TabPanel>\r\n            <TabPanel>\r\n              <div className=\"messages pd-x-1\">\r\n                {this.renderParticipants()}\r\n              </div>\r\n            </TabPanel>\r\n          </Tabs>\r\n          \r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nChat.propTypes = {\r\n  chime: PropTypes.object,\r\n  title: PropTypes.string,\r\n  username: PropTypes.string,\r\n  joinInfo: PropTypes.object,\r\n  closeChat:  PropTypes.func,\r\n  isChat: PropTypes.bool,\r\n  changeTab: PropTypes.func,\r\n  connection: PropTypes.object,\r\n  messages: PropTypes.array,\r\n  participants: PropTypes.array,\r\n  role: PropTypes.string,\r\n  setErrorMsg: PropTypes.func,\r\n  isWebinar: PropTypes.bool\r\n};\r\n\r\nexport default Chat;\r\n","export default __webpack_public_path__ + \"static/media/mute.aec53e75.svg\";","export default __webpack_public_path__ + \"static/media/camera.776f1869.svg\";","export default __webpack_public_path__ + \"static/media/share.3313e06a.svg\";","export default __webpack_public_path__ + \"static/media/hand.c928c6c0.svg\";","export default __webpack_public_path__ + \"static/media/qa.ce90c700.svg\";","export default __webpack_public_path__ + \"static/media/qaa.35a6a8e2.svg\";","export default __webpack_public_path__ + \"static/media/user.7a529212.svg\";","export default __webpack_public_path__ + \"static/media/usera.ac1cee42.svg\";","export default __webpack_public_path__ + \"static/media/leave-room.779010e1.svg\";","export default __webpack_public_path__ + \"static/media/end-session-icon.d1b06036.svg\";","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nimport \"./Alert.css\";\nimport leaveroom from \"./../../assets/svgs/leave-room.svg\";\nimport cancelalert from \"./../../assets/svgs/cancel-alert.svg\";\nimport endsession from \"./../../assets/svgs/end-session-icon.svg\";\n\n\nclass AlertAskLeaveRoom extends Component {\n\n    render() {\n        return (\n            <div className=\"ask-alert\">\n                <div className=\"ask-alert-backdrop\" onClick={this.props.onCancel}></div>\n                \n                <div className=\"ask-alert-container\">\n                    <div className=\"ask-alert-header\">\n                        {\n                            this.props.role === 'host' ? 'Do you want to leave or end the session for all participants?' : 'Are you sure you want to leave?'\n                        }\n                    </div>\n\n                    <div className=\"ask-alert-content\">\n                        <div className=\"ask-alert-item\" onClick={this.props.onLeave}>\n                            <img src={leaveroom} alt=\"leave room\"/>\n                            <span className=\"ask-alert-item-text\">Leave room</span>\n                        </div>\n\n                        {\n                            this.props.role === 'host' && \n                            <div className=\"ask-alert-item endsession-ask-item\" onClick={this.props.onEndSession}>\n                                <img src={endsession} alt=\"end session\"/>\n                                <span className=\"ask-alert-item-text\">End Session for all participants</span>\n                            </div>\n                        }\n\n                        <div className=\"ask-alert-item\" onClick={this.props.onCancel}>\n                            <img src={cancelalert} alt=\"cancel\"/>\n                            <span className=\"ask-alert-item-text\">Cancel</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAlertAskLeaveRoom.propTypes = {\n    onLeave: PropTypes.func,\n    onCancel: PropTypes.func,\n    onEndSession: PropTypes.func,\n    role: PropTypes.string,\n};\n\nexport default withRouter(AlertAskLeaveRoom);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\nimport unIcon from '../../assets/svgs/un-line.svg';\r\nimport muteIcon from '../../assets/svgs/mute.svg';\r\nimport cameraIcon from '../../assets/svgs/camera.svg';\r\nimport shareIcon from '../../assets/svgs/share.svg';\r\nimport handIcon from '../../assets/svgs/hand.svg';\r\nimport qaIcon from '../../assets/svgs/qa.svg';\r\nimport qaaIcon from '../../assets/svgs/qaa.svg';\r\nimport userIcon from '../../assets/svgs/user.svg';\r\nimport useraIcon from '../../assets/svgs/usera.svg';\r\n\r\nimport './control.css';\r\n\r\nimport AlertAskLeaveRoom from './AlertAskLeaveRoom';\r\n\r\nclass Controls extends Component {\r\n  \r\n  state = {\r\n    // muted: false,\r\n    focus: false,\r\n    videoStatus: 'Enabled',\r\n    shareScreenStatue: true,\r\n    openChatStatus: false,\r\n    openParticipantsStatus: false,\r\n    isAskForLeave: false\r\n  };\r\n\r\n  // callback = (localMuted) => {\r\n  //   this.setState({ muted: localMuted });\r\n  // }\r\n\r\n  componentDidMount() {\r\n    this.props.chime.audioVideo.realtimeSubscribeToMuteAndUnmuteLocalAudio(\r\n      this.props.setMute\r\n    );\r\n    this.props.chime.audioVideo.addObserver({\r\n      videoTileDidUpdate: async (tileState) => {\r\n        if(this.state.videoStatus === 'Enabled') {\r\n          // try {\r\n          //   if (!this.props.chime.currentVideoInputDevice) {\r\n          //     // throw new Error('currentVideoInputDevice does not exist');\r\n          //     const videoInputDevices = await this.props.chime.audioVideo.listVideoInputDevices();\r\n          //     let selectedDevice = videoInputDevices[0];\r\n          //     if(videoInputDevices.length >= 2) {\r\n          //       videoInputDevices.map(device => {\r\n          //         if(device.label.toLowerCase().includes('front')) {\r\n          //           selectedDevice = {\r\n          //             label: device.label,\r\n          //             value: device.deviceId\r\n          //           };\r\n          //         }\r\n\r\n          //         return device;\r\n          //       })\r\n          //     }\r\n    \r\n          //     await this.props.chime.audioVideo.chooseVideoInputDevice(selectedDevice);\r\n          //   } else {\r\n          //     const videoInputDevices = await this.props.chime.audioVideo.listVideoInputDevices();\r\n          //     let selectedDevice = this.props.chime.currentVideoInputDevice;\r\n          //     if(videoInputDevices.length >= 2) {\r\n          //       videoInputDevices.map(device => {\r\n          //         if(device.label.toLowerCase().includes('front')) {\r\n          //           selectedDevice = {\r\n          //             label: device.label,\r\n          //             value: device.deviceId\r\n          //           };\r\n          //         }\r\n\r\n          //         return device;\r\n          //       })\r\n          //     }\r\n    \r\n          //     await this.props.chime.chooseVideoInputDevice(selectedDevice);\r\n          //   }\r\n            \r\n  \r\n          // } catch (err) {\r\n          //   try{\r\n          //     const videoInputDevices = await this.props.chime.audioVideo.listVideoInputDevices();\r\n          //     await this.props.chime.audioVideo.chooseVideoInputDevice(videoInputDevices[0]);\r\n          //   } catch(e) {\r\n          //     console.log(e);\r\n          //   }\r\n            \r\n          // }\r\n  \r\n          // try{\r\n          //   this.props.chime.audioVideo.startLocalVideoTile();\r\n          // } catch(e) {\r\n          //   console.log(e);\r\n          // }\r\n\r\n          this.props.turnOnCamera();\r\n          \r\n        } else {\r\n          this.props.chime.meetingSession.audioVideo.stopLocalVideoTile();\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.props && this.props.chime.audioVideo) {\r\n      this.props.chime.audioVideo.realtimeUnsubscribeToMuteAndUnmuteLocalAudio(\r\n        this.props.setMute\r\n      );\r\n    }\r\n\r\n    if(!this.props.isVideoChat) {\r\n      this.props.chime.audioVideo.realtimeMuteLocalAudio();\r\n    }\r\n  }\r\n\r\n  muteButtonOnClick = async () => {\r\n    if (this.props.muted) {\r\n      this.props.chime.audioVideo.realtimeUnmuteLocalAudio();\r\n    } else {\r\n      this.props.chime.audioVideo.realtimeMuteLocalAudio();\r\n    }\r\n    this.props.setMute(!this.props.muted)\r\n    // await new Promise(resolve => setTimeout(resolve, 10));\r\n  }\r\n\r\n  raiseButtonOnClick = () => {\r\n    const { connection } = this.props;\r\n    const data = `{\r\n      \"message\": \"sendmessage\",\r\n      \"data\": \"${!this.props.handRaiseStatus}\",\r\n      \"type\": \"raisehand\"\r\n    }`;\r\n    connection.send(data);\r\n  }\r\n\r\n  handlGoToLive = () => {\r\n    const { connection } = this.props;\r\n    if(connection) {\r\n      const data = `{\r\n        \"message\": \"sendmessage\",\r\n        \"title\": \"${this.props.title}\",\r\n        \"type\": \"gotolive\"\r\n      }`;\r\n      connection.send(data);\r\n    }\r\n    \r\n  }\r\n\r\n  shareButtonOnClick = async () => {\r\n    if (this.state.shareScreenStatue === false) {\r\n      this.setState({ shareScreenStatue: true });\r\n      await this.props.chime.audioVideo.stopContentShare();\r\n    }\r\n    else {\r\n      try{\r\n        let stream = await this.props.chime.audioVideo.startContentShareFromScreenCapture();\r\n        if(stream) {\r\n          this.setState({ shareScreenStatue: false });\r\n        }\r\n      } catch(e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  }\r\n\r\n  videoButtonOnClick = async () => {\r\n    if(this.props.isLive) {\r\n      if (this.state.videoStatus === 'Disabled') {\r\n        this.setState({ videoStatus: 'Loading' });\r\n        try {\r\n          // if (!this.props.chime.currentVideoInputDevice) {\r\n          //   // throw new Error('currentVideoInputDevice does not exist');\r\n          //   const videoInputDevices = await this.props.chime.audioVideo.listVideoInputDevices();\r\n          //   let selectedDevice = videoInputDevices[0];\r\n          //   if(videoInputDevices.length >= 2) {\r\n          //     videoInputDevices.map(device => {\r\n          //       if(device.label.toLowerCase().includes('front')) {\r\n          //         selectedDevice = {\r\n          //           label: device.label,\r\n          //           value: device.deviceId\r\n          //         };\r\n          //       }\r\n\r\n          //       return device;\r\n          //     })\r\n          //   }\r\n  \r\n          //   await this.props.chime.audioVideo.chooseVideoInputDevice(selectedDevice);\r\n          // } else {\r\n          //   try {\r\n          //     const videoInputDevices = await this.props.chime.audioVideo.listVideoInputDevices();\r\n          //     let selectedDevice = this.props.chime.currentVideoInputDevice;\r\n          //     if(videoInputDevices.length >= 2) {\r\n          //       videoInputDevices.map(device => {\r\n          //         if(device.label.toLowerCase().includes('front')) {\r\n          //           selectedDevice = {\r\n          //             label: device.label,\r\n          //             value: device.deviceId\r\n          //           };\r\n          //         }\r\n\r\n          //         return device;\r\n          //       })\r\n          //     }\r\n    \r\n          //     await this.props.chime.chooseVideoInputDevice(selectedDevice);\r\n    \r\n          //   } catch (err) {\r\n          //     const videoInputDevices = await this.props.chime.audioVideo.listVideoInputDevices();\r\n          //     await this.props.chime.audioVideo.chooseVideoInputDevice(videoInputDevices[0]);\r\n          //   }\r\n          // }\r\n  \r\n          // this.props.chime.audioVideo.startLocalVideoTile();\r\n\r\n          this.props.turnOnCamera();\r\n  \r\n          this.setState({ videoStatus: 'Enabled' });\r\n        } catch (error) {\r\n          // eslint-disable-next-line\r\n          console.error(error);\r\n          this.setState({ videoStatus: 'Disabled' });\r\n        }\r\n      } else if (this.state.videoStatus === 'Enabled') {\r\n        this.setState({ videoStatus: 'Loading' });\r\n        this.props.chime.meetingSession.audioVideo.stopLocalVideoTile();\r\n        this.setState({ videoStatus: 'Disabled' });\r\n      }\r\n    } else {\r\n      if(this.state.videoStatus === 'Enabled') {\r\n        this.props.setLocalCamera(false);\r\n        this.setState({videoStatus: 'Disabled'});\r\n      } else {\r\n        this.props.setLocalCamera(true);\r\n        this.setState({videoStatus: 'Enabled'});\r\n      }\r\n      \r\n    }\r\n    \r\n  }\r\n\r\n  endButtonOnClick = async () => {\r\n    this.setState({isAskForLeave: true});\r\n  }\r\n\r\n  leaveroom = async (isEnd = false) => {\r\n\r\n    if(this.props.role === 'host' && isEnd) {\r\n      const data = `{\r\n        \"message\": \"sendmessage\",\r\n        \"title\": \"${this.props.title}\",\r\n        \"type\": \"endroom\"\r\n      }`;\r\n      this.props.connection.send(data);\r\n    }\r\n\r\n    await this.props.chime.leaveRoom(this.props.role === 'host' && isEnd);\r\n    sessionStorage.removeItem(this.props.ssName);\r\n    const whereTo = `${this.props.baseHref}/${this.props.role === 'host' && isEnd ? '' : 'join?room=' + this.props.title}`;\r\n    this.props.history.push(whereTo);\r\n    window.location.reload();\r\n  }\r\n\r\n  toggleChat = () => {\r\n    if (this.state.openChatStatus === false) {\r\n      this.setState({ openChatStatus: true, openParticipantsStatus: false });\r\n      this.props.openChat();\r\n    }\r\n    else {\r\n      this.setState({ openChatStatus: false });\r\n      this.props.closeChat();\r\n    }\r\n  }\r\n\r\n  togglePT = () => {\r\n    if (this.state.openParticipantsStatus === false) {\r\n      this.setState({ openParticipantsStatus: true, openChatStatus: false });\r\n      this.props.openPT();\r\n    }\r\n    else {\r\n      this.setState({ openParticipantsStatus: false });\r\n      this.props.closeChat();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const mic_controls = this.props.muted ? 'controls__btn--mic_on' : 'controls__btn--mic_off';\r\n    const cam_controls = this.state.videoStatus === 'Enabled' ? 'controls__btn--cam_off' : 'controls__btn--cam_on';\r\n    const hand_controls = this.props.handRaiseStatus ? 'controls__btn--raise-on' : 'controls__btn--raise-off';\r\n    const share_controls = this.state.shareScreenStatue ? 'controls__btn--share-on' : 'controls__btn--share-off';\r\n    return (\r\n      <div className=\"controls pos-relative\">\r\n\r\n        {\r\n          this.state.isAskForLeave && \r\n          <AlertAskLeaveRoom \r\n            role={this.props.role}\r\n            onLeave={() => this.leaveroom(false)}\r\n            onCancel={() => this.setState({isAskForLeave: false})}\r\n            onEndSession={() => this.leaveroom(true)}\r\n          />\r\n        }\r\n        \r\n        {\r\n          this.props.isVideoChat && \r\n          <div className=\"button-group1\">\r\n            {\r\n              this.props.isWebinar ? this.props.role === 'host' ? \r\n              <button className={`controls__btn ${mic_controls} btn rounded btn--mic`} onClick={this.muteButtonOnClick}>\r\n                <div className=\"btn__svg btn__svg--mic_on button-layout btn-toggle\" >\r\n                  <img src={muteIcon} alt=\"mute icon\" className={`toggle-icon ${this.props.muted ? 'toggle-off-icon' : ''}`}></img>\r\n                  {\r\n                    this.props.muted && <img src={unIcon} alt=\"block icon\" className={'un-icon mute-block'}></img>\r\n                  }\r\n                  <span className=\"txt-oncontrolbtn toggle-text\">{this.props.muted ? 'Unmute' : 'Mute'}</span>\r\n                </div>\r\n              </button>  : '' : \r\n             <button className={`controls__btn ${mic_controls} btn rounded btn--mic`} onClick={this.muteButtonOnClick}>\r\n              <div className=\"btn__svg btn__svg--mic_on button-layout btn-toggle\" >\r\n                <img src={muteIcon} alt=\"mute icon\" className={`toggle-icon ${this.props.muted ? 'toggle-off-icon' : ''}`}></img>\r\n                {\r\n                  this.props.muted && <img src={unIcon} alt=\"block icon\" className={'un-icon mute-block'}></img>\r\n                }\r\n                <span className=\"txt-oncontrolbtn toggle-text\">{this.props.muted ? 'Unmute' : 'Mute'}</span>\r\n              </div>\r\n            </button>\r\n            }\r\n            {/* <button className={`controls__btn ${mic_controls} btn rounded btn--mic`} onClick={this.muteButtonOnClick}>\r\n              <div className=\"btn__svg btn__svg--mic_on button-layout btn-toggle\" >\r\n                <img src={muteIcon} alt=\"mute icon\" className={`toggle-icon ${this.props.muted ? 'toggle-off-icon' : ''}`}></img>\r\n                {\r\n                  this.props.muted && <img src={unIcon} alt=\"block icon\" className={'un-icon mute-block'}></img>\r\n                }\r\n                <span className=\"txt-oncontrolbtn toggle-text\">{this.props.muted ? 'Unmute' : 'Mute'}</span>\r\n              </div>\r\n            </button> */}\r\n            {\r\n              this.props.isWebinar ? this.props.role === 'host' ? \r\n                <button className={`controls__btn ${cam_controls} btn rounded btn--cam`} onClick={this.videoButtonOnClick}>\r\n                  <div className=\"btn__svg btn__svg--cam_on button-layout btn-toggle\">\r\n                    <img src={cameraIcon} alt=\"camera icon\" className={`toggle-icon ${this.state.videoStatus !== 'Enabled' ? 'toggle-off-icon' : ''}`}></img>\r\n                    {\r\n                      this.state.videoStatus !== 'Enabled' && <img src={unIcon} alt=\"block icon\" className={'un-icon camera-block'}></img>\r\n                    }\r\n                    <span className=\"txt-oncontrolbtn toggle-text\">{this.state.videoStatus === 'Enabled' ? 'Camera off' : 'Camera on'}</span>\r\n                  </div>\r\n                </button> : '' : \r\n                <button className={`controls__btn ${cam_controls} btn rounded btn--cam`} onClick={this.videoButtonOnClick}>\r\n                <div className=\"btn__svg btn__svg--cam_on button-layout btn-toggle\">\r\n                  <img src={cameraIcon} alt=\"camera icon\" className={`toggle-icon ${this.state.videoStatus !== 'Enabled' ? 'toggle-off-icon' : ''}`}></img>\r\n                  {\r\n                    this.state.videoStatus !== 'Enabled' && <img src={unIcon} alt=\"block icon\" className={'un-icon camera-block'}></img>\r\n                  }\r\n                  <span className=\"txt-oncontrolbtn toggle-text\">{this.state.videoStatus === 'Enabled' ? 'Camera off' : 'Camera on'}</span>\r\n                </div>\r\n              </button>\r\n            }\r\n            {/* <button className={`controls__btn ${cam_controls} btn rounded btn--cam`} onClick={this.videoButtonOnClick}>\r\n              <div className=\"btn__svg btn__svg--cam_on button-layout btn-toggle\">\r\n                <img src={cameraIcon} alt=\"camera icon\" className={`toggle-icon ${this.state.videoStatus !== 'Enabled' ? 'toggle-off-icon' : ''}`}></img>\r\n                {\r\n                  this.state.videoStatus !== 'Enabled' && <img src={unIcon} alt=\"block icon\" className={'un-icon camera-block'}></img>\r\n                }\r\n                <span className=\"txt-oncontrolbtn toggle-text\">{this.state.videoStatus === 'Enabled' ? 'Camera off' : 'Camera on'}</span>\r\n              </div>\r\n            </button> */}\r\n            \r\n            {\r\n              this.props.role === 'host' && (\r\n              <button className={`controls__btn ${share_controls} btn rounded btn--share`} onClick={this.shareButtonOnClick}>\r\n                <div className=\"btn__svg btn__svg--share_on button-layout btn-toggle\">\r\n                  <img src={shareIcon} alt=\"share icon\" className={`toggle-icon ${this.state.shareScreenStatue ? 'toggle-off-icon' : ''}`}></img>\r\n                  {\r\n                    this.state.shareScreenStatue && <img src={unIcon} alt=\"block icon\" className={'un-icon share-block'}></img>\r\n                  }\r\n                  <span className=\"txt-oncontrolbtn toggle-text\">{this.state.shareScreenStatue ? 'Share screen' : 'Stop sharing'}</span>\r\n                </div>\r\n              </button>\r\n            )}\r\n\r\n            \r\n            {/* {\r\n              this.props.role === 'attendee' && (\r\n              <button className={`controls__btn ${hand_controls} btn rounded btn--hand`} onClick={this.raiseButtonOnClick}>\r\n                <div className=\"btn__svg btn__svg--hand_on button-layout btn-toggle\">\r\n                  <img src={handIcon} alt=\"raise icon\" className={`toggle-icon raise-toggle-icon ${this.props.handRaiseStatus ? 'toggle-off-icon' : ''}`}></img>\r\n                  {\r\n                    this.props.handRaiseStatus && <img src={unIcon} alt=\"block icon\" className={'un-icon hand-block'}></img>\r\n                  }\r\n                  <span className=\"txt-oncontrolbtn toggle-text\">{this.props.handRaiseStatus ? 'Raise hand' : 'Lower hand'}</span>\r\n                </div>\r\n              </button>\r\n            )} */}\r\n\r\n            {\r\n              this.props.isWebinar ? '' : this.props.role === 'host' ? '' : \r\n              <button className={`controls__btn ${hand_controls} btn rounded btn--hand`} onClick={this.raiseButtonOnClick}>\r\n              <div className=\"btn__svg btn__svg--hand_on button-layout btn-toggle\">\r\n                <img src={handIcon} alt=\"raise icon\" className={`toggle-icon raise-toggle-icon ${this.props.handRaiseStatus ? 'toggle-off-icon' : ''}`}></img>\r\n                {\r\n                  this.props.handRaiseStatus && <img src={unIcon} alt=\"block icon\" className={'un-icon hand-block'}></img>\r\n                }\r\n                <span className=\"txt-oncontrolbtn toggle-text\">{this.props.handRaiseStatus ? 'Raise hand' : 'Lower hand'}</span>\r\n              </div>\r\n            </button>\r\n            }\r\n            \r\n\r\n            <button className={`controls__btn ${share_controls} btn rounded btn--qa`} onClick={this.toggleChat}>\r\n              <div className=\"btn__svg btn__svg--share_on button-layout btn-toggle\">\r\n                <img src={this.props.isOpenChat && this.state.openChatStatus ? qaaIcon : qaIcon} alt=\"qa icon\" className={'toggle-icon'}></img>\r\n                <span className=\"txt-oncontrolbtn toggle-text\">Q&A</span>\r\n              </div>\r\n            </button>\r\n            \r\n            {\r\n              this.props.role === 'host' && \r\n              <button className={`controls__btn ${share_controls} btn rounded btn--participants`} onClick={this.togglePT}>\r\n              <div className=\"btn__svg btn__svg--share_on button-layout btn-toggle\">\r\n                <img src={this.props.isOpenChat && this.state.openParticipantsStatus ? useraIcon : userIcon} alt=\"qa icon\" className={'toggle-icon'}></img>\r\n                <span className=\"txt-oncontrolbtn toggle-text\">Participants</span>\r\n              </div>\r\n            </button>\r\n            }\r\n          \r\n          </div>\r\n          \r\n        }\r\n        \r\n        {\r\n          !this.props.isVideoChat && \r\n          <button className=\"join-video-chat-now\" onClick={this.props.setVideo}>\r\n            <span className=\"txt-onbtn\">Join Video Chat Now</span>\r\n          </button>\r\n        }\r\n        <div className=\"button-group3\">\r\n          {\r\n            (!this.props.isLive && this.props.role === 'host') &&\r\n            <button className=\"go-livebtn\" onClick={this.handlGoToLive}>\r\n              <span className=\"txt-onbtn\">GO LIVE</span>\r\n            </button>\r\n          }\r\n          \r\n          {\r\n            this.props.isLive && \r\n            <button className=\"live-meetingbtn txt-onbtn\" onClick={this.endButtonOnClick}>\r\n            <span className=\"txt-onbtn\">{this.props.role === 'host' ? 'End Session' : 'LEAVE MEETING'}</span>\r\n          </button>\r\n          }\r\n          \r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nControls.propTypes = {\r\n  chime: PropTypes.object,\r\n  baseHref: PropTypes.string,\r\n  ssName: PropTypes.string,\r\n  title: PropTypes.string,\r\n  openSettings: PropTypes.func,\r\n  role: PropTypes.string,\r\n  history: PropTypes.object,\r\n  myVideoElement: PropTypes.object,\r\n  openChat: PropTypes.func,\r\n  openPT: PropTypes.func,\r\n  closeChat: PropTypes.func,\r\n  isOpenChat: PropTypes.bool,\r\n  joinInfo: PropTypes.object,\r\n  connection: PropTypes.object,\r\n  handRaiseStatus: PropTypes.bool,\r\n  muted: PropTypes.bool,\r\n  setMute: PropTypes.func,\r\n  isLive: PropTypes.bool,\r\n  isLocalCamera: PropTypes.bool,\r\n  setLocalCamera: PropTypes.func,\r\n  isVideoChat: PropTypes.bool,\r\n  setVideo: PropTypes.func,\r\n  turnOnCamera: PropTypes.func,\r\n  isWebinar: PropTypes.bool\r\n};\r\n\r\nexport default Controls;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as config from '../../config';\r\n\r\nclass Settings extends Component {\r\n\r\n  state = {\r\n    microphone: '',\r\n    speaker: '',\r\n    camera: ''\r\n  }\r\n\r\n  devicesUpdatedCallback = (fullDeviceInfo) => {\r\n    if (config.DEBUG) console.log(fullDeviceInfo);\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.handleKeyDown);\r\n\r\n    this.props.chime.subscribeToDevicesUpdated(this.devicesUpdatedCallback);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\r\n\r\n    this.props.chime.unsubscribeFromDevicesUpdated(this.devicesUpdatedCallback);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.keyCode === 27) { // keyCode 27 is Escape key\r\n      this.props.closeSettings();\r\n    }\r\n  }\r\n\r\n  handlePlaybackURLChange = (e) => {\r\n    this.setState({ playbackURL: e.target.value });\r\n  }\r\n\r\n  handleMicrophoneChange = (e) => {\r\n    this.setState({ microphone: e.target.value });\r\n\r\n    if (this.props.chime.audioInputDevices.length) {\r\n      let selectedDevice;\r\n      let o;\r\n      for (o in this.props.chime.audioInputDevices) {\r\n        if (this.props.chime.audioInputDevices[o].value === e.target.value) {\r\n          selectedDevice = this.props.chime.audioInputDevices[o];\r\n          break;\r\n        }\r\n      }\r\n      this.props.chime.chooseAudioInputDevice(selectedDevice);\r\n    }\r\n  }\r\n\r\n  handleSpeakerChange = (e) => {\r\n    this.setState({ speaker: e.target.value });\r\n\r\n    if (this.props.chime.audioOutputDevices.length) {\r\n      let selectedDevice;\r\n      let o;\r\n      for (o in this.props.chime.audioOutputDevices) {\r\n        if (this.props.chime.audioOutputDevices[o].value === e.target.value) {\r\n          selectedDevice = this.props.chime.audioOutputDevices[o];\r\n          break;\r\n        }\r\n      }\r\n      this.props.chime.chooseAudioOutputDevice(selectedDevice);\r\n    }\r\n  }\r\n\r\n  handleCameraChange = async (e) => {\r\n    this.setState({ camera: e.target.value });\r\n\r\n    if (this.props.chime.videoInputDevices.length) {\r\n      let selectedDevice;\r\n      let o;\r\n      for (o in this.props.chime.videoInputDevices) {\r\n        if (this.props.chime.videoInputDevices[o].value === e.target.value) {\r\n          selectedDevice = this.props.chime.videoInputDevices[o];\r\n          break;\r\n        }\r\n      }\r\n      this.props.chime.chooseVideoInputDevice(selectedDevice);\r\n    }\r\n  }\r\n\r\n  handleSave = (e) => {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    const {microphone, speaker, camera } = this.state;\r\n    this.props.saveSettings(microphone, speaker, camera);\r\n  }\r\n\r\n  renderDevices = (devices, defaultValue, label) => {\r\n    if (devices && devices.length) {\r\n      return (\r\n        devices.map(device => {\r\n          return (\r\n            <option key={device.value} value={device.value}>{`${device.label}`}</option>\r\n          )\r\n        })\r\n      )\r\n    } else {\r\n      return (\r\n      <option value=\"no-permission\">{`Permission not granted to access ${label} devices`}</option>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const currentMic = this.props.chime.currentAudioInputDevice;\r\n    const currentSpeaker = this.props.chime.currentAudioOutputDevice;\r\n    const currentCam = this.props.chime.currentVideoInputDevice;\r\n    const availableMics = this.props.chime.audioInputDevices;\r\n    const availableSpeakers = this.props.chime.audioOutputDevices;\r\n    const availableCams = this.props.chime.videoInputDevices;\r\n\r\n    return (\r\n      <div className=\"modal pos-absolute top-0 bottom-0 \">\r\n        <div className=\"modal__el\">\r\n          <h1 className=\"mg-b-2\">Settings</h1>\r\n          <form>\r\n            <fieldset>\r\n              <input className=\"mg-b-2\" name=\"\" id=\"\" type=\"text\" readOnly={true} placeholder=\"Playback URL\" onChange={this.handlePlaybackURLChange} value={this.props.joinInfo.PlaybackURL} disabled />\r\n              <select\r\n                name=\"microphone\"\r\n                className=\"select__field\"\r\n                onChange={this.handleMicrophoneChange}\r\n                value={this.state.microphone || currentMic.value}\r\n                disabled={!availableMics.length}\r\n              >\r\n                {this.renderDevices(availableMics, currentMic, 'microphone')}\r\n              </select>\r\n              <select\r\n                name=\"speaker\"\r\n                className=\"select__field\"\r\n                onChange={this.handleSpeakerChange}\r\n                value={this.state.speaker || currentSpeaker.value}\r\n                disabled={!availableSpeakers.length}\r\n              >\r\n                {this.renderDevices(availableSpeakers, currentSpeaker, 'speaker')}\r\n              </select>\r\n              <select\r\n                name=\"camera\"\r\n                className=\"select__field\"\r\n                onChange={this.handleCameraChange}\r\n                value={this.state.camera || currentCam.value}\r\n                disabled={!availableCams.length}\r\n              >\r\n                {this.renderDevices(availableCams, currentCam, 'camera')}\r\n              </select>\r\n              <button className=\"btn btn--primary mg-t-2\" onClick={this.handleSave}>Save</button>\r\n            </fieldset>\r\n          </form>\r\n        </div>\r\n        <div className=\"modal__overlay\"></div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nSettings.propTypes = {\r\n  chime: PropTypes.object,\r\n  joinInfo: PropTypes.object,\r\n  saveSettings: PropTypes.func,\r\n  closeSettings: PropTypes.func,\r\n  settings: PropTypes.object,\r\n  checkAudioVideoPermission: PropTypes.func,\r\n  updateAudioVideoDevices: PropTypes.func,\r\n};\r\n\r\nexport default Settings;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Webcam from 'react-webcam';\r\n\r\nclass LocalVideo extends Component {\r\n\r\n  state = {\r\n    enabled: false,\r\n    muted: false,\r\n    showMeta: true,\r\n    currentLocalTileId: -1\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.videoElement = React.createRef();\r\n  }\r\n\r\n  rosterCallback = (newRoster) => {\r\n\r\n    let attendeeId;\r\n    for (attendeeId in newRoster) {\r\n\r\n      // Exclude others\r\n      if (attendeeId !== this.props.joinInfo.Attendee.AttendeeId) {\r\n        continue;\r\n      }\r\n\r\n      this.setState({ muted: newRoster[attendeeId].muted });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Hide meta info after 2 seconds\r\n    setTimeout(() => {\r\n      this.setState({\r\n        showMeta: false\r\n      });\r\n    }, 2500);\r\n\r\n    this.props.chime.audioVideo.addObserver({\r\n      videoTileDidUpdate: (tileState) => {\r\n        console.log(tileState);\r\n        if (\r\n          !tileState.boundAttendeeId ||\r\n          !tileState.localTile ||\r\n          !tileState.tileId ||\r\n          !this.videoElement.current\r\n        ) {\r\n          return;\r\n        }\r\n\r\n        if(this.state.currentLocalTileId === -1) {\r\n          this.props.chime.audioVideo.bindVideoElement(\r\n            tileState.tileId,\r\n            this.videoElement.current\r\n          );\r\n          this.setState({\r\n            enabled: tileState.active,\r\n            currentLocalTileId: tileState.tileId\r\n          });\r\n\r\n        } else {\r\n          // this.props.chime.audioVideo.bindVideoElement(\r\n          //   this.state.currentLocalTileId,\r\n          //   this.videoElement.current\r\n          // );\r\n          // this.setState({\r\n          //   enabled: tileState.active,\r\n          //   currentLocalTileId: tileState.tileId\r\n          // });\r\n          // if(this.state.enabled) {\r\n          //   this.props.chime.audioVideo.startLocalVideoTile();\r\n          // }\r\n        }\r\n        \r\n      }\r\n    });\r\n\r\n    this.props.chime.subscribeToRosterUpdate(this.rosterCallback);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.chime.unsubscribeFromRosterUpdate(this.rosterCallback);\r\n  }\r\n\r\n  handleMouseEnter(e) {\r\n    this.setState({\r\n      showMeta: true\r\n    });\r\n  }\r\n\r\n  handleMouseLeave(e) {\r\n    this.setState({\r\n      showMeta: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // always show metadata when muted\r\n    // const showMeta = this.state.showMeta || this.state.muted || !this.state.enabled;\r\n\r\n    // const micMuteCls = this.state.muted ? 'controls__btn--mic_on' : 'controls__btn--mic_off';\r\n    // const metaCls = showMeta ? '' : ' cam__meta--hide';\r\n    return (\r\n      <div className={\"cam \" + (this.props.isWebinar ? 'webinar-local-cam' : 'local-cam')} onMouseEnter={this.handleMouseEnter.bind(this)} onMouseLeave={this.handleMouseLeave.bind(this)}>\r\n        <div className=\"cam__preview\">\r\n          <div className=\"video-container pos-relative\">\r\n            {\r\n              this.props.isLive ? <video className=\"attendee_cam\" ref={this.videoElement} /> : \r\n              this.props.isLocalCamera ? <Webcam className={\"attendee_cam local-cam-not-live\"}/> : ''\r\n            }\r\n            \r\n          </div>\r\n        </div>\r\n        {/* <span className={`cam__meta${metaCls}`} id={`${this.props.joinInfo.Attendee.AttendeeId}`}>\r\n          You\r\n          <span className={`${micMuteCls} btn--mic`} data-id={this.props.joinInfo.Attendee.AttendeeId}>\r\n            <svg className=\"attendee mg-l-1 btn__svg btn__svg--sm btn__svg--mic_on\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14C13.66 14 14.99 12.66 14.99 11L15 5C15 3.34 13.66 2 12 2C10.34 2 9 3.34 9 5V11C9 12.66 10.34 14 12 14ZM17.3 11C17.3 14 14.76 16.1 12 16.1C9.24 16.1 6.7 14 6.7 11H5C5 14.41 7.72 17.23 11 17.72V21H13V17.72C16.28 17.24 19 14.42 19 11H17.3Z\" fill=\"white\"/></svg>\r\n            <svg className=\"attendee mg-l-1 btn__svg btn__svg--sm btn__svg--mic_off\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M19 11H17.3C17.3 11.74 17.14 12.43 16.87 13.05L18.1 14.28C18.66 13.3 19 12.19 19 11ZM14.98 11.17C14.98 11.11 15 11.06 15 11V5C15 3.34 13.66 2 12 2C10.34 2 9 3.34 9 5V5.18L14.98 11.17ZM4.27 3L3 4.27L9.01 10.28V11C9.01 12.66 10.34 14 12 14C12.22 14 12.44 13.97 12.65 13.92L14.31 15.58C13.6 15.91 12.81 16.1 12 16.1C9.24 16.1 6.7 14 6.7 11H5C5 14.41 7.72 17.23 11 17.72V21H13V17.72C13.91 17.59 14.77 17.27 15.54 16.82L19.73 21L21 19.73L4.27 3Z\" fill=\"white\"/></svg>\r\n          </span>\r\n        </span> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nLocalVideo.propTypes = {\r\n  chime: PropTypes.object,\r\n  joinInfo: PropTypes.object,\r\n  isLive: PropTypes.bool,\r\n  isLocalCamera: PropTypes.bool,\r\n  isWebinar: PropTypes.bool\r\n};\r\n\r\nexport default LocalVideo;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass RemoteVideo extends Component {\r\n\r\n  state = {\r\n    showMeta: true\r\n  }\r\n  \r\n  componentDidMount() {\r\n    // Hide meta info after 2 seconds\r\n    if (!this.props.muted) {\r\n      setTimeout(() => {\r\n        this.setState({\r\n          showMeta: false\r\n        });\r\n      }, 2000);\r\n    }\r\n  }\r\n\r\n  handleMouseEnter(e) {\r\n    this.setState({\r\n      showMeta: true\r\n    });\r\n  }\r\n\r\n  handleMouseLeave(e) {\r\n    this.setState({\r\n      showMeta: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      attendeeId,\r\n      // videoEnabled,\r\n      // name,\r\n      // muted,\r\n      videoElement,\r\n      isHidden\r\n    } = this.props;\r\n    // always show metadata when participant is muted or cam is off\r\n    // const showMeta = this.state.showMeta || muted || !videoEnabled;\r\n\r\n    let camClass = attendeeId  ? '' : ' hidden';\r\n    if (isHidden) {\r\n      camClass = ' hidden';\r\n    }\r\n    // const micMuteCls = muted ? 'controls__btn--mic_on' : 'controls__btn--mic_off';\r\n    // const metaCls =  showMeta ? '' : ' cam__meta--hide';\r\n    const videoId = `video_${attendeeId}`;\r\n    return(\r\n\r\n        <div className={`cam${camClass} cam-layout-${this.props.count}`} key={attendeeId} onMouseEnter={this.handleMouseEnter.bind(this)} onMouseLeave={this.handleMouseLeave.bind(this)}>\r\n          <div className=\"cam__preview\">\r\n            <div className=\"video-container pos-relative\">\r\n              <video ref={videoElement} className=\"attendee_cam remote-attendee\" id={videoId} />\r\n            </div>\r\n\r\n            <div className=\"remote-bottom-bar\">\r\n              {this.props.name}\r\n            </div>\r\n          </div>\r\n          {/* <span className={`cam__meta${metaCls}`}>\r\n            {name}\r\n            <span className={`${micMuteCls} btn--mic`} data-id={attendeeId}>\r\n              <svg className=\"attendee mg-l-1 btn__svg btn__svg--sm btn__svg--mic_on\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 14C13.66 14 14.99 12.66 14.99 11L15 5C15 3.34 13.66 2 12 2C10.34 2 9 3.34 9 5V11C9 12.66 10.34 14 12 14ZM17.3 11C17.3 14 14.76 16.1 12 16.1C9.24 16.1 6.7 14 6.7 11H5C5 14.41 7.72 17.23 11 17.72V21H13V17.72C16.28 17.24 19 14.42 19 11H17.3Z\" fill=\"white\"/></svg>\r\n              <svg className=\"attendee mg-l-1 btn__svg btn__svg--sm btn__svg--mic_off\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M19 11H17.3C17.3 11.74 17.14 12.43 16.87 13.05L18.1 14.28C18.66 13.3 19 12.19 19 11ZM14.98 11.17C14.98 11.11 15 11.06 15 11V5C15 3.34 13.66 2 12 2C10.34 2 9 3.34 9 5V5.18L14.98 11.17ZM4.27 3L3 4.27L9.01 10.28V11C9.01 12.66 10.34 14 12 14C12.22 14 12.44 13.97 12.65 13.92L14.31 15.58C13.6 15.91 12.81 16.1 12 16.1C9.24 16.1 6.7 14 6.7 11H5C5 14.41 7.72 17.23 11 17.72V21H13V17.72C13.91 17.59 14.77 17.27 15.54 16.82L19.73 21L21 19.73L4.27 3Z\" fill=\"white\"/></svg>\r\n            </span>\r\n          </span> */}\r\n        </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nRemoteVideo.propTypes = {\r\n  chime: PropTypes.object,\r\n  attendeeId: PropTypes.string,\r\n  videoEnabled: PropTypes.bool,\r\n  name: PropTypes.string,\r\n  muted: PropTypes.bool,\r\n  videoElement: PropTypes.object,\r\n  count: PropTypes.number,\r\n  joinInfo: PropTypes.object,\r\n  isHidden: PropTypes.bool,\r\n};\r\n\r\nexport default RemoteVideo;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RemoteVideo from './RemoteVideo';\r\nimport * as config from '../../config';\r\n\r\nconst MAX_REMOTE_VIDEOS = config.CHIME_ROOM_MAX_ATTENDEE;\r\n\r\nclass RemoteVideoGroup extends Component {\r\n\r\n  state = {\r\n    rosterChanged: false,\r\n    roster: [],\r\n    shareVideoElement: React.createRef(),\r\n    isMyContent: false,\r\n    isSharingContent: false,\r\n    sharingTileId: 0,\r\n    sharingInfo: {}\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.previousRoster = {};\r\n  }\r\n\r\n  findRosterSlot = (attendeeId) => {\r\n    let index;\r\n    for (index = 0; index < this.state.roster.length; index++) {\r\n      if (this.state.roster[index].attendeeId === attendeeId) {\r\n        return index;\r\n      }\r\n    }\r\n    for (index = 0; index < this.state.roster.length; index++) {\r\n      if (!this.state.roster[index].attendeeId) {\r\n        return index;\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  rosterCallback = (newRoster) => {\r\n    if (Object.keys(newRoster).length > 2) {\r\n      if (config.DEBUG) console.log('More than 2');\r\n    }\r\n\r\n    if (Object.keys(newRoster).length < Object.keys(this.previousRoster).length) {\r\n      if (config.DEBUG) console.log('Attendee(s) left');\r\n      const differ = Object.keys(this.previousRoster).filter(k => this.previousRoster[k] !== newRoster[k]);\r\n      if (config.DEBUG) console.log(differ);\r\n\r\n      if (differ.length) {\r\n        let i;\r\n        for (i in differ) {\r\n          const index = this.findRosterSlot(differ[i]);\r\n          const roster = this.state.roster;\r\n          roster[index] = {\r\n            videoElement: roster[index].videoElement\r\n          }\r\n          this.setState({ roster });\r\n        }\r\n      }\r\n    }\r\n\r\n    this.previousRoster = Object.assign({}, newRoster);\r\n\r\n    let attendeeId;\r\n    for (attendeeId in newRoster) {\r\n\r\n      // Exclude self\r\n      if (attendeeId === this.props.joinInfo.Attendee.AttendeeId) {\r\n        continue;\r\n      }\r\n\r\n      // exclude empty name\r\n      if (!newRoster[attendeeId].name) {\r\n        continue;\r\n      }\r\n\r\n      const index = this.findRosterSlot(attendeeId);\r\n      const roster = this.state.roster;\r\n      const attendee = {\r\n        ...roster[index],\r\n        attendeeId,\r\n        ...newRoster[attendeeId]\r\n      };\r\n\r\n      roster[index] = attendee;\r\n      this.setState({ roster });\r\n    }\r\n\r\n    // participants props proceed\r\n    let {participants} = this.props;\r\n    let keys = Object.keys(newRoster);\r\n    let parts = [];\r\n    keys.map(key => {\r\n\r\n      if(key !== this.props.joinInfo.Attendee.AttendeeId) {\r\n        let isExisting = false;\r\n        participants.map(participant => {\r\n          if(participant.attendeeId === key) {\r\n            if (!(parts.length >= MAX_REMOTE_VIDEOS - 1)) {\r\n              parts.push({\r\n                ...participant,\r\n                mute: newRoster[key].muted,\r\n                name: newRoster[key].name\r\n              });\r\n  \r\n              participant.mute = newRoster[key].muted;\r\n              participant.name = newRoster[key].name;\r\n  \r\n              isExisting = true;\r\n            }\r\n            \r\n          }\r\n\r\n          return participant;\r\n        });\r\n        \r\n        // if(!isExisting) {\r\n        //   if (!(parts.length >= MAX_REMOTE_VIDEOS - 1)) {\r\n        //     let item = {\r\n        //       name: newRoster[key].name,\r\n        //       mute: newRoster[key].muted,\r\n        //       host: false,\r\n        //       raisehand: false,\r\n        //       attendeeId: key,\r\n        //       isVideoChat: false\r\n        //     }\r\n      \r\n        //     parts.push(item);\r\n        //   }\r\n        // }\r\n      }\r\n\r\n      return key;\r\n    });\r\n    \r\n    this.props.setParts(parts);\r\n\r\n  };\r\n\r\n  videoTileDidUpdateCallback = async (tileState) => {\r\n    \r\n    if (\r\n      tileState.boundAttendeeId &&\r\n      // tileState.localTile &&\r\n      tileState.isContent &&\r\n      tileState.tileId\r\n    ) {\r\n      if(tileState.boundAttendeeId === this.props.joinInfo.Attendee.AttendeeId + '#content') {\r\n        this.setState({isMyContent: true});\r\n      } else {\r\n        this.setState({isMyContent: false});\r\n      }\r\n\r\n      const shareVideoElement = document.getElementById(`share_video`);\r\n      this.props.chime.audioVideo.bindVideoElement(\r\n        tileState.tileId,\r\n        shareVideoElement\r\n      );\r\n\r\n      this.setState({isSharingContent: true, sharingTileId: tileState.tileId});\r\n      this.setState({\r\n        sharingInfo: this.previousRoster[tileState.boundAttendeeId.replace('#content', '')]\r\n      });\r\n      return;\r\n    } else {\r\n      this.setState({isSharingContent: false});\r\n    }\r\n\r\n    if (\r\n      !tileState.boundAttendeeId ||\r\n      tileState.localTile ||\r\n      tileState.isContent ||\r\n      !tileState.tileId\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    let index = this.findRosterSlot(tileState.boundAttendeeId);\r\n    const roster = this.state.roster;\r\n    const attendee = {\r\n      ...roster[index],\r\n      videoEnabled: tileState.active,\r\n      attendeeId: tileState.boundAttendeeId,\r\n      tileId: tileState.tileId\r\n    };\r\n    roster[index] = attendee;\r\n    this.setState({ roster });\r\n\r\n    setTimeout(() => {\r\n      if (config.DEBUG) console.log(roster[index]);\r\n      const videoElement = document.getElementById(`video_${tileState.boundAttendeeId}`);\r\n      if (videoElement) {\r\n        this.props.chime.audioVideo.bindVideoElement(\r\n          tileState.tileId,\r\n          videoElement\r\n        );\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  videoTileWasRemovedCallback = (tileId) => {\r\n    let roster = this.state.roster;\r\n\r\n    // Find the removed tileId in the roster and mark the video as disabled.\r\n    // eslint-disable-next-line\r\n    if(tileId === this.state.sharingTileId) {\r\n      this.setState({\r\n        sharingTileId: 0, \r\n        isMyContent: false,\r\n        isSharingContent: false,\r\n        sharingInfo: {}\r\n      });\r\n    }\r\n\r\n    roster.find((o, i) => {\r\n      if (o.tileId === tileId) {\r\n        roster[i].videoEnabled = false;\r\n        this.setState({ roster });\r\n        if (config.DEBUG) console.log(`Tile was removed ${tileId}`);\r\n      }\r\n\r\n      return o;\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const roster = [];\r\n    // eslint-disable-next-line\r\n    Array.from(Array(MAX_REMOTE_VIDEOS).keys()).map((key, index) => {\r\n      roster[index] = {\r\n        videoElement: React.createRef()\r\n      };\r\n\r\n      return key;\r\n    });\r\n    this.setState({ roster });\r\n\r\n    this.props.chime.subscribeToRosterUpdate(this.rosterCallback);\r\n\r\n    this.props.chime.audioVideo.addObserver({\r\n      videoTileDidUpdate: this.videoTileDidUpdateCallback,\r\n      videoTileWasRemoved: this.videoTileWasRemovedCallback,\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.chime.unsubscribeFromRosterUpdate(this.rosterCallback);\r\n  }\r\n\r\n  stopHandle = async () => {\r\n    await this.props.chime.audioVideo.stopContentShare();\r\n  }\r\n\r\n  getPart = (attendee) => {\r\n    let part = {};\r\n    this.props.participants.map(participant => {\r\n      if(participant.attendeeId === attendee.attendeeId) {\r\n        part = participant;\r\n      }\r\n      return participant;\r\n    });\r\n   \r\n    return part;\r\n  }\r\n\r\n  checkInShowAble = (attendeeId) => {\r\n    let isExisting = true;\r\n    this.props.showAbleParts.map(showablePart => {\r\n      if(attendeeId === showablePart) {\r\n        isExisting = false;\r\n      }\r\n      return showablePart;\r\n    });\r\n    return isExisting;\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.props.showAbleParts)\r\n    let count = 0;\r\n    this.state.roster.map((attendee) => {\r\n      if(attendee.attendeeId) {\r\n        const part = this.getPart(attendee);\r\n        if(part.attendeeId && part.isVideoChat) {\r\n          count ++;\r\n        }\r\n      }\r\n\r\n      return attendee;\r\n    });\r\n\r\n    let {shareVideoElement, isMyContent, isSharingContent, sharingInfo} = this.state;\r\n    \r\n    return(\r\n      <React.Fragment>\r\n        <div className={`sharing-video-container ${isMyContent || !isSharingContent ? 'display-none': ''}`}>\r\n          <video ref={shareVideoElement} className={`${this.props.isOpenChat ? 'opened-width-share-video' : ''}`} id='share_video' />\r\n        </div>\r\n\r\n        {isSharingContent && (\r\n          <div className={'sharing-headline-container'}>\r\n            {isMyContent ? <span className=\"sharing-text\">You are currently sharing your screen</span> : \r\n            <span className=\"sharing-text\">{sharingInfo.name} is currently screen sharing</span>}\r\n            \r\n            {isMyContent && <button className=\"mycontent-stop-sharing\" onClick={this.stopHandle}>STOP SHARING</button>}\r\n          </div>\r\n        )}\r\n        \r\n        \r\n        <div className={`remote-cams-container ${!isMyContent && isSharingContent ? 'display-none' : ''}`}>\r\n          {this.state.roster.map((attendee, index) => {\r\n            const part = this.getPart(attendee);\r\n            // if(part.attendeeId) console.log(part);\r\n            const isHidden = !part.attendeeId ? true : !part.isVideoChat ? true : this.checkInShowAble(part.attendeeId);\r\n            return (\r\n              <RemoteVideo\r\n                chime={this.props.chime}\r\n                key={index}\r\n                attendeeId={attendee.attendeeId}\r\n                videoEnabled={attendee.videoEnabled}\r\n                name={attendee.name}\r\n                muted={attendee.muted}\r\n                videoElement={attendee.videoElement}\r\n                count={this.props.isWebinar ? 1: count}\r\n                joinInfo={this.props.joinInfo}\r\n                isHidden={isHidden}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nRemoteVideoGroup.propTypes = {\r\n  chime: PropTypes.object,\r\n  joinInfo: PropTypes.object,\r\n  participants: PropTypes.array,\r\n  setParts: PropTypes.func,\r\n  isOpenChat: PropTypes.bool,\r\n  isWebinar: PropTypes.bool\r\n};\r\n\r\nexport default RemoteVideoGroup;\r\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\n// Styles\nimport \"./Alert.css\";\nimport logo from \"./../../assets/Logo.svg\";\n\nclass AlertWaiting extends Component {\n\n    render() {\n        return(\n        <div className={\"alert-container\"}>\n            <div className={\"alert-back-drop\"}>\n            </div>\n            <div className={\"alert-content\"}>\n                <img className=\"alert-logo\" src={logo} alt=\"Logo\" />\n                <p>Sorry, the session is not live yet.</p>\n                <p>Thank you for your patience.</p>\n                <p>You will be able to access this session shortly.</p>\n            </div>\n        </div>\n        );\n        \n    }\n}\n\nexport default withRouter(AlertWaiting);","export default __webpack_public_path__ + \"static/media/video-chat.e0254cc8.svg\";","export default __webpack_public_path__ + \"static/media/Stop-Video.875bd7a3.svg\";","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nimport \"./Alert.css\";\nimport videochat from \"./../../assets/svgs/video-chat.svg\";\nimport observerchat from \"./../../assets/svgs/Stop-Video.svg\";\n\n\nclass AlertAskVideoObserver extends Component {\n\n    render() {\n        return (\n            <div className=\"ask-alert\">\n                <div className=\"ask-alert-backdrop\"></div>\n                \n                <div className=\"ask-alert-container\">\n                    <div className=\"ask-alert-header\">Do you want to video chat or <br/> do you want to be an observer?</div>\n\n                    <div className=\"ask-alert-content\">\n                        <div className=\"ask-alert-item\" onClick={this.props.onVideoChat}>\n                            <img src={videochat} alt=\"video chat\"/>\n                            <span className=\"ask-alert-item-text\">Yes, I want to video chat</span>\n                        </div>\n\n                        <div className=\"ask-alert-item\" onClick={this.props.onObserverChat}>\n                            <img src={observerchat} alt=\"observer chat\"/>\n                            <span className=\"ask-alert-item-text\">I'd like to watch please!</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAlertAskVideoObserver.propTypes = {\n    onVideoChat: PropTypes.func,\n    onObserverChat: PropTypes.func,\n};\n\nexport default withRouter(AlertAskVideoObserver);","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\n// Styles\nimport \"./Alert.css\";\nimport logo from \"./../../assets/Logo.svg\";\n\nclass AlertHolding extends Component {\n\n    render() {\n        return(\n        <div className={\"alert-container\"}>\n            <div className={\"alert-back-drop\"}>\n            </div>\n            <div className={\"alert-content\"}>\n                <img className=\"alert-logo\" src={logo} alt=\"Logo\" />\n                <p>Sorry, this virtual exhibition booth is currently full.</p>\n                <p>Please try again in 5 minutes.</p>\n                <p>We'd recommend joining another exhibitor's booth while you wait.</p>\n            </div>\n        </div>\n        );\n        \n    }\n}\n\nexport default withRouter(AlertHolding);","export default __webpack_public_path__ + \"static/media/ULAW-colour-hires.0a9f8db0.jpg\";","export default __webpack_public_path__ + \"static/media/v-icon.c9bccf9e.svg\";","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as config from \"../../config\";\r\nimport {\r\n  DefaultPromisedWebSocketFactory,\r\n  DefaultDOMWebSocketFactory,\r\n  FullJitterBackoff,\r\n  ReconnectingPromisedWebSocket,\r\n  MeetingSessionStatusCode\r\n} from 'amazon-chime-sdk-js';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\n// Components\r\n// import VideoPlayer from \"../videoPlayer/VideoPlayer\";\r\nimport Chat from \"../chat/Chat\";\r\nimport Controls from \"./Controls\";\r\nimport Settings from \"./Settings\";\r\nimport Error from \"./Error\";\r\nimport LocalVideo from './LocalVideo';\r\nimport RemoteVideoGroup from './RemoteVideoGroup';\r\nimport Alert from './Alert';\r\nimport AlertWaiting from './AlertWaiting';\r\nimport AlertAskVideoObserver from './AlertAskVideoObserver';\r\nimport AlertHolding from './AlertHolding';\r\nimport AlertAskLeaveRoom from './AlertAskLeaveRoom';\r\n\r\n// Styles\r\nimport \"./ChimeWeb.css\";\r\nimport \"./Meeting.css\";\r\n\r\nimport logo from \"./../../assets/Logo.svg\";\r\nimport bodylogo from \"../../assets/ULAW-colour-hires.jpg\";\r\nimport vicon from \"../../assets/svgs/v-icon.svg\";\r\n\r\nconst MAX_REMOTE_VIDEOS = config.CHIME_ROOM_MAX_ATTENDEE;\r\n\r\nclass Meeting extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.baseHref = config.BASE_HREF;\r\n    this.ssName = \"\";\r\n\r\n    this.audioElementRef = React.createRef();\r\n    this.myVideoElement = React.createRef();\r\n    this.WEB_SOCKET_TIMEOUT_MS = 130000;\r\n  }\r\n\r\n  state = {\r\n    meetingStatus: null, // Loading, Success or Failed\r\n    showSettings: false,\r\n    showError: false,\r\n    errorMsg: \"\",\r\n    showPopupMessage: false,\r\n    isChat: true,\r\n    isAvailable: false,\r\n\r\n    messages: [],\r\n    connection: null,\r\n    participants: [],\r\n    handRaiseStatus: true,\r\n    muted: false,\r\n\r\n    isLive: false,\r\n    getStatus: 'waiting',\r\n    isLocalCamera: true,\r\n    isVideoChat: true,\r\n    showAbleParts: [],\r\n    isAsking: true,\r\n    isAskForLeave: false,\r\n    isOverFlow: false,\r\n    getOverFlowStatus: 'waiting',\r\n    isClosable: true,\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({ showPopupMessage: true });\r\n  };\r\n\r\n  openChat = () => {\r\n    this.setState({ showPopupMessage: true, isChat: true });\r\n  }\r\n\r\n  openPT = () => {\r\n    this.setState({ showPopupMessage: true, isChat: false });\r\n  }\r\n\r\n  changeChat = (index) => {\r\n    if (index === 0) this.setState({ isChat: true });\r\n    if (index === 1) this.setState({ isChat: false });\r\n  }\r\n\r\n  hideModal = () => {\r\n    this.setState({ showPopupMessage: false });\r\n  };\r\n\r\n  componentDidMount() {\r\n\r\n    const start = async () => {\r\n      try {\r\n        const qs = new URLSearchParams(this.props.location.search);\r\n        const room = qs.get(\"room\");\r\n        this.ssName = `chime[${room}]`;\r\n        if (!room || !sessionStorage.getItem(this.ssName)) {\r\n          this.props.history.push(`${this.baseHref}/`);\r\n        }\r\n\r\n        const ssData = JSON.parse(sessionStorage.getItem(this.ssName));\r\n        if (config.DEBUG) console.log(ssData);\r\n\r\n        this.username = ssData.username;\r\n        this.title = ssData.title;\r\n        this.role = ssData.role;\r\n        this.isWebinar = qs.get(\"webinar\") || false;\r\n        if(this.isWebinar === 'true') {\r\n          this.isWebinar = true;\r\n          this.setState({isAsking: false})\r\n        }\r\n        console.log(this.isWebinar)\r\n\r\n        if (!ssData.joinInfo) {\r\n          this.joinInfo = await this.props.chime.createRoom(\r\n            this.role,\r\n            this.username,\r\n            this.title,\r\n            ssData.playbackURL\r\n          );\r\n          const data = {\r\n            ...ssData,\r\n            joinInfo: this.joinInfo,\r\n          };\r\n          sessionStorage.setItem(this.ssName, JSON.stringify(data));\r\n          this.playbackURL = this.joinInfo.PlaybackURL;\r\n        } else {\r\n          // Browser refresh\r\n          this.joinInfo = ssData.joinInfo;\r\n          this.playbackURL = ssData.joinInfo.PlaybackURL;\r\n          await this.props.chime.reInitializeMeetingSession(\r\n            this.joinInfo,\r\n            this.username\r\n          );\r\n        }\r\n\r\n        let blocks = JSON.parse(localStorage.getItem('blockedMeetings'));\r\n        if (blocks) {\r\n          blocks.forEach(block => {\r\n            if (block === this.joinInfo.Meeting.MeetingId) {\r\n              this.props.history.push(`${this.baseHref}/removed`);\r\n            }\r\n          })\r\n        }\r\n\r\n        if(this.isWebinar) {\r\n          this.onVideoChat();\r\n        }\r\n\r\n        this.setState({\r\n          meetingStatus: \"Success\",\r\n          muted: this.role === 'host' ? false : true\r\n        });\r\n\r\n        if (this.role !== 'host') {\r\n          this.props.chime.audioVideo.realtimeMuteLocalAudio();\r\n        }\r\n\r\n        this.props.chime.audioVideo.addObserver({\r\n          audioVideoDidStop: async (sessionStatus) => {\r\n            if (\r\n              sessionStatus.statusCode() ===\r\n              MeetingSessionStatusCode.AudioCallEnded\r\n            ) {\r\n              const whereTo = `${this.baseHref}/${this.role === \"host\" ? \"\" : \"end\"\r\n                }`;\r\n              this.props.chime.leaveRoom(this.role === \"host\");\r\n              this.props.history.push(whereTo);\r\n            }\r\n          },\r\n        });\r\n\r\n        // this.props.chime.joinRoom(this.audioElementRef.current);\r\n\r\n        // await this.props.chime.joinRoom(this.audioElementRef.current);\r\n\r\n        // inverk init websocket connection\r\n        // this.initChatConnection();\r\n        this.askVideoOrObserver();\r\n      } catch (error) {\r\n        // eslint-disable-next-line\r\n        console.error(error);\r\n        this.setState({ meetingStatus: \"Failed\" });\r\n      }\r\n    };\r\n    start();\r\n\r\n\r\n    try {\r\n      if (!navigator.mediaDevices.enumerateDevices) {\r\n        this.setState({ isAvailable: true });\r\n      }\r\n    } catch (e) {\r\n      console.log(e)\r\n      this.setState({ isAvailable: true });\r\n    }\r\n\r\n    //   const isChrome = navigator.userAgent.indexOf(\"Chrome\") !== -1;\r\n    //   const isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\r\n    const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\r\n\r\n    if (isIOS) {\r\n      const isChrome = navigator.userAgent.indexOf(\"CriOS\") !== -1;\r\n      if (isChrome) {\r\n        this.setState({ isAvailable: true });\r\n      }\r\n    }\r\n  }\r\n\r\n  // init connection\r\n\r\n  async initChatConnection() {\r\n    const { Meeting, Attendee } = this.joinInfo;\r\n    const messagingUrl = `${config.CHAT_WEBSOCKET}?MeetingId=${Meeting.MeetingId}&AttendeeId=${Attendee.AttendeeId}&JoinToken=${Attendee.JoinToken}`\r\n    const connection = new ReconnectingPromisedWebSocket(\r\n      messagingUrl,\r\n      [],\r\n      'arraybuffer',\r\n      new DefaultPromisedWebSocketFactory(new DefaultDOMWebSocketFactory()),\r\n      new FullJitterBackoff(1000, 0, 10000)\r\n    );\r\n\r\n    if (config.DEBUG) console.log(connection);\r\n\r\n    await connection.open(this.WEB_SOCKET_TIMEOUT_MS);\r\n\r\n    connection.addEventListener('message', async event => {\r\n      let { messages, participants } = this.state;\r\n      const messageData = JSON.parse(event.data);\r\n      if (messageData.Type === 'sendmessage') {\r\n        messages.push({\r\n          id: messageData.MessageId,\r\n          timestamp: messageData.Time,\r\n          username: messageData.Sender,\r\n          message: messageData.Content,\r\n          vote: messageData.Vote,\r\n        });\r\n\r\n        this.setState({ messages });\r\n      } else if (messageData.Type === 'upvote') {\r\n        messages.map(message => {\r\n          if (message.id === messageData.MessageId) {\r\n            message.vote = messageData.Vote\r\n          }\r\n\r\n          return message;\r\n        });\r\n\r\n        this.setState({ messages });\r\n      } else if (messageData.Type === 'deletemessage') {\r\n        let tempMessages = [];\r\n        messages.map(message => {\r\n          if (message.id !== messageData.MessageId) {\r\n            tempMessages.push(message);\r\n          }\r\n\r\n          return message;\r\n        });\r\n\r\n        this.setState({ messages: tempMessages });\r\n      } else if (messageData.Type === 'getall') {\r\n        let tempMessages = [];\r\n        messageData.messages.map(message => {\r\n          tempMessages.push({\r\n            id: message.MessageId,\r\n            timestamp: message.Time,\r\n            username: message.Sender,\r\n            message: message.Content,\r\n            vote: message.Vote,\r\n          });\r\n\r\n          return message;\r\n        });\r\n\r\n        this.setState({ messages: tempMessages });\r\n      } else if (messageData.Type === 'raisehand') {\r\n        participants.map(participant => {\r\n          if (participant.attendeeId === messageData.Sender && this.role === 'host') {\r\n            participant.raisehand = messageData.Data === 'false' ? true : false;\r\n            this.setErrorMsg(`${participant.name} has raised their hand.`)\r\n          }\r\n\r\n          return participant;\r\n        });\r\n        this.setState({ participants });\r\n\r\n        if (messageData.Sender === this.joinInfo.Attendee.AttendeeId) {\r\n          this.setState({ handRaiseStatus: messageData.Data === 'false' ? false : true })\r\n        }\r\n      } else if (messageData.Type === 'downhand') {\r\n        participants.map(participant => {\r\n          if (participant.attendeeId === messageData.Data) {\r\n            participant.raisehand = false;\r\n          }\r\n\r\n          return participant;\r\n        });\r\n\r\n        this.setState({ participants });\r\n\r\n        if (messageData.Data === this.joinInfo.Attendee.AttendeeId) {\r\n          this.setState({ handRaiseStatus: true });\r\n          this.setErrorMsg(\"Your hand has been lowered.\");\r\n        }\r\n      } else if (messageData.Type === 'muteremote') {\r\n        if (this.joinInfo.Attendee.AttendeeId === messageData.Data) {\r\n          this.props.chime.audioVideo.realtimeMuteLocalAudio();\r\n          this.setErrorMsg('You have been muted by the host.');\r\n        }\r\n      } else if (messageData.Type === 'removeremote') {\r\n        if (this.joinInfo.Attendee.AttendeeId === messageData.Data) {\r\n          this.setErrorMsg('Host removed you!');\r\n          await this.props.chime.leaveRoom(this.role === 'host');\r\n          sessionStorage.removeItem(this.ssName);\r\n\r\n          let blocks = JSON.parse(localStorage.getItem('blockedMeetings'));\r\n          if (!blocks) {\r\n            blocks = [];\r\n          }\r\n\r\n          blocks.push(this.joinInfo.Meeting.MeetingId);\r\n          localStorage.setItem('blockedMeetings', JSON.stringify(blocks));\r\n\r\n\r\n          const whereTo = `${this.baseHref}/${this.role === 'host' ? '' : 'removed'}`;\r\n          this.props.history.push(whereTo);\r\n          window.location.reload();\r\n        }\r\n      } else if (messageData.Type === 'makehost') {\r\n        if (this.joinInfo.Attendee.AttendeeId === messageData.Data) {\r\n          this.role = 'host';\r\n          const ssData = JSON.parse(sessionStorage.getItem(this.ssName));\r\n          ssData.role = this.role;\r\n          sessionStorage.setItem(this.ssName, JSON.stringify(ssData));\r\n          this.setErrorMsg('You are now a host!');\r\n        }\r\n      } else if (messageData.Type === 'gotolive') {\r\n        this.setState({ isLive: true, getStatus: 'received' });\r\n\r\n        if (this.state.isOverFlow && this.state.getOverFlowStatus === 'received') return;\r\n\r\n        await this.props.chime.joinRoom(this.audioElementRef.current);\r\n        if (messageData.Host === this.joinInfo.Attendee.AttendeeId) {\r\n          this.setErrorMsg('The session is now live!');\r\n          if (this.state.isLive) {\r\n            this.turnOnCamera();\r\n          }\r\n        } else {\r\n          this.setErrorMsg('The session is now live!');\r\n        }\r\n      } else if (messageData.Type === 'getlivestatus') {\r\n        this.setState({ getStatus: 'received' })\r\n        if (!this.state.isLive) {\r\n          this.setState({ isLive: messageData.status });\r\n          if (messageData.status && !this.state.isOverFlow && this.state.getOverFlowStatus === 'received') {\r\n            await this.props.chime.joinRoom(this.audioElementRef.current);\r\n          }\r\n        }\r\n\r\n      } else if (messageData.Type === 'beforepart') {\r\n        // if(!this.state.isLive && this.role === 'host') {\r\n        if (this.joinInfo.Attendee.AttendeeId !== messageData.Sender) {\r\n          let { participants } = this.state;\r\n          let isExisting = false;\r\n          participants.map(part => {\r\n            if (part.attendeeId === messageData.Sender) {\r\n              isExisting = true;\r\n              let isVideoChat = messageData.isVideoChat === 'true' ? true : false;\r\n              if (part.isVideoChat !== isVideoChat) {\r\n                part.isVideoChat = isVideoChat;\r\n              }\r\n            }\r\n\r\n            return part;\r\n          })\r\n          if (!isExisting) {\r\n            if (participants.length >= MAX_REMOTE_VIDEOS - 1) {\r\n              if (this.role === 'host') {\r\n                data = `{\r\n                  \"message\": \"sendmessage\",\r\n                  \"overflowId\": \"${messageData.Sender}\",\r\n                  \"status\": \"overflowed\",\r\n                  \"type\": \"overflow\"\r\n                }`;\r\n                connection.send(data);\r\n              }\r\n              return;\r\n            } else {\r\n              if (this.role === 'host') {\r\n                data = `{\r\n                  \"message\": \"sendmessage\",\r\n                  \"overflowId\": \"${messageData.Sender}\",\r\n                  \"status\": \"joinable\",\r\n                  \"type\": \"overflow\"\r\n                }`;\r\n                connection.send(data);\r\n              }\r\n            }\r\n            participants.push({\r\n              name: messageData.Name,\r\n              mute: false,\r\n              host: false,\r\n              raisehand: false,\r\n              attendeeId: messageData.Sender,\r\n              isVideoChat: messageData.isVideoChat === 'true' ? true : false,\r\n            });\r\n          }\r\n\r\n          this.setParts(participants);\r\n        }\r\n\r\n      } else if (messageData.Type === 'showableparts') {\r\n        if (this.role !== 'host') {\r\n          this.setState({ showAbleParts: messageData.showableparts });\r\n        }\r\n      } else if (messageData.Type === 'overflow') {\r\n        if (this.joinInfo.Attendee.AttendeeId === messageData.overflowId && this.state.getOverFlowStatus === 'waiting' && !this.state.isOverFlow) {\r\n          this.setState({ isOverFlow: messageData.status === 'overflowed' ? true : false, getOverFlowStatus: 'received' });\r\n\r\n          if (messageData.status !== 'overflowed' && this.state.isLive && this.state.getStatus === 'received') {\r\n            await this.props.chime.joinRoom(this.audioElementRef.current);\r\n          }\r\n        }\r\n      } else if (messageData.Type === 'disconnected') {\r\n        let { participants } = this.state;\r\n        const parts = participants.filter((o) => o.attendeeId !== messageData.Sender);\r\n        this.setParts(parts);\r\n      }\r\n\r\n    });\r\n\r\n    let data = `{\r\n      \"message\": \"sendmessage\",\r\n      \"type\": \"getall\"\r\n    }`;\r\n    connection.send(data);\r\n\r\n    data = `{\r\n      \"message\": \"sendmessage\",\r\n      \"title\": \"${this.title}\",\r\n      \"type\": \"getlivestatus\"\r\n    }`;\r\n    connection.send(data);\r\n\r\n    // if(!this.state.isLive && this.role !== 'host') {\r\n    let me = this;\r\n    setInterval(function () {\r\n      data = `{\r\n        \"message\": \"sendmessage\",\r\n        \"name\": \"${me.username}\",\r\n        \"isVideoChat\": \"${me.state.isVideoChat}\",\r\n        \"type\": \"beforepart\"\r\n      }`;\r\n      connection.send(data);\r\n\r\n      if (me.role === 'host') {\r\n        \r\n        data = {\r\n          \"message\": \"sendmessage\",\r\n          \"showableparts\": me.state.showAbleParts,\r\n          \"type\": \"showableparts\"\r\n        };\r\n        connection.send(JSON.stringify(data));\r\n      }\r\n\r\n    }, 5000)\r\n\r\n    // }\r\n\r\n    this.setState({ connection });\r\n  }\r\n\r\n  turnOnCamera = async () => {\r\n    if(this.isWebinar && this.role !== 'host') return;\r\n    try {\r\n      if (!this.props.chime.currentVideoInputDevice) {\r\n        const videoInputDevices = await this.props.chime.audioVideo.listVideoInputDevices();\r\n        let selectedDevice = videoInputDevices[0];\r\n        if (videoInputDevices.length >= 2) {\r\n          videoInputDevices.map(device => {\r\n            if (device.label.toLowerCase().includes('front')) {\r\n              selectedDevice = {\r\n                label: device.label,\r\n                value: device.deviceId\r\n              };\r\n            }\r\n\r\n            return device;\r\n          })\r\n        }\r\n\r\n        await this.props.chime.audioVideo.chooseVideoInputDevice(selectedDevice);\r\n      } else {\r\n        try {\r\n          const videoInputDevices = await this.props.chime.audioVideo.listVideoInputDevices();\r\n\r\n          let selectedDevice = this.props.chime.currentVideoInputDevice;\r\n          if (videoInputDevices.length >= 2) {\r\n            videoInputDevices.map(device => {\r\n              if (device.label.toLowerCase().includes('front')) {\r\n                selectedDevice = {\r\n                  label: device.label,\r\n                  value: device.deviceId\r\n                };\r\n              }\r\n\r\n              return device;\r\n            })\r\n          }\r\n\r\n          await this.props.chime.chooseVideoInputDevice(selectedDevice);\r\n\r\n        } catch (err) {\r\n          const videoInputDevices = await this.props.chime.audioVideo.listVideoInputDevices();\r\n          await this.props.chime.audioVideo.chooseVideoInputDevice(videoInputDevices[0]);\r\n        }\r\n      }\r\n\r\n      this.props.chime.audioVideo.startLocalVideoTile();\r\n    } catch (error) {\r\n      // eslint-disable-next-line\r\n      console.error(error);\r\n    }\r\n  }\r\n  openSettings = () => {\r\n    this.setState({ showSettings: true });\r\n  };\r\n\r\n  closeSettings = () => {\r\n    this.setState({ showSettings: false });\r\n  };\r\n\r\n  handleClick = (e) => {\r\n    const { showSettings } = this.state;\r\n    if (showSettings) {\r\n      let node = e.target;\r\n      let isModal = false;\r\n      while (node) {\r\n        if (\r\n          node &&\r\n          node.classList &&\r\n          node.classList.contains(\"modal__el\")\r\n        ) {\r\n          isModal = true;\r\n          break;\r\n        }\r\n        node = node.parentNode;\r\n      }\r\n      if (!isModal) {\r\n        this.setState({ showSettings: false });\r\n      }\r\n    }\r\n  };\r\n\r\n  saveSettings = (\r\n    playbackURL,\r\n    currentAudioInputDevice,\r\n    currentAudioOutputDevice,\r\n    currentVideoInputDevice\r\n  ) => {\r\n    this.setState({\r\n      showSettings: false,\r\n      currentAudioInputDevice,\r\n      currentAudioOutputDevice,\r\n      currentVideoInputDevice,\r\n    });\r\n  };\r\n\r\n  setMetadataId = (metadataId) => {\r\n    this.setState({ metadataId });\r\n  };\r\n\r\n  setErrorMsg = (errorMsg, isClosable = true) => {\r\n    this.setState({ errorMsg, showError: true, isClosable });\r\n  };\r\n\r\n  closeError = () => {\r\n    this.setState({ showError: false });\r\n  };\r\n\r\n  endButtonOnClick = async () => {\r\n    this.setState({ isAskForLeave: true });\r\n  }\r\n\r\n  askVideoOrObserver = () => {\r\n    if (this.role !== 'host') {\r\n    } else {\r\n      this.initChatConnection();\r\n    }\r\n  }\r\n\r\n  onVideoChat = () => {\r\n    this.setState({\r\n      isVideoChat: true,\r\n      isAsking: false\r\n    });\r\n    this.initChatConnection();\r\n  }\r\n\r\n  onObserverChat = () => {\r\n    this.setState({\r\n      isVideoChat: false,\r\n      isAsking: false\r\n    });\r\n    this.initChatConnection();\r\n  }\r\n\r\n  leaveroom = async (isEnd = false) => {\r\n    if(this.role === 'host' && isEnd) {\r\n      const data = `{\r\n        \"message\": \"sendmessage\",\r\n        \"title\": \"${this.title}\",\r\n        \"type\": \"endroom\"\r\n      }`;\r\n      this.state.connection.send(data);\r\n    }\r\n    \r\n    await this.props.chime.leaveRoom(this.role === 'host' && isEnd);\r\n    sessionStorage.removeItem(this.ssName);\r\n    const whereTo = `${this.baseHref}/${this.role === 'host' && isEnd ? '' : 'join?room=' + this.title}`;\r\n    this.props.history.push(whereTo);\r\n    window.location.reload();\r\n  }\r\n\r\n  handleMute = (localMuted) => {\r\n    this.setState({ muted: localMuted });\r\n  }\r\n\r\n  handlGoToLive = () => {\r\n    if(this.state.connection) {\r\n      const data = `{\r\n        \"message\": \"sendmessage\",\r\n        \"title\": \"${this.title}\",\r\n        \"type\": \"gotolive\"\r\n      }`;\r\n      this.state.connection.send(data);\r\n    }\r\n  }\r\n\r\n  setVideo = async () => {\r\n    if (this.state.showAbleParts.length >= 10) {\r\n      this.setErrorMsg('Sorry, all video chat slots are taken at the moment. Please wait for a slot to become free.');\r\n      return;\r\n    }\r\n    this.setState({\r\n      isVideoChat: true\r\n    });\r\n\r\n    await this.props.chime.meetingSession.audioVideo.stopLocalVideoTile();\r\n    this.turnOnCamera();\r\n  }\r\n\r\n  layout = () => {\r\n    if (this.state.meetingStatus !== \"Success\") {\r\n      return;\r\n    }\r\n\r\n    if (this.role === 'attendee' && (this.state.getOverFlowStatus === 'waiting' || this.state.getStatus === 'waiting')) {\r\n      return;\r\n    }\r\n\r\n    return (\r\n      <div className=\"meeting-grid\" onClick={this.handleClick}>\r\n        <div className=\"meeting-header\">\r\n          <img className=\"header-logo\" src={logo} alt=\"Logo\" />\r\n          <div className=\"body-logo\">\r\n            <span> SPONSORED BY: </span>\r\n            <img src={bodylogo} alt=\"body logo\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"main-body\">\r\n          {this.state.showSettings && (\r\n            <Settings\r\n              chime={this.props.chime}\r\n              joinInfo={this.joinInfo}\r\n              saveSettings={this.saveSettings}\r\n            />\r\n          )}\r\n          <div className=\"main-stage body-left\">\r\n            <div className=\"body-before\">\r\n              <div className=\"body-wrapper\">\r\n                {\r\n                  this.state.isVideoChat && (this.role === 'host' && this.isWebinar) &&\r\n                  <LocalVideo\r\n                    chime={this.props.chime}\r\n                    joinInfo={this.joinInfo}\r\n                    isLive={this.state.isLive}\r\n                    isLocalCamera={this.state.isLocalCamera}\r\n                    isWebinar={this.isWebinar}\r\n                  />\r\n                }\r\n\r\n                <div className=\"mobile-buttons\">\r\n                  {(!this.state.isVideoChat) &&\r\n                    <button className=\"join-video-mobile\" onClick={this.setVideo}>\r\n                      <span className=\"txt-onbtn\">Join Video Chat Now</span>\r\n                    </button>}\r\n\r\n                  {(!this.state.isLive && this.role === 'host') &&\r\n                    <button className=\"go-livebtn\" onClick={this.handlGoToLive}>\r\n                      <span className=\"txt-onbtn\">GO LIVE</span>\r\n                    </button>}\r\n\r\n                  {\r\n                    this.state.isLive &&\r\n                    <button className=\"live-meetingbtn txt-onbtn\" onClick={this.endButtonOnClick}>\r\n                      <span className=\"txt-onbtn\">{this.role === 'host' ? 'End Session' : 'LEAVE MEETING'}</span>\r\n                    </button>\r\n                  }\r\n\r\n                </div>\r\n                \r\n                \r\n                <div className=\"remote-cams\">\r\n                  <RemoteVideoGroup\r\n                    chime={this.props.chime}\r\n                    joinInfo={this.joinInfo}\r\n                    participants={this.state.participants}\r\n                    setParts={this.setParts}\r\n                    isOpenChat={this.state.showPopupMessage}\r\n                    showAbleParts={this.state.showAbleParts}\r\n                    isWebinar={this.isWebinar}\r\n                  />\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n            <div className=\"meeting-footer\">\r\n              <Controls\r\n                chime={this.props.chime}\r\n                baseHref={this.baseHref}\r\n                ssName={this.ssName}\r\n                title={this.title}\r\n                openSettings={this.openSettings}\r\n                role={this.role}\r\n                history={this.props.history}\r\n                myVideoElement={this.myVideoElement}\r\n                openChat={this.openChat}\r\n                openPT={this.openPT}\r\n                closeChat={this.hideModal}\r\n                isOpenChat={this.state.showPopupMessage}\r\n                joinInfo={this.joinInfo}\r\n                connection={this.state.connection}\r\n                handRaiseStatus={this.state.handRaiseStatus}\r\n                muted={this.state.muted}\r\n                setMute={this.handleMute}\r\n                isLive={this.state.isLive}\r\n                isLocalCamera={this.state.isLocalCamera}\r\n                setLocalCamera={this.setLocalCamera}\r\n                isVideoChat={this.state.isVideoChat}\r\n                setVideo={this.setVideo}\r\n                turnOnCamera={this.turnOnCamera}\r\n                isWebinar={this.isWebinar}\r\n              />\r\n            </div>\r\n          </div>\r\n          {/* {\r\n                      this.state.isVideoChat &&  */}\r\n          <div className=\"right-sidebar\">\r\n            {!this.state.showPopupMessage ? (\r\n              \" \"\r\n            ) : (\r\n              <button className={\"btnPopdownMessage btnPopupMessageFont\"} onClick={this.hideModal}>\r\n                <img src={vicon} alt=\"v right\" className={'vicon vright'} />\r\n              </button>\r\n            )}\r\n            {this.state.showPopupMessage ? (\r\n              \" \"\r\n            ) : (\r\n              <button className={\"btnPopupMessage btnPopupMessageFont\"} onClick={this.showModal}>\r\n                <img src={vicon} alt=\"v left\" className={'vicon vleft'} />\r\n                <span>{this.role === 'host' ? 'Q&A/PARTICIPANTS' : 'Q&A'}</span>\r\n              </button>\r\n            )}\r\n            {!this.state.showPopupMessage ? (\r\n              \" \"\r\n            ) : (\r\n              <Chat\r\n                chime={this.props.chime}\r\n                title={this.title}\r\n                username={this.username}\r\n                joinInfo={this.joinInfo}\r\n                closeChat={this.hideModal}\r\n                isChat={this.state.isChat}\r\n                changeTab={this.changeChat}\r\n                connection={this.state.connection}\r\n                messages={this.state.messages}\r\n                participants={this.state.participants}\r\n                role={this.role}\r\n                setErrorMsg={this.setErrorMsg}\r\n                isWebinar={this.isWebinar}\r\n              />\r\n            )}\r\n          </div>\r\n          {/* } */}\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  setLocalCamera = (status) => {\r\n    this.setState({ isLocalCamera: status });\r\n  }\r\n\r\n  setParts = (participants) => {\r\n    this.setState({ participants });\r\n\r\n    if (this.role === 'host') {\r\n      let showAbleParts = [];\r\n\r\n      showAbleParts.push(this.joinInfo.Attendee.AttendeeId);\r\n      if(!this.isWebinar) {\r\n        participants.map(part => {\r\n          if (showAbleParts.length < 9 && part.host) {\r\n            showAbleParts.push(part.attendeeId);\r\n          }\r\n  \r\n          return part;\r\n        });\r\n  \r\n        participants.map(part => {\r\n          if (showAbleParts.length < 9 && part.isVideoChat) {\r\n            showAbleParts.push(part.attendeeId);\r\n          }\r\n  \r\n          return part;\r\n        });\r\n      }\r\n      \r\n      this.setState({ showAbleParts });\r\n\r\n      const hosts = participants.filter(o => o.host);\r\n      const videos = participants.filter(o => o.isVideoChat);\r\n      const obs = participants.filter(o => !o.isVideoChat);\r\n\r\n      const data = `{\r\n        \"message\": \"sendmessage\",\r\n        \"title\": \"${this.title}\",\r\n        \"all\": \"${participants.length + 1}\",\r\n        \"hosts\": \"${hosts.length + 1}\",\r\n        \"videos\": \"${videos.length + 1}\",\r\n        \"parts\": \"${obs.length}\",\r\n        \"type\": \"updateroominfo\"\r\n      }`;\r\n      this.state.connection.send(data);\r\n    }\r\n\r\n    if (!this.state.showAbleParts.includes(this.joinInfo.Attendee.AttendeeId) && this.state.showAbleParts.length >= 9) {\r\n      // this.setErrorMsg('Sorry, all video chat slots are taken at the moment. Please wait for a slot to become free.');\r\n      this.setState({ isVideoChat: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isAvailable, isLive, isAsking, isOverFlow, getStatus, getOverFlowStatus, isClosable } = this.state;\r\n\r\n\r\n\r\n    if (isAsking && this.role === 'attendee') return <AlertAskVideoObserver onVideoChat={this.onVideoChat} onObserverChat={this.onObserverChat} />\r\n\r\n    if (this.role === 'attendee' && !isLive && getStatus === 'received') {\r\n      return <AlertWaiting />\r\n    }\r\n\r\n    if (isOverFlow && getOverFlowStatus === 'received') {\r\n      return <AlertHolding />\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {isAvailable && <Alert />}\r\n        {/* {(this.role === 'attendee' && !isLive && getStatus === 'received') && <AlertWaiting />} */}\r\n\r\n        {\r\n          this.state.isAskForLeave &&\r\n          <AlertAskLeaveRoom\r\n            role={this.role}\r\n            onLeave={() => this.leaveroom(false)}\r\n            onCancel={() => this.setState({ isAskForLeave: false })}\r\n            onEndSession={() => this.leaveroom(true)}\r\n          />\r\n        }\r\n        <audio ref={this.audioElementRef} style={{ display: \"none\" }} />\r\n\r\n        {this.layout()}\r\n\r\n        {this.state.showError && (\r\n          <Error\r\n            closeError={this.closeError}\r\n            errorMsg={this.state.errorMsg}\r\n            isClosable={isClosable}\r\n          />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nMeeting.propTypes = {\r\n  chime: PropTypes.object,\r\n};\r\n\r\nexport default withRouter(Meeting);\r\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport * as config from '../../config';\nimport Meeting from './Meeting';\nimport eventslogo from '../../assets/svgs/AAL-Events.svg';\n\nclass Host extends Component {\n\n  state = {\n    role: 'host',\n    username: '',\n    title: '',\n    errorMsg: '',\n    showError: false,\n    isGoToMeeting: false,\n  }\n\n  constructor() {\n    super ();\n    this.inputRef = React.createRef();\n    this.baseHref = config.BASE_HREF;\n  }\n\n  componentDidMount() {\n    const qs = new URLSearchParams(this.props.location.search);\n    const room = qs.get('room');\n    const username = qs.get('username');\n\n    this.setState({\n      title: room,\n      username\n    });\n\n    if(username && room) {\n      const data = {\n        username,\n        title: room,\n        role: this.state.role,\n        playbackURL: config.DEFAULT_VIDEO_STREAM,\n      }\n\n      sessionStorage.setItem(`chime[${room}]`, JSON.stringify(data));\n\n      this.setState({isGoToMeeting: true});\n      // this.props.history.push(`${this.baseHref}/meeting?room=${room}&username=${username}`);\n    }\n  }\n\n  handleNameChange = e => {\n    this.setState({ username: e.target.value })\n  }\n\n  handleJoinRoom = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.joinRoom();\n  }\n\n  joinRoom = async () => {\n    const { username, title } = this.state;\n    const data = {\n      username,\n      title,\n      role: this.state.role,\n      playbackURL: config.DEFAULT_VIDEO_STREAM,\n    }\n    sessionStorage.setItem(`chime[${title}]`, JSON.stringify(data));\n    this.setState({isGoToMeeting: true});\n    this.props.history.push(`${this.baseHref}/NA25KW8TFW?room=${title}&username=${username}`);\n  }\n\n  render() {\n    const { username, isGoToMeeting } = this.state;\n    const joinRoomDisabled = !username;\n\n    if (isGoToMeeting) {\n      return <Meeting chime={this.props.chime}/>\n    }\n    return (\n      <div className=\"welcome\" onClick={this.handleClick}>\n\n        <div className=\"welcome__content\">\n          <div className=\"content__inner\">\n            {/* <h2 className=\"all-about-law\">ALLABOUTLAW</h2>\n            <h2 className=\"events-title\">EVENTS</h2> */}\n            <img src={eventslogo} alt=\"logo\" className=\"events-logo\"/>\n            <h2 className=\"join-as-host-part-title\">Join as a host</h2>\n            <form action=\"\">\n              <fieldset className=\"mg-b-2\">\n                <input className=\"join-info-text\" type=\"text\" placeholder=\"Enter display name\" value={username} ref={this.inputRef} onChange={this.handleNameChange} />\n                <button className=\"join-btn\" disabled={joinRoomDisabled} onClick={this.handleJoinRoom}>JOIN SESSION</button>\n              </fieldset>\n            </form>\n          </div>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Host);\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport * as config from '../../config';\r\n\r\nclass End extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.baseHref = config.BASE_HREF;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"welcome\">\r\n        \r\n        <div className=\"welcome__content\">\r\n          <div className=\"content__inner\">\r\n            <h2 className=\"all-about-law\">Room closed</h2>\r\n            <h2 className=\"join-as-host-part-title\">The host has ended the meeting and closed the room.</h2>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(End);\r\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\n// Styles\nimport \"./Alert.css\";\nimport logo from \"./../../assets/Logo.svg\";\n\nclass AlertRemoved extends Component {\n\n    render() {\n        return(\n        <div className={\"alert-container\"}>\n            <div className={\"alert-back-drop\"}>\n            </div>\n            <div className={\"alert-content\"}>\n                <img className=\"alert-logo\" src={logo} alt=\"Logo\" />\n                <p>Sorry, you have been removed from the session by the host.</p>\n                <p>Unfortunately, you cannot rejoin.</p>\n            </div>\n        </div>\n        );\n        \n    }\n}\n\nexport default withRouter(AlertRemoved);","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport * as config from '../config';\r\n// import './App.css';\r\n\r\nimport ChimeSdkWrapper from './chime/ChimeSdkWrapper';\r\n\r\nimport Home from './chimeWeb/Welcome';\r\nimport Join from './chimeWeb/Join';\r\nimport Host from './chimeWeb/Host';\r\nimport Meeting from './chimeWeb/Meeting';\r\nimport End from './chimeWeb/End';\r\nimport AlertRemoved from './chimeWeb/AlertRemoved';\r\n\r\nfunction App() {\r\n  const chime = new ChimeSdkWrapper();\r\n  const baseHref = config.BASE_HREF;\r\n\r\n  return (\r\n    <div className=\"App full-width full-height\">\r\n      <Router>\r\n        <Switch>\r\n          <Route path={`${baseHref}/removed`}>\r\n            <AlertRemoved/>\r\n          </Route>\r\n          <Route path={`${baseHref}/end`}>\r\n            <End />\r\n          </Route>\r\n          <Route path={`${baseHref}/meeting`}>\r\n            <Meeting\r\n              chime={chime}\r\n            />\r\n          </Route>\r\n          <Route path={`${baseHref}/join`}>\r\n            <Join\r\n              chime={chime}\r\n            />\r\n          </Route>\r\n\r\n          <Route path={`${baseHref}/NA25KW8TFW`}>\r\n            <Host\r\n              chime={chime}\r\n            />\r\n          </Route>\r\n          \r\n          <Route path={`${baseHref}`}>\r\n            <Home\r\n              chime={chime}\r\n            />\r\n          </Route>\r\n\r\n          \r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\nwindow.addEventListener('resize', () => {\r\n  // Update the element's size\r\n  let vh = window.innerHeight * 0.01;\r\n  document.documentElement.style.setProperty('--vh', `${vh}px`);\r\n  // alert(vh);\r\n});"],"sourceRoot":""}